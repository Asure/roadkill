***
*** FILE: DRHITMSK.ASM
*** MAKE HIT
***
*** JFL 09 NOV 92
*** JFL 25 MAR 93; 32 ROTS PER CAR
***

	.MLIB	"APMACS.LIB"
	.FILE	"DRHITMSK.ASM"
	.TITLE	"<<< DERBY RACE -- HIT MASK >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

**
** COMPILE FLAGS
**

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

	.INCLUDE	"AP.H"
	.INCLUDE	"DR.I"
	.INCLUDE	"DRHITMSK.I"
	.INCLUDE	"DRFMASK.I"

	.IF MAKEHITMASK
	
** OTHERS USE
	.DEF	MAKEHITDATA	;DRMAKHIT.ASM

** WE USE

	.TEXT
	.EVEN

**
** DEFINES
**
DIRRESOLUTION	EQU	8H	;DIR INCREMENTS FOR CAR
DIRMAX		EQU	100H	;LAST DIR
	
**
** CAR HIT STRUCT
**
** JFL 09 NOV 92
**
CHPSIZEOF	EQU	5
CHPSIZE 	EQU	20H
CHPMAX		EQU	DIRMAX/DIRRESOLUTION

CHMMMIN		EQU	000H		;UHW MINMAX ARRAY MIN
CHMMMAX		EQU	010H		;UHW MINMAX ARRAY MAX
CHMINMAXSIZE	EQU	020H		; SIZE OF ONE ENTRY
CHMINMAXSIZEOF	EQU	5		; SIZEOF ONE ENTRY

CHP0		EQU	000H		;UHL
CHPX		EQU	CHP0+(CHPSIZE*CHPMAX)
CHWIDTH		EQU	CHPX		;UHW (ROWBYTES)
CHHEIGHT	EQU	CHPX+10H	;UHW
CHLEFT		EQU	CHPX+20H	;UHW
CHTOP		EQU	CHPX+30H	;UHW
CHBMAP		EQU	CHPX+40H	;UHL PTR TO BYTE MAP
CHANIOFF	EQU	CHPX+60H	;UHL Y:X
CHMINMAXTBL	EQU	CHPX+80H 	; ARRAY OF WORDS MIN,MAX

	.BSS	SCRATCH16K,16*1024*8
	.BSS	SCRATCH16KX,0

**
** MAKEHITDATA
**
** JFL 09 NOV 92
**
MAKEHITDATA
	PUSHST
	DINT

	;GET FIRST CAR
	MOVL	@SUPPLSTS+SUPL_CAR,A8
	JRZ	MHDX

	;GET DEST
	MOVI	SCRATCH16K,A1

	;LEAVE ROOM AT TOP FOR OUR STRUCT
	MOVI	SCRATCH32K,A6
	MOVE	A6,A9
	MOVE	A6,A14
	ADDI	HMTOTSIZE,A14
	MOVL	A14,*A1(CHBMAP)

	;SET INIT DIR
	CLR	A7

	;REG USE
	;  A0 
	;  A1 CAR HIT STRUCT
	;  A2,A3,A4 SCRATCH
	;  A5 DST PT
	;  A6 HIT MASK FOR THIS DIR
	;  A7 DIR
	;  A8 OBJ
	;  A9 START OF HM MEM
	;

MHDLOOP

	;SET UP FOR THIS DIR
	MOVE	A7,A2
	CALLR	GETTIREPOINTS ;IN A1,A2,A8 CH,DIR,OBJ
	CALLR	SETCHINFO ;IN:A1 CH
	
	;FIND FIRST POINT AFTER TIRES
	MOVE	A1,A5
	ADDI	TIREAREAS*CHPSIZE,A5
   	
	;FIND ALL THE THIRDS
	MOVI	DEFPOINTSCRIPT,A0
	CALLR	FINDTHIRDS ;IN:A0,A1 SCRIPT,CH
	
	;SCALE
	CALLR	SCALETHINGS ;IN:A1 CH

	;CLEAR THE AREA
	CALLR	CLEARAREA ;IN:A1 CH

	;FILL THE AREAS
	MOVI	FILLPOINTSCRIPT,A0
	CALLR	FILLAREAS ;IN:A0,A1 SCRIPT,CH

	;FILL IN INFO AT TOP
	MOVL	*A1(CHANIOFF),*A6(HMANIOFF)
	MOVL	*A1(CHBMAP),A14
	MOVE	A14,A4
	SUB	A9,A14			;GET OFFSET
	SRA	HMOFFSETSHIFT,A14

	.IF DEBUG
	LOCKON	N
	CMPI	0FFFFH,A14
	LOCKON	GT
	.ENDIF ;DEBUG

	MOVW	A14,*A6(HMOFFSET)
	MOVW	*A1(CHWIDTH),A2
	.IF DEBUG
	CMPI	07FH,A2
	LOCKON	GT
	.ENDIF ;DEBUG
	MOVB	A2,*A6(HMWIDTH)
	MOVW	*A1(CHHEIGHT),A3
	.IF DEBUG
	CMPI	07FH,A3
	LOCKON	GT
	.ENDIF ;DEBUG
	MOVB	A3,*A6(HMHEIGHT)
	SLL	3,A2			;SIZEOF BYTE
	MPYU	A2,A3
	ADD	A3,A4
	MOVL	A4,*A1(CHBMAP)


	;NEXT DIR
	ADDI	HMSIZE,A6	;NEXT HM HEAD
	ADDK	DIRRESOLUTION,A7		;NEXT DIR
	CMPI	DIRMAX,A7
	JRLT	MHDLOOP

MHDX
	POPST
	NOP ;A9 START, A6 END
	RETS

**
** GETTIREPOINTS
**
** IN
**   A1 CH
**   A2 DIR
**   A8 OBJ
**
** FILL IN FIRST FOUR POINTS FROM HIT DATA
**
** JFL 09 NOV 92
** JFL 11 NOV 92; USE POINT TABLE IN IHDR
**
GETTIREPOINTS
	MMTM	SP,A0,A1,A4,A5

	;GET IMAGE LIST FOR THIS DIR
	MOVE	A1,A4			;SAVE
	CLR	A14
	MOVW	A14,*A8(OSTATE)
	MOVW	A2,*A8(ODIR)
	SLL	24,A2			;SIGN SHIT
	SRL	24+SR_DIR2CAR,A2
	SLL	SL_CAR2OFF,A2
	MOVL	*A8(OIMGTBL),A14
	ADD	A14,A2
	MOVL	*A2+,A1			;IHDR
	MOVW	*A2,A2			;CTRL
	MOVE	A1,A5

	;GET ANIOFF
	MOVL	*A5(IANIOFF),A0

	;LOOP THROUGH THE FOUR TIRES
	MOVK	TIREAREAS,A3
	ADDI	CHP0,A4

	;REG USE
	;  A0 ANIOFF Y:X
	;  A1 SRC
	;  A2 OFLAGS, SCRATCH
	;  A3 TIRE COUNT
	;  A4 DST
	;  A5 IHDR
	;  A8 OBJ

	BTST	B_FLIPV,A2
	LOCKON	NZ ;NOT SET UP FOR THIS
	BTST	B_FLIPH,A2
	JRNZ	GTPHFLIP

	;SRC AT FIRST
	ADDI	IPT4,A1

GTPLOOP
	;FIND PT - ANIOFF
	MOVL	*A1+,A14
	SUBXY	A0,A14
	MOVL	A14,*A4+
	DSJS	A3,GTPLOOP
	JRUC	GTPX

GTPHFLIP
	;PLACE SRC PAST LAST & GET WIDTH
	ADDI	IPT0+(TIREAREAS*IPTSIZE),A1
	
GTPHFLOOP
	;Y OF POINT
	MOVE	A0,A2
	SRA	16,A2		;ISOLATE ANIY
	MOVW	*-A1,A14	;GET PTY
	SUB	A2,A14		;PTY - ANIY
	MOVW	A14,*A4(10H)

	;X OF POINT
	MOVE	A0,A2
	SEXT	A2,W	
	MOVW	*-A1,A14	;GET PTY
	SUB	A14,A2		;ANIY - PTY
	MOVW	A2,*A4

	ADDK	32,A4
	DSJS	A3,GTPHFLOOP

GTPX
	MMFM	SP,A0,A1,A4,A5
	RETS

**
** SCALETHINGS
**
** JFL 11 NOV 92
**
SCALETHINGS
	MOVW	*A1(CHWIDTH),A14
	INC	A14
	SRL	HMRSHIFT,A14
	MOVW	A14,*A1(CHWIDTH)
	MOVW	*A1(CHHEIGHT),A14
	INC	A14
	SRL	HMRSHIFT,A14
	MOVW	A14,*A1(CHHEIGHT)
	MOVW	*A1(CHLEFT),A14
	SRA	HMRSHIFT,A14
	MOVW	A14,*A1(CHLEFT)
	MOVW	*A1(CHTOP),A14
	SRA	HMRSHIFT,A14
	MOVW	A14,*A1(CHTOP)

	MOVI	CHPMAX*2,A3
	MOVE	A1,A2
	ADDI	CHP0,A2
STLOOP
	MOVW	*A2,A14
	SRA	HMRSHIFT,A14	
	MOVW	A14,*A2+
	DSJS	A3,STLOOP

	RETS

**
** FILLPOINTSCRIPT
**
** ORDERING FOR FILLING
** POINTS GO CLOCKWISE
** I.E. .WORD 0,1,2,3 SHOULD EXPAND INTO SEGMENTS 0,1 1,2 2,3 3,0
**
** JFL 09 NOV 92
**
FILLPOINTSCRIPT
	.WORD	0,11,12,4
	.WORD	5,13,6,1
	.WORD	15,8,2,7
	.WORD	10,3,9,14
	.WORD	11,10,14,12
	.WORD	4,12,13,5
	.WORD	13,15,7,6
	.WORD	14,9,8,15
	.WORD	12,14,15,13
	.WORD	0,0,0,0

**
** FILLDATATBL
**
** 00000000 -- AREA OFF
** 1XXXXXXX -- AREA ON, XXXXXXX == VALUE
**
** JFL 09 NOV 92
** JFL 15 NOV 92; FILL MIDDLE WITH 84H
**
FILLDATATBL
	.BYTE	80H,81H,82H,83H,84H,85H,86H,87H,84H
	.EVEN

**
** DEFPOINTSCRIPT
**
** THIS SETS UP THE NUMBERING OF POINTS 4..15
** WHERE POINTS 0..3 ARE AS ALWAYS
**
** 00 11 10 03
** 04 12 14 09
** 05 13 15 08
** 01 06 07 02
**
** JFL 09 NOV 92 
**
DEFPOINTSCRIPT
	.WORD	0,1,1,2,2,3,3,0,11,6,10,7
	.WORD	0,0

**
** SETCHINFO
**
** IN
**   A1 CH
**
** JFL 10 NOV 92
** JFL 11 NOV 92
**
SETCHINFO
	MMTM	SP,A4,A5,A6,A7
	
	;FIND [Y:X] OF TIRES
	MOVI	[1,0],A2
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B
	MOVE	A2,A4
	MOVE	A3,A5
	MOVI	[3,2],A2
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B
	
	;FIND TOPMOST,BOTTOMMOST,LEFTMOST,AND RIGHTMOST POINTS
	CALLR	FINDMINX ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]WINNER
	MOVE	A14,A6
	MOVW	A14,*A1(CHLEFT)
	MOVW	A14,*A1(CHANIOFF)
	CALLR	FINDMAXX ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]WINNER
	SUBXY	A6,A14
	MOVW	A14,*A1(CHWIDTH)

	CALLR	FINDMINY ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]WINNER
	MOVE	A14,A6
	SRL	16,A14
	MOVW	A14,*A1(CHTOP)
	MOVW	A14,*A1(CHANIOFF+10H)
	CALLR	FINDMAXY ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]WINNER
	SUBXY	A6,A14
	SRL	16,A14
	MOVW	A14,*A1(CHHEIGHT)

	MMFM	SP,A4,A5,A6,A7
	RETS

**
** CLEARAREA
**
** IN
**   A1 CH
**
** JFL 09 NOV 92
**
CLEARAREA
	MOVW	*A1(CHWIDTH),A2
	MOVW	*A1(CHHEIGHT),A3
	MPYU	A2,A3			;BYTES TO CLEAR

	CLR	A14
	MOVL	*A1(CHBMAP),A2
	SETF	8,1,0
CALOOP
	MOVE	A14,*A2+
	DSJS	A3,CALOOP
	SETF	16,1,0
	
	RETS

**
** FILLAREAS
**
** IN
**   A0 SCRIPT
**   A1 CH
**
** JFL 09 NOV 92
**
FILLAREAS
	MMTM	SP,A4,A5,A6,A11
	
	CLR	A11

FALOOP
	;FIND POINTS Y:X
	MOVL	*A0+,A2
	JRZ	FAX
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B
	MOVE	A2,A4
	MOVE	A3,A5

	;FIND POINTS Y:X
	MOVL	*A0+,A2
	JRZ	FAX
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B
	
	;GET THE FILL COLOR
	MOVE	A11,A6
	SLL	3,A6			;SIZEOF FILLDATATBL
	ADDI	FILLDATATBL,A6
	MOVB	*A6,A6

	;FILL THE AREA
	CALLR	FILLONE ;IN: A1,A2,A3,A4,A5,A6 CH,P0,P1,P2,P3,FILLDATA

	;NEXT FILL
	INC	A11
	JRUC	FALOOP
FAX
	MMFM	SP,A4,A5,A6,A11
	RETS

CHMIN	EQU	-512
CHMAX	EQU	512

**
** CLEARMINMAXTBL
**
** IN
**   A1 CH
**  A14 HEIGHT
**
** JFL 09 NOV 92
**
CLEARMINMAXTBL
	MMTM	SP,A2,A3

	;FIND START OF MINMAXTBL
	MOVE	A1,A2
	ADDI	CHMINMAXTBL,A2
	MOVI	[CHMIN,CHMAX],A3
CMMTLOOP
	MOVL	A3,*A2+
	DSJS	A14,CMMTLOOP
	
	MMFM	SP,A2,A3
	RETS

**
** FINDMINY
**
** IN
**   A2-A5 P0-P3
** OUT
**  A14 [Y:X]MINY
**
** JFL 10 NOV 92
**
FINDMINY
	MOVE	A2,A14
	CMPXY	A14,A3
	JRYGE	FMIN1
	MOVE	A3,A14
FMIN1
	CMPXY	A14,A4
	JRYGE	FMIN2
	MOVE	A4,A14
FMIN2
	CMPXY	A14,A5
	JRYGE	FMIN3
	MOVE	A5,A14
FMIN3
	RETS

**
** FINDMINX
**
** IN
**   A2-A5 P0-P3
** OUT
**  A14 [Y:X]MINY
**
** JFL 10 NOV 92
**
FINDMINX
	MOVE	A2,A14
	CMPXY	A14,A3
	JRXGE	FMINX1
	MOVE	A3,A14
FMINX1
	CMPXY	A14,A4
	JRXGE	FMINX2
	MOVE	A4,A14
FMINX2
	CMPXY	A14,A5
	JRXGE	FMINX3
	MOVE	A5,A14
FMINX3
	RETS


**
** FINDMAXY
**
** IN
**   A2-A5 P0-P3
** OUT
**  A14 [Y:X]MAXY
**
** JFL 10 NOV 92
**
FINDMAXY
	MOVE	A2,A14
	CMPXY	A14,A3
	JRYLE	FMAX1
	MOVE	A3,A14
FMAX1
	CMPXY	A14,A4
	JRYLE	FMAX2
	MOVE	A4,A14
FMAX2
	CMPXY	A14,A5
	JRYLE	FMAX3
	MOVE	A5,A14
FMAX3
	RETS

**
** FINDMAXX
**
** IN
**   A2-A5 P0-P3
** OUT
**  A14 [Y:X]MAXY
**
** JFL 10 NOV 92
**
FINDMAXX
	MOVE	A2,A14
	CMPXY	A14,A3
	JRXLE	FMAXX1
	MOVE	A3,A14
FMAXX1
	CMPXY	A14,A4
	JRXLE	FMAXX2
	MOVE	A4,A14
FMAXX2
	CMPXY	A14,A5
	JRXLE	FMAXX3
	MOVE	A5,A14
FMAXX3
	RETS

**
** FILLONE
**
** IN
**   A1 CH
**   A2,A3,A4,A5 P0-P3
**   A6 FILL COLOR
**
** JFL 09 NOV 92
**
FILLONE
	MMTM	SP,A4,A7,A8,A9

	;FIND TOP & BOTTOM
	CALLR	FINDMINY ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]MINY	
	MOVE	A14,A8
	MOVE	A8,A9
	CALLR	FINDMAXY ;IN:A2,A3,A4,A5 P0-P3 OUT:A14 [Y:X]MAXY	
	
	;FIND HEIGHT OF AREA
	SUBXY	A8,A14
	SRL	16,A14
	MOVE	A14,A8			;A8 IS HEIGHT OF AREA
	
	;CLEAR MINMAXTBL
	CALLR	CLEARMINMAXTBL ;IN: A1,A14 CH,HEIGHT
	
	;RUN THROUGH ALL THE LINE SEGMENTS AND FILL MINMAXTBL
	CALLR	FILLMINMAX ;IN:A1,A2-A5,A9 CH,P0-P3,[Y:X]BASE

	;FILL THE BYTE MAP
	MOVE	A8,A2
	MOVE	A9,A3
	MOVE	A6,A4
	CALLR	FILLBYTEMAP ;IN:A1,A2,A3,A4 CH,HEIGHT,[Y:X]BASE,COLOR

	MMFM	SP,A4,A7,A8,A9
	RETS

**
** FILLBYTEMAP
**
** IN
**   A1 CH
**   A2 HEIGHT
**   A3	[Y:X]BASE -- TOPMOST POINT
**   A4 COLOR
**
** JFL 10 NOV 92
**
FILLBYTEMAP
	MMTM	SP,A0,A5,A6,A7,A8,A9
	
	MOVE	A2,A5		;HEIGHT

	;FIND STARTING ROW
	SRA	16,A3		
	MOVW	*A1(CHTOP),A2
	SUB	A2,A3

	.IF DEBUG
	LOCKON	N
	MOVW	*A1(CHHEIGHT),A14
	CMP	A14,A3
	LOCKON	GE
	.ENDIF ;DEBUG
	
	;GET STARTING ADDRESS
	MOVW	*A1(CHWIDTH),A6		;ROWBYTES
	SLL	3,A6			;SIZEOF BYTE
	MPYU	A6,A3
	MOVL	*A1(CHBMAP),A7
	ADD	A3,A7
	
	;GET MINMAXTBL
	MOVE	A1,A0
	ADDI	CHMINMAXTBL,A0

	MOVW	*A1(CHLEFT),A8

	;REG USE
	;  A0 MINMAXTBL
	;  A1 CH
	;  A2,A3 SCRATCH
	;  A4 COLOR
	;  A5 HEIGHT
	;  A6 ROWBYTES
	;  A7 DST
	;  A8 LEFT
	;  A9 MIN TMP

FBMNEWROW
	;DO ONE ROW
	MOVE	A7,A2

	;FIND INDEX INTO ROW
	MOVW	*A0(CHMMMIN),A3
	MOVE	A3,A9
	SUB	A8,A3			;SUB OUT THE BASE X
	LOCKON	N
	
	;FIRST BYTE INTO ROW
	SLL	3,A3			;SIZEOF BYTE
	ADD	A3,A2			;NUMBER OF BYTES INTO ROW

	;FIND WIDTH OF ROW
 	MOVW	*A0(CHMMMAX),A3
	SUB	A9,A3	 		;WIDTH OF ROW

	.IF DEBUG
	LOCKON	N
	MOVW	*A1(CHWIDTH),A14
	CMP	A14,A3
	LOCKON	GE
	.ENDIF ;DEBUG
	
	SETF	8,1,0
FBMLOOP	
	;SET THIS DOT
	MOVE	A4,*A2+	
	DEC	A3
	JRP	FBMLOOP

	SETF	16,1,0

	;NEXT ROW
	ADDK	CHMINMAXSIZE,A0		;NEXT MINMAXTBL
	ADD	A6,A7			;NEXT ROW IN BYTEMAP
	DSJ	A5,FBMNEWROW
	
	
	MMFM	SP,A0,A5,A6,A7,A8,A9
	RETS

**
** FILLMINMAX
**
** IN
**   A1 CH
**   A2-A5 P0-P3
**   A9 [Y:X]BASE
**
** JFL 09 NOV 92
**
FILLMINMAX
	MMTM	SP,A0,A6,A7,A8
	
	;GET MINMAXTBL START
	MOVE	A1,A0
	ADDI	CHMINMAXTBL,A0

	;SAVE POINTS
	MOVE	A2,B4				;SAVE
	MOVE	A3,B5				;SAVE
	MOVE	A4,B6				;SAVE
	MOVE	A5,B7				;SAVE

	;DO A SEG
	MOVE	B4,B2
	MOVE	B5,B0
	MOVE	A9,A2
	MOVI	DOTMINMAX,B1 ;IN:A0,A2,A3,A4 MINMAXTBL,[Y:X]BASE,SC,SC
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]

	;DO A SEG
	MOVE	B5,B2
	MOVE	B6,B0
	MOVE	A9,A2
	MOVI	DOTMINMAX,B1 ;IN:A0,A2,A3,A4 MINMAXTBL,[Y:X]BASE,SC,SC
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]

	;DO A SEG
	MOVE	B6,B2
	MOVE	B7,B0
	MOVE	A9,A2
	MOVI	DOTMINMAX,B1 ;IN:A0,A2,A3,A4 MINMAXTBL,[Y:X]BASE,SC,SC
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]

	;DO A SEG
	MOVE	B7,B2
	MOVE	B4,B0
	MOVE	A9,A2
	MOVI	DOTMINMAX,B1 ;IN:A0,A2,A3,A4 MINMAXTBL,[Y:X]BASE,SC,SC
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]

	MMFM	SP,A0,A6,A7,A8
	RETS

**
** FINDTHRIDS
**
** IN
**   A0 POINT SCRIPT
**   A2,A3 SCRATCH
**   A5 CH
**
**
** JFL 09 NOV 92
**
FINDTHIRDS
	MMTM	SP,A4,A6,A7

FTLOOP
	;FIND DISTANCE BETWEEN P0 & P1
	MOVL	*A0,A2		;GET POINTA:B
	JRZ	FTX
	CALLR	FINDDX ;IN: A1,A2 CH,PA:B OUT: A2 DX BETWEEN PA&B
	
	;DIVIDE DX
	MOVE	A2,A3
	MOVK	3,A2
	DIVU	A2,A3
	MOVE	A3,A4		;1/3

	;FIND POINT 1/3 & 2/3 DOWN LINE	
	MOVL	*A0,A2			;GET POINTA:B
	CALLR	FINDPOINTDX ;IN: A1,A2,A3 CH,PA:B,DX OUT: A2 Y:X
	MOVE	A2,A6
	MOVL	*A0,A2			;GET POINTA:B
	MOVE	A4,A3
	SLL	1,A3		;2/3
	CALLR	FINDPOINTDX ;IN: A1,A2,A3 CH,PA:B,DX OUT: A2 Y:X
	MOVE	A2,A7
	
	MOVL	A6,*A5+
	MOVL	A7,*A5+
	
	ADDK	32,A0
	JRUC	FTLOOP
FTX
	MMFM	SP,A4,A6,A7
	RETS

**
** FINDPOINTDX
**
** IN
**   A1 CH
**   A2 [PA:PB]
**   A3 DX
** OUT
**   A2 [Y:X]
**
** JFL 09 NOV 92
**
FINDPOINTDX
	MOVE	A3,B0

	;FIND POINTS Y:X
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B

	;SET UP FOR LINE
	MOVE	A2,B2
	MOVE	B0,A2
	MOVE	A3,B0
	MOVI	DOTCOUNTSET,B1 ;IN:A2 COUNT OUT:A3 Y:X
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]
	MOVE	A3,A2
	RETS

**
** FINDDX
**
** IN
**   A1 CH
**   A2 [POINTA,POINTB]
** OUT
**   A2 DISTANCE BETWEEN POINTS
**
** JFL 09 NOV 92
**
FINDDX
	;FIND POINTS Y:X
	CALLR	FINDPAB ;IN:A1,A2 CH,[PA:B] OUT:A2,A3 [Y:X]A,[Y:X]B

	;SET UP FOR LINE
	MOVE	A2,B2
	MOVE	A3,B0
	MOVI	DOTCOUNT,B1
	CLR	A2
	CALLR	LINE ;IN:B0,B1,B2 [YE:XE],DOT(),[YS:XS]
	
	RETS

**
** FINDPAB
**
** IN
**   A1 CH
**   A2 [A:B]
** OUT
**   A2 Y:X OF A
**   A3 Y:X OF B
**
** JFL 09 NOV 92
**
FINDPAB
	;FIND POINTS A & B
	MOVE	A2,A3
	ZEXT	A2,W
	SLL	CHPSIZEOF,A2		;SIZEOF POINT
	ADD	A1,A2
	MOVL	*A2,A2
	SRL	16,A3
	SLL	CHPSIZEOF,A3		;SIZEOF POINT
	ADD	A1,A3
	MOVL	*A3,A3
	RETS

**
** DOTMINMAX
**
** IN
**   A0 MINMAXTBL
**   A2 [Y:X]BASE
**   A3 SCRATCH
**   A4 SCRATCH
**   B2 [Y:X]
**
** JFL 10 NOV 92
**
DOTMINMAX

	;FIND INDEX INTO MINMAXTBL
	MOVE	B2,A4
	SUBXY	A2,A4
	SRL	16,A4
	SLL	CHMINMAXSIZEOF,A4
	ADD	A0,A4
	MOVL	*A4,A3			;MAX:MIN
	
	;CHECK THIS X
	MOVE	B2,A14			;Y:X	
	CMPXY	A3,A14
	JRXGE	DMMNOTSMALL
	MOVW	A14,*A4(CHMMMIN)
DMMNOTSMALL
	SLL	16,A14			;X:0
	CMPXY	A3,A14
	JRYLE	DMMNOTBIG
	SRL	16,A14
	MOVW	A14,*A4(CHMMMAX)
DMMNOTBIG
	
	RETS
**
** DOTCOUNT
**
** IN
**   A2 PREV COUNT
**
** JFL 09 NOV 92
**
DOTCOUNT
	INC	A2
	RETS

**
** DOTCOUNTSET
**
** IN
**   A2 COUNT
** OUT
**   A3 Y:X WHEN COUNT WAS ZERO
**
** JFL 09 NOV 92
**
DOTCOUNTSET
	DSJS	A2,DCSX
	MOVE	B2,A3
DCSX
	RETS


**
** LINE
**
**  B2 [YS,XS]
**  B0 [YE,XE]
**  B1 ROUTINE TO CALL EVERY POINT
**
** FROM PG. 251
**
** JFL 21 AUG 92
** JFL 13 NOV 92; HORIZ BUG FIX
**
LINE
	MMTM	SP,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14

	SUBXY	B2,B0		;CALC A & B
	
	;SET B7 = (A,B) B11 = (DXDIAG,DYDIAG)
	;ASSUME A<0 AND B<0 IF A>=0 OR B>=0 MAKE CORRECTIONS LATER
	SUBB	B11,B11		;DXDIAG = DYDIAG = -1 (B NEG) OR 0 (B POS)
	MOVK	1,B10
	CLR	B7
	SUBXY	B0,B7		;B7 = (-A,-B)
	JRZ	L0		;JR IF B=0 <- ADDED FOR HORIZ BUG FIX JFL
	JRNC	L1		;JR IF B<0

L0
	;DEAL WITH B >= 0
	MOVY	B0,B7		;TAKE ABS VAL OF B
	NOT	B11		;DXDIAG = DYDIAG = -1
	SRL	15,B11		;DYDIAG = +1
L1
	JRNV	L2		;JR IF A < 0
	
	;DEAL WITH A >= 0
	MOVX	B0,B7		;ABS OF A
	MOVX	B10,B11		;DXDIAG = +1
L2
	;COMPARE MAG OF A & B
	CLR	B12		;DXNDIAG = DYNDIAG = 0
	MOVE	B7,B0		;COPY A & B
	SRL	16,B0		;MOVE B INTO 16 LSB
	CMPXY	B0,B7
	JRV	L3		;JR IF A < B
	
	;CASE A >= B
	MOVX	B11,B12		;DXNDIAG = DXDIAG, DYNDIAG = 0
	JRUC	L4
L3
	;CASE A < B
	MOVX	B7,B0		;B0 = B
	RL	16,B7		;SWAP A & B HALVES
	MOVY	B11,B12		;DXNDIAG = 0, DYNDIAG = DYDIAG
L4
	;CALC INIT VAL OF D & LOOP COUNTER
	ADD	B0,B0		;B0 = 2*B
	MOVE	B0,B3		;B3 = NDIAGINC = 2*B
	MOVX	B7,B10		;B10 = A
	SUB	B10,B0		;B0 = D = 2*B-A
	MOVE	B0,B4		;B4 = DIAGINC
	SUB	B10,B4		;DIAGINC = D - A
	ADDK	1,B10		;LOOP COUNT = A+1
LLOOP
	CALL	B1	  	;PLOT POINT OR WHATEVER -- B2 IS Y:X
	MOVE	B0,B0
	JRNN	LLNNEG
	ADDXY	B12,B2		;[Y,X] += [DYNDIAG,DXNDIAG]
	ADD	B3,B0		;D += NDIAGINC
	JRUC	LLNEXT
LLNNEG
	ADDXY	B11,B2		;[Y,X] += [DYDIAG,DXDIAG]
	ADD	B4,B0		;D += DIAGINC
LLNEXT
	DSJS	B10,LLOOP	;FOR (I=0,I<=A,I++)
	
	MMFM	SP,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14
	RETS

	.BSS	SCRATCH32K,1024*32*8

	.ENDIF ;MAKEHITMASK
* EOF
