ATFRAMEFREQ	EQU	4

**
** ARENAOBJECTSPEC
**
** JFL 24 SEP 92
**
ARENAOBJSPEC
	.IF MAKEGHOST
	.LONG	0		;NO OBJECTS
	.ENDIF ;MAKEGHOST

	.IF 0 ;NO RND SOUND
	.LONG	RANDOMSOUNDTBL	;OBJ:ACTIVE TIME
	.LONG	0		;Z:X
	.WORD	0		;Y
	.WORD	0		;XXX1
	.LONG	AOFUNRANDSND	;FUN()
	.WORD	60*10		;SLEEP TIME
	.ENDIF ;NO RND SOUND

	.LONG	[AOID_MISLICON,0] ;OBJ:ACTIVE TIME
	.LONG	[191,180]	;Z:X
	.WORD	0		;Y
	.WORD	0		;XXX1
	.LONG	0		;FUN()
	.WORD	60*10		;SLEEP TIME

	.LONG	0		;END TABLE, LOOP

**
** ARENAWATCHER
** GENERAL PURPOSE PROCESS TO WATCH THE ARENA AND ADD/REMOVE THINGS
** TO MAKE IT MORE FUN
**
** JFL 24 SEP 92
** JFL 22 NOV 92
**
ARENAWATCHER

	MOVI	ARENAOBJSPEC,A8
	MOVL	*A8,A0
	JRNZ	AWONE
	DIE
AWHOLD
	SLEEP	10
AWONE

	MOVW	@HOLDGAME,A14
	JRNZ	AWHOLD

	MOVL	*A8+,A2		;LOAD [OBJID,ACTIVEFRAMES]
	JRZ	ARENAWATCHER
	MOVL	*A8+,A3		;LOAD Z:X
	MOVL	*A8+,A14	;LOAD ?:Y
	
	MOVL	*A8+,A7		;FUN()
	JRZ	AWCREATE
	CALL	A7
	JRC	AWSLEEP		;DONT ADD
AWCREATE
	CALLA	ADDTOARENA ;A2,A3,A14 ARENAOBJID:ACTIVEFRAMES,Z:X,?:Y

AWSLEEP
	MOVW	*A8+,A0		;SLEEP TIME
	CALLA	PRCSLP
	JRUC	AWONE

**
** RANDOMSOUNDTBL
**
** JFL 22 NOV 92
**
RANDOMSOUNDTBL
	.WORD	07H		;COUNT MASK
	.WORD	SNDRAND1
	.WORD	SNDRAND2
	.WORD	SNDRAND3
	.WORD	SNDRAND4
	.WORD	SNDRAND5
	.WORD	SNDRAND6
	.WORD	SNDRAND7
	.WORD	SNDRAND8
	

**
** AOFUNRANDSND
**
** IN & OUT
**   A2 RANDOM SOUND TBL
**   A0,A3,A7,A9-A11 SCRATCH
**
** JFL 22 NOV 92
**
AOFUNRANDSND
	CALLA	RANDOMA0 ;A0 RND
	MOVW	*A2+,A14
	AND	A14,A0
	SLL	4,A0		;SIZEOF RANDOM SOUND TBL
	ADD	A0,A2
	MOVW	*A2,A14
	CALLA	MAKESND ;IN:A14 SNDID
	
	SETC			;DONT ADD ANYTHING TO THE ARENA
	RETS

	.IF FRI
**
** FRIMODE
**
** JFL 05 FEB 93
**
FRIMODE
	
	;
	;INIT
	;

	;ROUTINE INIT
	CLR	B0		;PLAYERS ENTERED IN GAME SO FAR

	;CLEAR IT TO START WITH
	MOVI	CARINITTBL,A0
	CLR	A1
	CLR	A2
FMILOOP
	MOVW	A1,*A0(CITACTIVE)
	MOVW	A2,*A0(CITCAR)
	MOVW	A2,*A0(CITINP)

	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	A1,*A3(INPB1)

	ADDI	CITSIZE,A0
	INC	A2
	CMPI	3+1,A2
	JRLT	FMILOOP

	;
	;WAIT TILL PEOPLE JOIN IN
	;

	MOVI	CARINITTBL,A0

FMWLOOP

	;CHECK IF ANYONE JOINS IN
	CLR	A2
FMWPLOOP
	;IS BTN PRESSED
	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	*A3(INPB1),A14
	JRZ	FMWPNEXT

	;IS PLAYER ALREADY IN
	MOVE	A0,A3
FMWPJLOOP
	MOVW	*A3(CITACTIVE),A14
	JRZ	FMWPJOIN		;NOT IN
	MOVW	*A3(CITINP),A14
	CMP	A14,A2
	JRNE	FMWPJLOOP		;SOMEONE ELSE
	JRUC	FMWPNEXT		;ALREADY IN

FMWPJOIN
	;PLAYER JOINS IN
	MOVW	A2,*A3(CITCAR)
	MOVW	A2,*A3(CITINP)
	MOVK	1,A14
	MOVW	A14,*A3(CITACTIVE)
	INC	B0

FMWPNEXT
	INC	A2
	CMPI	3,A4
	JRLT	FMWPLOOP

	;HAS ANYONE JOINED IN
	MOVE	B0,B0
	JRZ	FMWLOOP
	

	RETS
	.ENDIF ;FRI
	


**
** LAUNCHMISCPART
**
** IN
**   A0 OBJ
**   A2 AREA
**   A7 CD
**   B0 SCRATCH
**
** NOTE: THE ANIM SCRIPT IS SET SO THE FIRST SCRIPT IS RUN TILL IT ENDS,
** THEN THE SCRIPT SPECIFIC TO THIS CAR PART IS RUN (WHICH LOOPS)
**
** JFL 29 OCT 92
** JFL 10 JAN 93
**
LAUNCHMISCPART
	MMTM	SP,A0,A1,A4,A5,A7,A8,A9

	MOVE	A0,A8

	SLL	29,A2		;0..7
	SRL	29,A2

	MOVE	A2,A9

	;GET PART LIST
	MOVL	*A7(CDPARTANIMTBL),A4
	TLOCKON	Z
	JRZ	LMPX
	ADDI	PATMISCPART0,A4		;SKIP TO FIRST MISC PART ENTRY
	SLL	5,A2			;SIZEOF PARTAREATBL
	ADD	A2,A4
	MOVL	*A4,A4
	JRZ	LMPX

	;GET A RANDOM PART/ANIM FROM THE TBL
	CALLA	RANDOMA2 ;OUT: A2
	MOVW	*A4+,A14		;GET COUNT MASK
	AND	A14,A2			;GET RND INDEX INTO MISC PART TBL
	SLL	MPTSIZEOF,A2
	ADD	A2,A4
	MOVL	*A4,A2			;GET ANIM
	CLR	A3			;INIT()
	
	;SPAWN THE OBJ & ANIM	
	CALLR	ANISPAWNONE ;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
			    ;   SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR

	MOVE	A9,A2
	CALLR	SETAREAPARTSXY ;IN: A0,A2,A3,A8 NEWOBJ,AREA,SC,CAROBJ
	MOVE	A0,A8
	CALLR	SETOBJSCALE ;IN: A8 OBJ

	;SET FIRST ANIM SCRIPT TO GIVE VEL & ARC
	MOVI	ASFLYLANDKILLNOLOOP,A14	;ANIM SCRIPT
	MOVL	A14,*A0(ANIMFRM)

LMPX
	MMFM	SP,A0,A1,A4,A5,A7,A8,A9
	RETS


**
** CREATEAOL
**
** IN
**   A2	AOID:AOLVAL16
**   A8 PARENT OBJ
** OUT
**   A0 ICONOBJ 
** SCRATCH: A1,A5
**  
** JFL 24 FEB 93
**
CREATEAOL
	MOVE	A2,A1
	SRL	16,A1				;GET AOID
	SLL	AOLSIZEOF,A1
	ADDI	GENAOBJLIST,A1
	.IF DEBUG
	CMPI	GENAOBJLISTX,A1
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVL	*A1,A14				;GET DEFAULTANIM
	MOVE	A14,A0
	SRL	SRL_AOLCLEAN,A0			;ISOLATE ANIM OR IMG
	SLL	SRL_AOLCLEAN,A0	
	BTST	B_AOLIMG,A14
	JRNZ	CANOANI
	MOVL	*A0,A0				;GET IMAGE
CANOANI
	MOVI	OBJINITRAMAO,A5
	MOVL	A0,*A5
	CALLA	CREATE_OBJ ;IN:A5 OUT:A0
	JRZ	CAX

	.IF DEBUG
	MOVB	*A0(OID+B_OIDFAUTOVEL-7),A14
	TLOCKON	N ;ASSUMED NOT ON V LIST
	.ENDIF ;DEBUG

	MOVW	A2,*A0(OAOLVAL16)
	SRL	16,A2
	MOVW	A2,*A0(OPARTID)
	MOVW	*A8(OXPOS),*A0(OXPOS)
	MOVW	*A8(OZPOS),*A0(OZPOS)
	CALLA	INSOBJ ;IN:A0

	MOVI	DRG+PWE
CAX
	RETS

	;CHECK NUMBER OF TIRES IN THE AREA
	MOVE	A2,A14
	SLL	24,A14
	SRL	24,A14
	SUBK	2,A14		;TEST FOR 2 OR MORE TIRES 
	JRN	SJHX 		;NEED MORE TIRES IN AREA

	;GET DIRECTION SUPPLIED WITH THIS SPECIAL TERRAIN
	MOVE	A5,A10			;GET DIR
	SLL	24,A10
	SRL	24,A10

	;GET DIR OF MOTION & MAKE SURE ITS WITHIN 180 DEGREES OF WALL DIR
	MOVW	*A7(CDTOTDIR),A4
	SUB	A4,A10	   		;DIR = WALLDIR - CARDIR
	SLL	24,A10
	SRL	24,A10
	SUBI	DIR180/2,A10
	JRN	SJHCLRX			;ANGLE TOO SMALL
	SLL	25,A10			;CHECK TOP BIT
	JRC	SJHCLRX			;ANGLE TOO BIG

	;CHECK IF LEADING TIRES ARE IN THE AREA
	MOVW	*A0(ODIR),A11
	SUB	A4,A11
	SLL	24,A11
	SRL	28,A11
	SLL	5,A11
	ADDI	SLOPEJLEADINGTBL,A11
	MOVL	*A11,A11		;CDOFFSET:CDOFFSET
	MOVE	A11,A6
	ZEXT	A6,W
	SRL	16,A11
	ADD	A7,A6
	ADD	A7,A11
	MOVB	*A6,A6
	MOVB	*A11,A11
	CMP	A6,A11
	JRNE	SJHX			;BOTH LEADING ARE NOT IN AREA
	MOVE	A1,A14			;GET TOPOA OF TIRE THAT GOT US HERE
	SLL	24,A14
	SRL	24,A14
	CMP	A6,A14
	JRNE	SJHX			;NEITHER LEADING ARE IN AREA
	

	;SET SPECIAL MODE
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFTOPO),0
	SETF	16,1,0
	
	MOVI	SLOPEJSPECIALHANDLER,A14
	MOVL	A14,*A7(CDTOPOSPECJUMP)

	MOVL	@WAVEIRQS,A14
	MOVL	A14,*A7(CDTOPOSPECA)
SJHX
	RETS

SJHCLRX
	;SET SPECIAL MODE
	SETF	1,0,0
	MOVE	SP,*A7(CDFLAGS+B_CDFTOPO),0
	SETF	16,1,0
	RETS



**
** GETINPBUTTONS
**
** JFL 01 DEC 92
**
GETINPBUTTONS
	MOVL	@WAVEIRQS,A1

	;
	;GET BUTTONS
	;
	MOVI	INDATA+INPBITS,A10	;OUTPUT
	MOVI	BUTTONTBL,A6		;BUTTON
	MOVK	NUMINPUTSETS,A7		;NUM SETS
GIBSETLOOP
	
	;SET UP FOR ONE SET
	MOVE	A10,A9			;COPY OF OUTPUT

	;DO ONE SET OF BUTTONS
	MOVL 	*A6+,A0			;PORT
	MOVW	*A0,A0			;BITS
	MOVW	*A6+,A14		;RSHIFT VAL
	SRL	A14,A0			;SHIFT BITS INTO PLACE
	ANDI	M_NUMBUTTONS,A0		;DROP UNWANTED BITS
	MOVW	*A9,A4			;GET PREVIOUS BUTTONS			
	MOVW	A0,*A9+			;SAVE CURRENT BUTTONS
	XOR	A4,A0			;WHICH BITS HAVE CHANGED
	JRZ	GIBNEXTSET
	MOVK	NUMBUTTONS,A5		;NUM BUTTONS
GIBONELOOP
	SRL	1,A0			;CHECK IF THIS BUTTON CHANGED
	JRNC	GIBNC

	;GET BTN STATE
	MOVW	*A9,A2

	;DO DEBOUNCE HERE
	MOVE	A2,A14
	SRL	1,A14
	JRC	1,A14
      

GIBCHG
	;RECORD BTN CHANGE
	INC	A2
	MOVW	A2,*A9

GIBNC
	;NEXT BUTTON
	ADDK	INPBNEXT,A9
	DSJ	A5,GIBONELOOP
	
	
GIBNEXTSET
	;NEXT SET
	ADDI	INPSIZE,A10
	DSJ	A7,GIBSETLOOP
	RETS


	;
	;CHECK FOR ANY MINES NEARBY & DETONATE THEM
	;ASSUME MINE & FF ARE ON GROUND
	;

	MOVL	@SUPPLSTS+SUPL_MINE,A0
	JRZ	MFFHGX

	;GET COORDS OF FF
	MOVW	*A8(OXPOS),A4
	MOVW	*A8(OZPOS),A5

	;SET UP
	MOVI	AOID_LMINE,A6
	
	;FIGURE A KIND OF ALLOWABLE DIST
	MOVW	*A8(OSIZEX),A7
	MOVW	*A8(OSIZEY),A14
	ADD	A14,A7

MFFHGLOOP
	MOVL	*A0(OSLINK),A8		;GET LINK FIRST SO WE CAN ZAP

	;CHECK IF THIS IS A MINE
	MOVW	*A0(OPARTID),A14
	CMP	A6,A14	
	JRNE	MFFHGNEXT

	;CHECK DISTANCE
	MOVW	*A0(OXPOS),A2
	MOVW	*A0(OZPOS),A3
	QDISTXY	A4,A5,A2,A3 ;IN:X1,Y1,X2,Y2 SC:X2 OUT:Y2
	
	;CHECK DIST
	CMP	A7,A3
	JRHI	MFFHGNEXT
	
	;SET MINE TO EXPLODE
	CALLR	LMINEDETONATE ;IN:A0,A2-A3 OBJ,SC
	
MFFHGNEXT
	;NEXT
	MOVE	A8,A0
	JRNZ	MFFHGLOOP

MFFHGX
	RETS

ACTRANDICON
	
	;GET ICON
	CALLA	RANDOMA0 ;A0 RND
	MOVE	A0,A1		;RANDOM
	MOVW	*A2+,A14	;GET COUNTMASK
	AND	A14,A0
	SLL	4,A0		;SIZEOF TBL
	ADD	A0,A2
	MOVW	*A2,A2		;GET ICON ID
	SLL	16,A2		;OBJID:0

	;FIGURE NUMBER OF MISSILES TO GIVE AWAY
	RL	1,A1		;RANDOM
	MOVE	A1,A0
	SLL	32-4,A0
	SRL	32-2,A0		;0..3
	ADDK	2,A0		;2..5
	MOVX	A0,A2		;OBJID:AOLVAL16
	
	;GET POSITION
	MOVL	@ARENATRACKINFO,A0
	ADDI	TIDROPTBL,A0
	RL	5,A1		;SLIDE RND AROUND A LITTLE
	ANDI	TIDCOUNTMASK,A1	;MAKE RND IN RANGE
	SLL	TIDSIZEOF,A1
	ADD	A1,A0
	MOVL	*A0,A3		;Z:X
	CLR	A14		;XXX1:Y
	
	SETC			;DONT ADD TO THE ARENA
	EXGPC	A7

	;
	;TEST POINT BOTTOM CENTER
	;
	MOVL	*A1(ODAG),A2		;GET TOP LEFT OF IMAGE
	MOVL	*A1(OSIZE),A9		;YSIZ:XSIZ
	MOVE	A9,A3
	SRL	16,A3			;0:YSIZ
	SLL	16,A3			;YSIZ:0
	ADDXY	A3,A2			;FIGURE BOTTOM LEFT OF IMAGE
	MOVE	A2,A10			;SAVE

	;FIND CENTER
	MOVE	A9,A3
	ZEXT	A3,W			;0:XSIZ
	SRL	1,A3
	ADDXY	A3,A2	
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRNZ	HCBYES

	;
	;TEST LEFT POINT UP 1/4 FROM BASE
	;

	MOVE	A9,A3
	SRL	16+2,A3			;0:YSIZ/4
	SLL	16,A3
	MOVE	A10,A2
	SUBXY	A3,A2			;FIGURE 1/4 UP LEFT
	MOVE	A2,A10			;SAVE
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRNZ	HCBYES
	
	;
	;TEST RIGHT POINT UP 1/4 FROM BASE
	;

	MOVE	A10,A2
	ZEXT	A9,W			;0:XSIZ
	ADDXY	A9,A2
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRZ	HCBX

