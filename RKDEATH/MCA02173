ALLPLYR .MACRO 	P1
 	MOVI	:P1:,A7
	CALLA	CALLPLAY
	.endm
LOCKUP .MACRO 
	PUSHST	
	DINT
	CALLA	JLOCKED
	POPST
	.ENDM
LOCKON .MACRO 	op
	JR:op:	lab?
	JRUC	lab2?
lab?
	PUSHST
	DINT
	CALLA	JLOCKED
	POPST
lab2?
	.ENDM
TLOCKUP .MACRO 
	TRAP	29
	.ENDM
TLOCKON .MACRO 	op
	JR:op:	lab?
	JRUC	lab2?
lab?
	TRAP	29
lab2?
	.ENDM
LOCKNROM .MACRO  REG
	CMPI	ROM,REG
	LOCKON	LO
	.ENDM
MOVW .MACRO  R1,R2
	MOVE	:R1:,:R2:,W
	.endm
MOVL .MACRO  R1,R2
	MOVE	:R1:,:R2:,L
	.endm
SLEEPTA .MACRO  TIME,ADR
	MOVI	:ADR:,A7
	.IF	TIME < 33
	MOVK	:TIME:,A0
	.ELSE
	MOVI	:TIME:,A0
	.ENDIF
	JAUC	PRCLSP
	.ENDM
BSTATE .MACRO 
	GETPC	B9
	.ENDM
QDIST .MACRO 	OBJ1,OBJ2,REG1,REG2,REG3
	MOVW	*:OBJ1:(OXPOS),:REG1:
	MOVW	*:OBJ2:(OXPOS),:REG3:
	SUB	:REG1:,:REG3:
	ABS	:REG3:
	MOVW	*:OBJ1:(OZPOS),:REG1:
	MOVW	*:OBJ2:(OZPOS),:REG2:
	SUB	:REG1:,:REG2:
	ABS	:REG2:
	CMP	:REG2:,:REG3:
	JRHS	QD3?
	MOVE	:REG3:,:REG1:    	
	MOVE	:REG2:,:REG3:
	MOVE	:REG1:,:REG2:
QD3?
	SRL	2,:REG2:
	ADD	:REG2:,:REG3:
	.ENDM
QDISTZOFF .MACRO  OBJ1,OBJ2,REG1,REG2,REG3
	MOVW	*:OBJ1:(OZPOS),:REG1:
	MOVW	*:OBJ1:(OZOFF),:REG3:
	ADD	:REG3:,:REG1:
	MOVW	*:OBJ2:(OZPOS),:REG2:
	MOVW	*:OBJ2:(OZOFF),:REG3:
	ADD	:REG3:,:REG2:
	SUB	:REG1:,:REG2:
	ABS	:REG2:
	MOVW	*:OBJ1:(OXPOS),:REG1:
	MOVW	*:OBJ2:(OXPOS),:REG3:
	SUB	:REG1:,:REG3:
	ABS	:REG3:
	CMP	:REG2:,:REG3:
	JRHS	QD3?
	MOVE	:REG3:,:REG1:    	
	MOVE	:REG2:,:REG3:
	MOVE	:REG1:,:REG2:
QD3?
	SRL	2,:REG2:
	ADD	:REG2:,:REG3:
	.ENDM
QDISTXY .MACRO 	X1,Y1,X2,Y2
	SUB	:X1:,:X2:
	ABS	:X2:
	SUB	:Y1:,:Y2:
	ABS	:Y2:
	CMP	:X2:,:Y2:
	JRHS	QDXY?
	XOR	:X2:,:Y2:
	XOR	:Y2:,:X2:
	XOR	:X2:,:Y2:
QDXY?
	SRL	2,:X2:
	ADD	:X2:,:Y2:
	.ENDM
QRAND8 .MACRO 	DST
	MOVW	@REFCNT,:DST:
	SLL	32-3-2,:DST:
	SRL	32-3,:DST:
	.ENDM
ENUM .MACRO  LBL
:LBL:	.EQU	SOFT
	.EVAL	SOFT+1,SOFT
	.ENDM
ENUMCLR .MACRO 
	.ASG	0,SOFT
	.ENDM
ENUMSET .MACRO  VAL
	.ASG	:VAL:,SOFT
	.ENDM
SWAP .MACRO  R1,R2
	XOR    :R1:,:R2:
	XOR    :R2:,:R1:
	XOR    :R1:,:R2:
	.endm

test.asm/       697512868   0     0     0       72        `
JRXLT .MACRO 	P1
	JRXN	P1.S
	.endm

jrxne.asm/      697512856   0     0     0       90        `
JRYLT .MACRO 	P1
	JRYN	P1.S
	.endm

jryne.asm/      697512858   0     0     0       90        `
JRXGE .MACRO 	P1
	JRXNN	P1.S
	.endm

jrxlt.asm/      697512856   0     0     0       88        `
JRYGE .MACRO 	P1
	JRYNN	P1.S
	.endm

jrylt.asm/      697512858   0     0     0       88        `
JRYEQ .MACRO 	P1
	JRYZ	P1.S
	.endm

jryge.asm/      697512858   0     0     0       90        `
JRYNE .MACRO 	P1
	JRYNZ	P1.S
	.endm

jsrp.asm/       697512858   0     0     0       194       `
DIE .MACRO 
	JAUC	SUCIDE
	.endm


CREATE .MACRO 	P1,P2
 	MOVI	:P1:,A1
	MOVI	:P2:,A7,L
	CALLA	GETPRC
	.endm

createp.asm/    697512854   0     0     0       391       `
ZMINMAC .MACRO 	MINWIDTH
	.ASG	0,CURSIZE	
	.LOOP	32
	.EVAL	CURSIZE*100H/:MINWIDTH:,DMASVAL
	.IF	DMASVAL<1
	.WORD	0,0
	.ELSE
	.WORD	10000H/DMASVAL,DMASVAL
	.ENDIF
	.EVAL	CURSIZE+1,CURSIZE
	.ENDLOOP
	.ENDM
