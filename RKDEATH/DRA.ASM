***
*** FILE: DRA.ASM
*** DERBY RACE ANIMATION ROUTINES & DATA
***
*** JFL 18 OCT 92; FROM DRI.ASM
*** JFL 20 OCT 92
*** JFL 29 OCT 92
*** JFL 30 OCT 92
*** JFL 04 NOV 92
*** JFL 16 NOV 92; SPAWN RANDOM H/V FLIPS
*** JFL 04 JAN 93
*** JFL 10 JAN 93
*** JFL 15 JAN 93; AOLNOSHOW
*** JFL 16 FEB 93
*** JFL 12 APR 93; NEW CYCLER
*** JFL 14 APR 93; NEW ADD MOVING PART
***
	.MLIB	"APMACS.LIB"
	.FILE	"DRA.ASM"
	.TITLE	" <<< DERBY RACE -- ANIMATION STUFF >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

**
** COMPILE FLAGS
**
FLOATERSDONTSCROLL	EQU	0

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

*	GET THE SYSTEM STUFF
	.INCLUDE	"AP.H"
	.INCLUDE	"DR.I"
	.INCLUDE	"DRM.I"
	.INCLUDE	"DRO.I"
    	.INCLUDE	"DRSND.I"
	.INCLUDE	"DRT.I"
	.INCLUDE	"DRV.I"
	.INCLUDE	"DRS.I"
	.INCLUDE	"DRPAL.I"
	.INCLUDE	"DRA.I"
	.INCLUDE	"DRMIS.I"
	.INCLUDE	"DRFSHOW.I"
	.INCLUDE	"DRFGHOST.I"
	.INCLUDE	"IMGTBLM2.GLO"
	.INCLUDE	"DRFKILL.I"

** OTHERS USE
	.DEF	SSOFFROAD	;DRA.ASM
	.DEF	ADDTOARENA	;DRA.ASM
	.DEF	FLOATOBJ	;DRA.ASM
	.DEF	DOPEELOUT	;DRA.ASM
	.DEF	DOTURBO		;DRA.ASM
	.DEF	MAKEOBJANIM	;DRA.ASM
	.DEF	ANISTOPANI	;DRA.ASM
	.DEF	GENAOBJLIST	;DRA.ASM
	.DEF	GENAOBJLISTX	;DRA.ASM
	.DEF	ANILOOPHERE	;DRA.ASM
	.DEF	MAKETOSCORE	;DRA.ASM
	.DEF	MONEYPICKUPTBL 	;DRA.ASM
	.DEF	MONEYPICKUPTBLX	;DRA.ASM
	.DEF	ASICARPART	;DRA.ASM
	.DEF	ASICOORDS	;DRA.ASM
	.DEF	ASIDEATHBOOM2	;DRA.ASM
	.DEF	ANISPAWNONE	;DRA.ASM
	.DEF	ANISPAWNFIX	;DRA.ASM
	.DEF	ANISPAWNFROMTBL	;DRA.ASM
	.DEF	ICONLANDS	;DRA.ASM
	.DEF	FLASHCARPAL	;DRA.ASM
	.DEF	SETCARPAL	;DRA.ASM

** OTHERS USE -- FOR DRAS.ASM
	.DEF	ANIFRM		;DRA.ASM
	.DEF	ANIOFF		;DRA.ASM
	.DEF	ANISPAWN      	;DRA.ASM
	.DEF	ANIPALCONSTSAVE	;DRA.ASM
	.DEF	ANIPALCONSTPLAYER ;DRA.ASM
	.DEF	ANIPALCONSTICON	;DRA.ASM
	.DEF	ANIPALCONSTICONFIRST ;DRA.ASM
	.DEF	ANIKILL		;DRA.ASM
	.DEF	ANIKILLPOWERUP	;DRA.ASM
	.DEF	ANION		;DRA.ASM
	.DEF	ANIPALCONSTFIRST ;DRA.ASM
	.DEF	ANIFLYLANDKILL	;DRA.ASM
	.DEF	ANILOOPHERE	;DRA.ASM
	.DEF	ANIONOFF     	;DRA.ASM
	.DEF	ANIHITTEST   	;DRA.ASM
	.DEF	ANITOSCORENOBOX	;DRA.ASM
	.DEF	ANIRETS		;DRA.ASM
	.DEF	ANISETSCALETYPE	;DRA.ASM
	.DEF	ANITOSCOREBOX	;DRA.ASM
	.DEF	ANIPALCONST	;DRA.ASM
	.DEF	ANIONTIME4   	;DRA.ASM
	.DEF	ANITIME4     	;DRA.ASM
	.DEF	ANIPALCONSTRESTORE ;DRA.ASM
	.DEF	ANIOCVECT	;DRA.ASM
	.DEF	ANIDEATHBOOM	;DRA.ASM
	.DEF	ANIDEADMISL	;DRA.ASM
	.DEF	ANIPULL		;DRA.ASM	
	.DEF	ANICYCLE	;DRA.ASM

** WE USE -- FROM DRAS.ASM
	.REF	ASTHINGA   	;DRAS.ASM
	.REF	ASTHINGB   	;DRAS.ASM
	.REF	ASDICE		;DRAS.ASM
	.REF	ASBELT		;DRAS.ASM
	.REF	ASFTPEDAL  	;DRAS.ASM
	.REF	ASSTEER		;DRAS.ASM
	.REF	ASWHEELA   	;DRAS.ASM
	.REF	ASWHEELB   	;DRAS.ASM
	.REF	ASRADIATE  	;DRAS.ASM
	.REF	ASDEATHBOOM	;DRAS.ASM
	.REF	ASCARBUR   	;DRAS.ASM
	.REF	ASFILTER   	;DRAS.ASM
	.REF	ASTOSCOREBOX	;DRAS.ASM
	.REF	ASSPARKA   	;DRAS.ASM
	.REF	ASSPARKB   	;DRAS.ASM
	.REF	ASBUMPERA     	;DRAS.ASM
	.REF	ASBUMPERB     	;DRAS.ASM
	.REF	ASROCKSMALL	;DRAS.ASM
	.REF	ASSEATA		;DRAS.ASM
	.REF	ASSEATB		;DRAS.ASM
	.REF	ASPLATE		;DRAS.ASM
	.REF	ASMIRROR      	;DRAS.ASM
	.REF	ASFLAG1		;DRAS.ASM
	.REF	ASMUFF		;DRAS.ASM
	.REF	ASGASCAN      	;DRAS.ASM
	.REF	ASPIST		;DRAS.ASM
	.REF	ASTOSCORENOBOX	;DRAS.ASM
	.REF	ASTOSCORENOBOXSOLID ;DRAS.ASM
	.REF	ASHORNORN     	;DRAS.ASM
	.REF	ASFISH1		;DRAS.ASM
	.REF	ASFISH2		;DRAS.ASM
	.REF	ASDISTRBA     	;DRAS.ASM
	.REF	ASFISH3		;DRAS.ASM
	.REF	ASDISTRBB     	;DRAS.ASM
	.REF	ASFISH4		;DRAS.ASM
	.REF	ASWINGORN     	;DRAS.ASM
	.REF	ASZTBLHEALTHICON ;DRAS.ASM
	.REF	ASZTBLMONEYBAGICON ;DRAS.ASM
	.REF	ASZTBLMISSILEICON ;DRAS.ASM
	.REF	ASZTBLSMARTBOMBICON ;DRAS.ASM
	.REF	ASZTBLDETONATEICON ;DRAS.ASM
	.REF	ASZTBLLMINEICON ;DRAS.ASM
	.REF	ASZTBLTURBOICON ;DRAS.ASM
	.REF	ASTOSCOREBOXSOLID ;DRAS.ASM
	.REF	ASFLYLANDKILL	;DRAS.ASM
	.REF	ASDEATHBOOMTBL	;DRAS.ASM
	.REF	ASDEATHBOOMTBLX	;DRAS.ASM
	.REF	ASFLASHKILL	;DRAS.ASM

** WE USE
	.REF	ARENASND	;DRSND.ASM
	.REF	MAKESND		;DRSND.ASM
	.REF	CKINSANI	;APD.ASM
	.REF	INSANI		;APD.ASM
	.REF	PULLANIM	;APD.ASM
	.REF	PULLSUPP	;APD.ASM
	.REF	ADDSHADOW	;DR.ASM
	.REF	SETOBJSCALE	;DRH.ASM
	.REF	RANDOMA2	;APUTIL.ASM
	.REF	CCABORT		;DRC.ASM
	.REF	VECTORTOVELS	;DR.ASM
	.REF	SETGCOL		;DR.ASM
	.REF	INSBOBJ		;APD.ASM
	.REF	INSVLIST	;APD.ASM
	.REF	SCOREBOXCENTERTBL ;DRS.ASM
	.REF	POINT2POINTDIR16 ;DRH.ASM
	.REF	PLPALCONSTTBL	;DRS.ASM
	.REF	MAKESHADMULTI	;DRI.ASM
	.REF	PALCYCLEADD	;APPALL.ASM
	.REF	ADDMOVINGPART	;DR.ASM

** WE USE -- RAM
	.REF	OBJINITRAMSPAWN	;DRRAM.ASM
	.REF	OBJINITRAMAO	;DRRAM.ASM
	.REF	OBJINITRAMAOVEL	;DRRAM.ASM
	.REF	ARENATRACKINFO	;DRRAM.ASM
	.REF	DRG		;DRRAM.ASM

	.IF DEBUG
	.REF	DEBUGOBJ	;DR.ASM
	.ENDIF ;DEBUG

**
** DEFINES
**
DIRTYVEL	EQU	-[0,400H]	;DIRT TOSS UP VEL
DIRTYACC	EQU	-DIRTYVEL/16	;DIRT TOSS UP ACC
ROCKYVEL	EQU	-[1,000H]	;DIRT TOSS UP VEL
ROCKYACC	EQU	-ROCKYVEL/16	;DIRT TOSS UP ACC
FISHYVEL	EQU	-[3,000H]	;DIRT TOSS UP VEL
FISHYACC	EQU	-FISHYVEL/16	;DIRT TOSS UP ACC
M_DIR180	EQU	7FH
SLR_DIR180	EQU	25
SLR_ROCKYVEL	EQU	24
ROCKVECVEL	EQU	60H
FLYACCSHIFT	EQU	6
TOSCOREZOFF	EQU	SCRBOT
FLYMINVEL	EQU	100H		;MAKE SURE ITS REASONABLE
FLYMAXVEL	EQU	600H		;MAKE SURE ITS REASONABLE
DRIVERYVEL	EQU	600H		;YVEL FOR DRIVER FLYING OUT

**
** MOVE TO SCORE CODES
**
M_MTSSLOW	EQU	01H		;MOVE TO SCORE SLOWLY
M_MTSSOLID	EQU	02H		;IMAGE IS SOLID COLOR
B_MTSSLOW	EQU	0
B_MTSSOLID	EQU	1

	.TEXT
	.EVEN


***
*** -------------------------- ANIMATION SUBROUTINES -----------------------
***

**
** ANITOSCOREBOX
** ANITOSCORENOBOX
**
** IN
**   A8 OBJ
**
** JFL 10 FEB 93
**
ANITOSCOREBOX
	MOVW	*A8(OXPOS),A2 		;X1
	MOVW	*A8(OZPOS),A3
	MOVW	*A8(OZOFF),A14
	ADD	A14,A3			;Y1
	
	MOVL	*A8(OFLYDESTXY),A0
	MOVE	A0,A1
	ZEXT	A0,W			;X2
	SRL	16,A1			;Y2

	;QDISTXY X1,Y1,X2,Y2 SC:X2 OUT:Y2
	QDISTXY	A0,A1,A2,A3

	;AS SOON AS WE GET FARTHER FROM THE POINT, WE ARE DONE
	MOVW	*A8(OFLYDIST),A0
	JRZ	ATSBFIRST
	CMP	A0,A3
	JRGT	ATSBDONE
ATSBFIRST
	MOVW	A3,*A8(OFLYDIST)
	JRUC	ATSBX
	
ANITOSCORENOBOX
	MOVW	*A8(OXPOS),A2
	MOVW	*A8(OZPOS),A3
	MOVW	*A8(OZOFF),A14
	ADD	A3,A14
	SLL	16,A14
	MOVY	A14,A2		;Z:X

	;CHECK IF OFF SCREEN
	CLR	A14
	CMPXY	A14,A2
	JRXLE	ATSBDONE
	JRYLE	ATSBDONE
	MOVI	[SCRBOT,SCRRGT],A14
	CMPXY	A14,A2
	JRXGE	ATSBDONE
	JRYLT	ATSBX

ATSBDONE
	MOVL	*A8(OCVECT),A14
	JRZ	ATSBNOFUN
	MOVE	A14,B8
	EXGPC	B8
ATSBNOFUN

	CALLA	ZAP_OBJ ;IN:A8
ATSBX
	RETS


**************************************************************************
*								         *
* GETAFARG_WORD - GET A WORD ARGUMENT FOR AFunc, IT IS PULLED FROM THE	 *
* 		ANIM SCRIPT.						 *
* A8 = PTR TO OBJECT ANIMATING						 *
* *A8(ANIMARG),L = PTR TO ARGUMENT TO BE PULLED				 *
* RETURNS								 *
* 	A0 = ARGUMENT							 *
*	N & Z = SET TO REFLECT ARGUMENT	     				 *
* 	*A8(ANIMARG),L = POINTING TO NEXT				 *
*								         *
**************************************************************************
GETAFARG_WORD
	MOVE	*A8(ANIMARG),A14,L
	MOVE	*A14+,A0,W
	MOVE	A14,*A8(ANIMARG),L
	RETS

**************************************************************************
*								         *
* GETAFARG_LONG - GET A LONG ARGUMENT FOR AFunc, IT IS PULLED FROM THE	 *
* 		ANIM SCRIPT.						 *
* A8 = PTR TO OBJECT ANIMATING						 *
* *A8(ANIMARG),L = PTR TO ARGUMENT TO BE PULLED				 *
* RETURNS								 *
* 	A0 = ARGUMENT							 *
*	N & Z = SET TO REFLECT ARGUMENT	     				 *
* 	*A8(ANIMARG),L = POINTING TO NEXT				 *
*								         *
**************************************************************************
GETAFARG_LONG
	MOVE	*A8(ANIMARG),A14,L
	MOVE	*A14+,A0,L
	MOVE	A14,*A8(ANIMARG),L
	RETS

**************************************************************************
* A_GOTO - Anim Func
* takes two args from anim script
* .long label to branch to.
* .word %chance (RANDPER) to take branch
A_GOTO
	callr	GETAFARG_LONG	;Arg in A0
	move	A0,A1
	callr	GETAFARG_WORD	;Arg in A0
	calla	RANDPER
	jrnc	A_GOTOX
	MOVE	A1,*A8(ANIMFRM),L
A_GOTOX
	rets


**************************************************************************
*								         *
* ANIGO - ANIM FUNC TO GO TO NEW ANIM SCRIPT/FRAME			 *
* A8 = PTR TO OBJECT							 *
*								         *
**************************************************************************
ANIGO
	CALLR	GETAFARG_LONG		;GET NEW PTR OFF OF SCRIPT
	MOVE	A0,*A8(ANIMFRM),L
	MOVE	A0,*A8(ANIMSCR),L
	RETS

**************************************************************************
*								         *
* ANIFRM - ANIM FUNC TO GO TO NEW ANIM FRAME				 *
* A8 = PTR TO OBJECT							 *
*								         *
**************************************************************************
ANIFRM
	CALLR	GETAFARG_LONG		;GET NEW PTR OFF OF SCRIPT
	MOVE	A0,*A8(ANIMFRM),L
	RETS

**************************************************************************
*								         *
* ANISCR - ANIM FUNC TO SET A NEW LOOP BACK PTR FOR AN ANIMATION	 *
* 		SCRIPT.							 *
* A8 = PTR TO OBJECT							 *
*								         *
**************************************************************************
ANISCR
	CALLR	GETAFARG_LONG		;GET NEW PTR OFF OF SCRIPT
	MOVE	A0,*A8(ANIMSCR),L
	RETS

**
** ANICYCLE
**
** IN
**   A0-A7,A9-A11 SCRATCH
**   A8 OBJ
**
** JFL 25 FEB 93
** JFL 12 APR 93; NEW CYCLER
**
ANICYCLE
	CALLR	GETAFARG_LONG ;OUT:A0
	MOVE	A0,A2			;VEL.8:COUNT.8:0000.8:COL.8
	CALLR	GETAFARG_WORD ;OUT:A0	
	MOVE	A0,A3		    	;TIME

	MOVW	*A8(OPAL),A14
	SRL	8,A14
	SLL	8,A14
	OR	A14,A2

	CALLA	PALCYCLEADD ;IN:A2,A3 VEL.8:COUNT.8:PAL.8:COL.8,TIME SC:A0-A6
	RETS

**
** ANIOCVECT
** JUMP TO OCVECT
**
** IN
**   A0-A7,A9-A11 SCRATCH
**   A8 OBJ
**
** JFL 13 FEB 93
** JFL 21 FEB 93
**
ANIOCVECT
	MOVL	*A8(OCVECT),A14
	JUMP	A14

**
** ANIPULL
**
** IN
**   A8 OBJ
** SCRATCH:A0-A11
**
** JFL 24 FEB 93
**
ANIPULL
	MOVB	*A8(OFLAGS+B_ANIM-7),A14
	TLOCKON	NN
	MOVE	A8,A0
	CALLA	PULLANIM ;IN:A0
	RETS

**
** DEADMISLLANDS
** ICONLANDS
**
** IN
**   A8 OBJ
** SCRATCH:A0-A8,A10-A11
**
** JFL 21 FEB 93
** JFL 26 FEB 93; OFF SCREEN CHECK
**
DEADMISLLANDS
ICONLANDS	

	
	;SPAWN A MISL ICON WHERE THIS LANDS
	MOVW	*A8(OPARTID),A2
	SLL	16,A2
	MOVW	*A8(OAOLVAL16),A14
	MOVX	A14,A2
	MOVW	*A8(OZPOS),A3
	MOVW	*A8(OXPOS),A0
	SLL	16,A3
	MOVX	A0,A3				;Z:X
	CLR	A14				;XXX1:Y

	;CHECK IF ICON IS OFF SCREEN
	MOVI	[SCRBOT,SCRRGT],A0
	CMPXY	A0,A3
	JRXGE	ICLOFF
	JRYGE	ICLOFF
	MOVW	*A8(OSIZEX),A0
	MOVW	*A8(OSIZEY),A1
	SLL	16,A1
	MOVX	A0,A1	
	ADDXY	A3,A1
	CMPXY	A14,A1
	JRXLE	ICLOFF
	JRYLE	ICLOFF
	
	CALLA	ADDTOARENA ;A2,A3,A14 ARENAOBJID:AOLVAL16,Z:X,XXX1:Y OUT:A2 OBJ
   	
	;MAKE IT UNDER CAR / BUT ABOVE SHADOW
	MOVI	ICONZOFF,A3
	MOVW	A3,*A0(OZOFF)
	SLL	16,A3
	MOVL	*A0(OZVAL),A14
	SUB	A3,A14
	MOVL	A14,*A0(OZVAL)
	
ICLOFF
	;KILL ICON (& SHADOW) THAT JUST LANDED
	CALLA	ZAP_OBJ ;IN: A8

	RETS

**
** ANIDEADMISL
**
** IN
**   A0-A7,A9-A11 SCRATCH
**   A8 OBJ
**
** JFL 21 FEB 93
**
ANIDEADMISL
	
	;THROW UP
	MOVI	-[2,0],A14
	MOVL	A14,*A8(OYVEL)
	NEG	A14
	SRL	6,A14
	TLOCKON	Z
	MOVL	A14,*A8(OYACC)

	MOVK	AOID_ICONMISL,A14
	MOVW	A14,*A8(OPARTID)

	;SET UP FOR WHEN IT LANDS
	MOVI	DEADMISLLANDS,A2
	MOVI	SETGCOL,B8 ;IN:A2,A8,B8 GCOL(),OBJ,PC
	EXGPC	B8
	
	;GET IT OFF THE ANIM LIST
	MOVE	A8,A0
	CALLA	PULLANIM ;IN:A0 OBJ

	RETS

**
** ANIDEATHBOOM
**
** IN
**   A0-A7,A9-A11 SCRATCH
**   A8 OBJ
**
** JFL 16 FEB 93
** JFL 19 FEB 93
** JFL 14 APR 93; NO DRIVER FLYING OUT
**
ANIDEATHBOOM

	;SET EXPLOSION TO SCALE BIGGER
	MOVI	STYPZOFF+40,A14
	MOVW	A14,*A8(OSCALETYPE)
	
	.IF 0 ;NO DRIVER FLYING OUT
	;SPAWN ANIMATION OF DRIVER FLYING OUT OF CAR
	MOVW	*A8(ODEATHID),A2
	SLL	5,A2			;SIZEOF TBL
	ADDI	ASDEATHBOOMTBL,A2
	CMPI	ASDEATHBOOMTBLX,A2
	JRHS	ADBX
	MOVL	*A2,A2
	MOVI	ASIDRIVER,A3
	CALLR	ANISPAWNONE	;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
				;SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR
	.ENDIF ;NO DRIVER FLYING OUT
ADBX
	RETS

**
** ANISPAWNFROMTBL
**
** IN
**   A2 ANI SPAWN TBL
**   A8 CAR
**
** JFL 04 DEC 92
**
ANISPAWNFROMTBL
	MMTM	SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11
	CALLR	ANISPAWNTBL ;IN:A2,A8 TBL,OBJ
	MMFM	SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11
	RETS

**
** ANIONOFF
**
** IN
**   A8 OBJ
**
** JFL 19 NOV 92
**
ANIONOFF
	MOVW	*A8(OCTRL),A14
	XORI	M_INUSE,A14
	MOVW	A14,*A8(OCTRL)
	RETS

**
** ANION
**
** IN
**   A8 OBJ
**
** JFL 19 NOV 92
** JFL 10 FEB 93; FASTER
**
ANION
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A8(OCTRL+B_INUSE),0
	SETF	16,1,0
	RETS

**
** ANIOFF
**
** IN
**   A8 OBJ
**
** JFL 19 NOV 92
** JFL 10 FEB 93; FASTER
**
ANIOFF
	SETF	1,0,0
	MOVE	SP,*A8(OCTRL+B_INUSE),0
	SETF	16,1,0
	RETS

**
** ANIONTIME4
** ANITIME4
**
** IN
**   A8 OBJ
**
** ASSUMES FOUR FARGS
** .WORD TIME0
** .WORD TIME1
** .WORD TIME2
** .WORD TIME3
**
** WHERE DELAY IS SET TO ONE OF THE TIMES RANDOMLY
**
** IN
**   A8 OBJ
**
** JFL 19 NOV 92
** JFL 09 FEB 93
** JFL 19 FEB 93
**
ANIONTIME4
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A8(OCTRL+B_INUSE),0
	SETF	16,1,0

ANITIME4
	;CHOOSE ONE OF THE TIMES RANDOMLY
	MOVW	@REFCNT,A2
	SRL	2,A2
	SLL	32-2,A2			;ISOLATE AS 0..3
	SRL	32-6,A2			;RANDOM OFFSET INTO WORDS
	MOVL	*A8(ANIMARG),A0		;FIRST TIME
	ADD	A2,A0
	MOVW	*A0(0),*A8(ANIMSLPB)
	
	RETS


**
** SETCARPAL
**
** IN
**   A2 PAL
**   A8 CAR
** SC: A1-A3
**
** JFL 20 MAR 93; FROM FLASHCARPAL
** JFL 22 MAR 93; FIX FLASH/UNFLASH
**
SETCARPAL
	;CHECK IF ALREADY FLASHING
	MOVB	*A8(OFLAGS+B_FLASHING-7),A14
	JRNN	SCPNOFLASH

	;SET SO THIS NEW PAL IS SET BY FLASHER
	MOVW	A2,*A8(OFLASHPALORG)
	
	;CLEAR FLASHING FLAG
	SETF	1,0,0
	MOVE	SP,*A8(OFLAGS+B_FLASHING),0
	SETF	16,1,0

SCPNOFLASH
	;GET ORG CAR PAL
	MOVW	*A8(OPAL),A1
	MOVE	A8,A3

SCPLOOP
	;MAKE SURE THIS THIS PART IS SAME PAL AS CAR
	MOVW	*A3(OPAL),A14
	CMP	A1,A14
	JRNE	SCPNEXT

	;SET
	MOVW	A2,*A3(OPAL)

SCPNEXT
	;NEXT
	MOVL	*A3(OPARTS),A3
	JRNZ	SCPLOOP

	RETS

**
** FLASHCARPAL
**
** IN
**   A2 PAL:COUNT
**   A3 TIMEOFF:TIMEON
**   A7 CD
**   A8 CAR
** SCRATCH: A2-A3
**
** JFL 02 MAR 93
** JFL 12 MAR 93; PASS IN PAL,DELAY,COUNT
**
FLASHCARPAL
	;CHECK IF ALREADY FLASHING
	MOVB	*A8(OFLAGS+B_FLASHING-7),A14
	JRN	FCPX

	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A8(OFLAGS+B_FLASHING),0
	SETF	16,1,0

	MMTM	SP,A0,A1,A4,A7,A9,A10,A11

	;GET ORG CAR PAL
	MOVW	*A8(OPAL),A4
	MOVW	A4,*A8(OFLASHPALORG)

	MOVE	A7,A9
	MOVE	A2,A10
	MOVE	A3,A11

	SRL	16,A2

	MOVE	A8,A3

FCPLOOP
	;MAKE SURE THIS THIS PART IS SAME PAL AS CAR
	MOVW	*A3(OPAL),A14
	CMP	A4,A14
	JRNE	FCPNEXT

	;SET
	MOVW	A2,*A3(OPAL)

FCPNEXT
	;NEXT
	MOVL	*A3(OPARTS),A3
	JRNZ	FCPLOOP

	CREATE	PID_DRAGONE,UNFLASHCARPROC
	MOVW	A11,*A0(PTIME)

	MMFM	SP,A0,A1,A4,A7,A9,A10,A11
FCPX
	RETS

**
** UNFLASHCARPROC -- PROC
**
** IN
**   A8 CAR
**   A9 CD
**  A10 PAL:COUNT
**  A11 TIMEON:TIMEOFF
**
** JFL 02 MAR 93
** JFL 12 MAR 93
**
UNFLASHCARPROC
	MOVE	A8,A3
	MOVE	A10,A4		;ISOLATE PAL
	SRL	16,A4
	MOVW	*A8(OFLASHPALORG),A5
UFCPLOOP	
	MOVW	*A3(OPAL),A14
	CMP	A4,A14
	JRNE	UFCPNEXT

	;UNFLASH
	MOVW	A5,*A3(OPAL)
	
UFCPNEXT
	;NEXT
	MOVL	*A3(OPARTS),A3
	JRNZ	UFCPLOOP
 	
	;COUNT DOWN
	MOVE	A10,A14	 		;PAL:COUNT
	ZEXT	A14,W
	DEC	A14
	JRP	UFCPANOTHER
	
	;CLEAR FLAG
	SETF	1,0,0
	MOVE	SP,*A8(OFLAGS+B_FLASHING),0
	SETF	16,1,0

	DIE

UFCPANOTHER
	MOVX	A14,A10			;PAL:COUNT

	;SLEEP TO DELAY
	MOVE	A11,A0			;TIMEON:TIMEOFF
	ZEXT	A0,W
	CALLA	PRCSLP

	;SET UP TO FLASH AGAIN
	MOVE	A10,A2			;PAL:COUNT
	SRL	16,A2
	MOVE	A8,A3
	MOVW	*A8(OPAL),A4

UFCP2LOOP
	MOVW	*A3(OPAL),A14
	CMP	A4,A14
	JRNE	UFCP2NEXT

	;SAVE OBJ PAL & SET
	MOVW	A2,*A3(OPAL)

UFCP2NEXT
	;NEXT
	MOVL	*A3(OPARTS),A3
	JRNZ	UFCP2LOOP

	;SLEEP TO DELAY
	MOVE	A11,A0			;TIMEON:TIMEOFF
	SRL	16,A0
	CALLA	PRCSLP
	JRUC	UNFLASHCARPROC
	

**
** ANIPALCONST
** ANIPALCONSTSAVE
** ANIPALCONSTFIRST
**
** SET TO CONSTANT COLOR
**
** IN
**   A8 OBJ
**   FARG 
**    .LONG CONST:PAL
**
** JFL 11 FEB 93
**
ANIPALCONSTSAVE
	SETF	4,0,0
	MOVE	*A8(OCTRL),*A8(OSAVE1),0
	MOVL	*A8(OPAL),*A8(OSAVE2)
	MOVK	(DMACNZ & 0FH),A14
	MOVE	A14,*A8(OCTRL),0
	SETF	16,1,0
	JRUC	ANIPALCONST
ANIPALCONSTFIRST
	SETF	4,0,0
	MOVI	DMACNZ,A14
	MOVE	A14,*A8(OCTRL),0
	SETF	16,1,0
ANIPALCONST
	CALLR	GETAFARG_LONG ;A0 CONST:PAL
	MOVL	A0,*A8(OPAL)
	RETS

**
** ANIPALCONSTPLAYER
** ANIPALCONSTICON
**
** SET TO PLAYER COLOR
**
** IN
**   A8 OBJ
**
** JFL 11 FEB 93
**
ANIPALCONSTICONFIRST
	SETF	4,0,0
	MOVI	DMACNZ,A14
	MOVE	A14,*A8(OCTRL),0
	SETF	16,1,0
ANIPALCONSTICON
	MOVW	*A8(OICONOID),A14
	JRUC	APCPOID
ANIPALCONSTPLAYER
	MOVW	*A8(OID),A14
APCPOID
	SLL	SL_POID,A14
	SRL	SR_POID,A14
	SLL	5,A14
	ADDI	PLPALCONSTTBL,A14
	MOVL	*A14(0),*A8(OPAL)
	RETS

**
** ANIPALCONSTRESTORE
**
** RESTORE TO TO ORG PAL & CONST
**
** IN
**   A8 OBJ
**
** JFL 11 FEB 93
**
ANIPALCONSTRESTORE
	SETF	4,0,0
	MOVE	*A8(OSAVE1),*A8(OCTRL),0
	MOVL	*A8(OSAVE2),*A8(OPAL)
	SETF	16,1,0
	RETS

**
** MAKEOBJANIM
**
** IN
**   A2 ANIMSCRIPT
**   A8 OBJ
**
** JFL 17 NOV 92
** JFL 10 JAN 93
**
MAKEOBJANIM
	MMTM	SP,A0,A1,A5,A7

	MOVE	A2,A2
	JRZ	MOAX

	;SPAWN
	MOVI	ASIFROMCENTERGROW,A3	;INIT()
	CALLR	ANISPAWNONE	;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT()
				;SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR
MOAX
	MMFM	SP,A0,A1,A5,A7
	RETS

**
** ANIRETS
**
** JFL 01 OCT 92
**
ANIRETS
	RETS

ANIHITTEST
	MOVL	*A8(OPART1),A0
	MOVL	*A0(OZVAL),A14
	ADDK	4,A14
	MOVL	A14,*A8(OZVAL)
	RETS

**
** ANISTOPANI
**
** IN
**   A8 OBJ
**
** JFL 03 DEC 92
**
ANISTOPANI
	CLR	A14
	MOVL	A14,*A8(ANIMSCR)
	MOVL	A14,*A8(ANIMFRM)
	RETS
	
**
** ANISETSCALETYPE
**
** JFL 14 JAN 93
**
ANISETSCALETYPE
	CALLA	GETAFARG_WORD		;GET STATE
	MOVW	A0,*A8(OSCALETYPE)
	CLR	A14
	MOVW	A14,*A8(OSCALEMUL)	;FORCE UPDATE
	RETS


**
** ANILANDKILL
** OBJ HAS LANEDED, KILL IN A BIT
**
** IN
**   A8 OBJ
** SCRATCH: A0-A8,A10-A11
**
** JFL 23 FEB 93
**
ANILANDKILL
	;KILL THE SHADOW
	MOVE	A8,A0			;SAVE
	MOVL	*A8(OSHADIMG),A8
	JRZ	ALKNOSHAD
	CALLA	ZAP_OBJ ;IN:A8

ALKNOSHAD
	MOVI	ASFLASHKILL,A14
	MOVL	A14,*A0(ANIMFRM)
	MOVL	A14,*A0(ANIMSCR)
	MOVK	16,A14
	MOVW	A14,*A0(ANIMSLPB)

	;CLR YACC & XYZ VELS
	CLR	A14
	MOVI	OYACC,A1
	ADD	A0,A1
	MOVL	A14,*A1+
	MOVL	A14,*A1+
	MOVL	A14,*A1+
	MOVL	A14,*A1

	RETS

**
** ANIFLYLANDKILL
**
** LAUNCH THE OBJECT UP AND... WHEN IT HITS THE GROUND ZAP IT!
**
** IN
**   A0-A11 SCRATCHABLE
**   A8 OBJ
**
** JFL 01 OCT 92
** JFL 02 OCT 92
** JFL 20 NOV 92
** JFL 16 FEB 93; OFLYBITS
**
ANIFLYLANDKILL
	;GET RAND & FIGURE YVEL & YACC
	CALLA	RANDOMA2

	;TEST IF YVEL IS FORCED
	MOVW	*A8(OFLYBITS),A9
	JRNN	AFLKVNFORCE

	;VEL IS FORCED -- USE AS IS
	MOVE	A9,A1
	SLL	16+1,A1
	SRL	16+1,A1
	JRUC	AFLKVOK

AFLKVNFORCE
	;PICK A YVEL KINDOF RANDOMLY
	MOVE	A2,A1			;RANDOM
	SLL	32-11,A1		;GET BITS OF RND
	SRL	32-11,A1
	
	;GET SIZE OF IMG & USE AS WEIGHT OF IMG
	MOVL	*A8(OUSIZE),A3
	MOVE	A3,A14
	SRL	16,A14			;HEIGHT
	ZEXT	A3,W			;WIDTH
	ADD	A3,A14			;WEIGHT = WIDTH + HEIGHT
	SUB	A14,A1 			;SUBTRACT OUT THE WEIGHT OF THE IMG
	JRNN	AFLKNN
	MOVI	FLYMINVEL,A1
	JRUC	AFLKVOK
AFLKNN

	ADDI	FLYMINVEL,A1   		;ADD IN BASE Y VEL
	CMPI	FLYMAXVEL,A1	       	;CHECK FOR CEILING REACHED
	JRLE	AFLKVOK
	MOVI	FLYMAXVEL,A1
AFLKVOK
	;MULTIPLY TO ADJUST FOR Z
	MOVW	*A8(OSCALEMUL),A14
	TLOCKON	Z
	SETF	12,1,1
	MPYU	A14,A1
	SETF	32,1,1
	;SRA	MPYSCALE-VELSHIFT,A1	;CANCEL EACHOTHER OUT
	
	;CHECK IF PIECE IS HEAVY OR LIGHT -- TEMP UN-IMPLEMENTED
	RL	1,A2			;RANDOM
	JRC	AFLKHEAVY		;PIECE IS HEAVY
	SLL	1,A1			;TOSS EVEN HIGHER
AFLKHEAVY
	MOVE	A1,A14			;SAVE SCALED YVEL FOR YACC
	NEG	A1			;YVEL IS UP
	MOVL	A1,*A8(OYVEL)
	SRL	FLYACCSHIFT,A14		;TURN YVEL INTO YACC
	MOVL	A14,*A8(OYACC)

	;SET X & Z VELS RANDOMLY
	RL	1,A2			;RANDOM
	MOVE	A2,A1
	SLL	32-16,A1
	SRA	32-16,A1

	;DO WE NEED TO SEND TOWARD CENTER
	BTST	B_FBCENTER,A9
	JRZ	AFLKXOK

	;SEND TOWARD CENTER
	ABS	A1	
	MOVW	*A8(OXPOS),A14
	CMPI	SCRRGT/2,A14
	JRLE	AFLKXOK
	NEG	A1
AFLKXOK
	MOVL	A1,*A8(OXVEL)

	
	;IF WE ARE FORCED, SEND TOWARD VIEWER
	BTST	B_FBFORCE,A9
	JRZ	AFLKZRND

	;SEND TOWARD VIEWER
	MOVI	[2,0],A14
	JRUC	AFLKZOK

AFLKZRND
	MOVE	A2,A14			;RANDOM
	SLL	32-17,A14
	SRA	32-17,A14

AFLKZOK
	MOVL	A14,*A8(OZVEL)
	
	;SET UP FOR THE DEADLY FALL
	MOVI	ANIKILL,A2
	MOVI	SETGCOL,B8 ;IN:A2,A8,B8 GCOL(),OBJ,PC
	EXGPC	B8

	RETS

**
** GCBOUNCEKILL
**
** IN
**   A0 THIS FUNC
**   A8 OBJ
**
** JFL 29 JUL 92
** JFL 08 DEC 92
**
GCBOUNCEKILL

	;NEXT BOUNCE
	MOVL	*A8(OBOUNCEYVEL),A14	;GET YVEL LAST TIME
	SRA	1,A14			;TAKE A FRACTION OF IT
	CMPI	STILLBOUNCEYVEL,A14
	JRLT	GCBOUNCING

GCSTOPPED
	;OBJECT HAS STOPPED BOUNCING
	CALLA	ZAP_OBJ ;IN A8
	JRUC	GCX

GCBOUNCING
	;SAVE NEW BOUNCE VELS
	MOVL	A14,*A8(OBOUNCEYVEL)		;SAVE VEL FOR WHEN WE DO HIT
	MOVL	A14,*A8(OYVEL)
	MOVL	*A8(OBOUNCEYACC),*A8(OYACC) 	;RESTORE ACCELERATION

	;REATTACH THE GCOL
	MOVE	A0,A2
	MOVI	SETGCOL,B8 ;IN:A2,A8,B8 GCOL(),OBJ,PC
	EXGPC	B8

GCX
	RETS

**
** ANIKILL
** ANIKILLPOWERUP
**
** IN
**   A8 OBJ
** SCRATCH: A0-A7,A9-A11
**
** JFL 29 JUL 92
**
ANIKILLPOWERUP
	MOVI	DRG+DRGPOWERUPS,A0
	MOVW	*A0,A14
	DEC	A14
	TLOCKON	N
	MOVW	A14,*A0
ANIKILL
	CALLA	ZAP_OBJ ;IN: A8

	RETS

**
** FLOATOBJ
**
** IN
**   A0 OBJ
**   A1 ANIM SCRIPT
**
** JFL 04 AUG 92
**
FLOATOBJ
	;PULL FROM SUPL
	CALLA	PULLSUPP

	;PUT IT ON THE AUTO VEL LIST
	MOVB	*A0(OID+B_OIDFAUTOVEL-7),A14
	JRN	FOHASV

	CALLA	INSVLIST ;IN:A0 OBJ
	
FOHASV
	MOVI	OID_FLOATER,A14		;CHANGE ID FOR NEXT PULLSUPP
	MOVW	A14,*A0(OID)

	MOVL	A1,*A0(ANIMFRM)
	MOVL	A1,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI

	;MAKE IT SCALE TO 1TO1
	MOVK	STYPGROW1TO1,A14
	MOVW	A14,*A0(OSCALETYPE)
	CLR	A14
	MOVW	A14,*A0(OSTATE)		;FOR STYPGROW1TO1


FOX
	RETS


**
** ANILOOPHERE
**
** RESET OANISCR TO HERE SO IT LOOPS
**
** IN
**   A0 SCRATCH
**   A8 OBJ
**
** JFL 01 OCT 92  
**
ANILOOPHERE
	MOVL	*A8(ANIMFRM),*A8(ANIMSCR)
	RETS


***
*** SPAWN STUFF -----------------------------------------------------------
***


**
** ANISPAWN TBL
**
** THESE ARE TABLES OF ADDITIONAL STUFF TO SPAWN AND ANIMATE
** THE MAIN OBJECT WILL FOLLOW ITS ANIMATION SCRIPT PER NORMAL, AND
** THIS STUFF WILL ALSO BE CREATED
**
** .LONG INIT(),ASCRIPT
**
** !!!THE ASCRIPT MUST START WITH THE IMAGE HEADER!!!
** IF THE ASCRIPT HAS ITS LOW BIT SET, THE H/V FLIP WILL NOT BE SET
**
** JFL 02 OCT 92
** JFL 27 OCT 92
** JFL 10 JAN 93; ASCRIPT MUST START W/IHDR
**

**
** ANISPAWNTBL
**
** IN
**   A0-A11 SCRATCHABLE
**   A1 ARG1 -- DOESNT MATTER
**   A2 ARG2 -- ANI SPAWN TBL
**   A3 ARG3 -- DOESNT MATTER
**   A8 PARENT OBJ
**
** JFL 02 OCT 92
** JFL 10 JAN 93; W/O IMG
**
ANISPAWNTBL
	MOVE	A2,A6
	JRUC	ASTNEXT
ASTLOOP
	CALLR	ANISPAWNONE ;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
			    ;   SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR
ASTNEXT
	MMFM	A6,A2,A3	;A2,A3 ASCRIPT,INIT()
	MOVE	A3,A3
	JRNZ	ASTLOOP
ASTX
	RETS

**
** ANISPAWNRANDTBL
**
** IN
**   A0-A11 SCRATCHABLE
**   A1 ARG1 -- DOESNT MATTER
**   A2 ARG2 -- ANI SPAWN TBL
**   A3 ARG3 -- RANDOM THRESHOLD, 0..255, IF RANDOM BYTE IS >= IT IS SPAWNED
**   A8 PARENT OBJ
**
** JFL 02 OCT 92
** JFL 10 JAN 93
**
ANISPAWNRANDTBL
	MOVE	A2,A6
	CALLA	RANDOMA2 ;A2 RANDOM
	MOVE	A2,A9		;RANDOM
	MOVE	A3,A10		;RANDOM THRESHOLD
	JRUC	ASRTNEXT

ASRTLOOP

	;CHECK ON RAND
	RL	3,A9		;SLIDE AROUND A LITTLE
	MOVE	A9,A14
	SLL	24,A14		;ISOLATE 8
	SRL	24,A14
	CMP	A10,A14
	JRLT	ASRTNEXT	;DONT SPAWN

	CALLR	ANISPAWNONE ;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
			    ;   SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR

ASRTNEXT
	MMFM	A6,A2,A3	;A2,A3 ASCRIPT,INIT()
	MOVE	A3,A3
	JRNZ	ASRTLOOP
ASRTX
	RETS

**
** ANISPAWNRANDONETBL
** SPAWN ONLY ONE OF THE TABLE.. CHOSEN RANDOMLY
**
** IN
**   A0-A11 SCRATCHABLE
**   A1 ARG1 -- DOESNT MATTER
**   A2 ARG2 -- ANI SPAWN TBL
**   A3 ARG3 -- DOESNT MATTER
**   A8 PARENT OBJ
**
** JFL 02 OCT 92
** JFL 10 JAN 93
**
ANISPAWNRANDONETBL
	MOVE	A2,A6

	;COUNT THE ITEMS
	CLR	A9
	DEC	A9
ASROTCOUNT
	;CHECK IF THIS ENTRY IS VALID
	MOVL	*A2,A14
	JRZ	ASROTCOUNTED		;PAST LAST VALID
	INC	A9
	ADDI	ANSTSIZE,A2
	JRUC	ASROTCOUNT
ASROTCOUNTED

	CALLA	RANDOMA2 ;A2 RANDOM
	SRL	26,A2

ASROTMOD
	;GET IT SMALL ENOUGH
	SRL	1,A2
	CMP	A9,A2
	JRGT	ASROTMOD

	;INDEX INTO TBL
	SLL	ANSTSIZEOF,A2
	ADD	A2,A6

	MMFM	A6,A2,A3	;A2,A3 ASCRIPT,INIT()
	CALLR	ANISPAWNONE ;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
			    ;   SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR
ASROTX
	RETS

**
** ANISPAWN
**
** IN
**   A0-A11 SCRATCH
**   A8 OBJ
**   3 GETAFARG_LONG ARGS FROM ANIM SCRIPT (ARGC SPECIFIED AS 4 WORDS)
**
** EXAMPLE
**	.LONG	1	 	;FRAME KEEPS SAME IMAGE
**	.WORD	M_AFUNC|1	;SIGNAL ANIM FUNC
**	.LONG	ANISPAWN+4	;THIS FUNCTION PLUS 2 LONG ARGS
**	.LONG	ASCRIPT		;ANIM SCRIPT / ARG2
**	.LONG	FUNCTION	;ANISPAWN INIT FUNCTION	/ ARG3
**
** JFL 01 OCT 92
** JFL 10 JAN 93
** JFL 19 FEB 93; ANISPAWN4
**
ANISPAWN
	;GET IMAGE,ANIMATION,INIT()
	CALLR	GETAFARG_LONG ;IN: A8 OBJ OUT: A0 ARG
	MOVE	A0,A2
	CALLR	GETAFARG_LONG ;IN: A8 OBJ OUT: A0 ARG
	MOVE	A0,A3
	
	JRUC	ANISPAWNONE

**
** ANISPAWNONE -- SETS FLIP BITS RANDOMLY BASED ON MASK
** ANISPAWNFIX -- SETS FLIP BITS BASED ON MASK
**
** IN
**   A2 ANIMATION SCRIPT (MANDATORY) -- SAVED
**   A3 OBJ INIT FUNCTION (OPTIONAL) -- SAVED
**   A4 SCRATCH
**   A5 SCRATCH
**   A7 SCRATCH
**   A8 PARENT OBJ -- SAVED
** OUT
**   A0 OBJ
**   A1 IMAGE
**
** NOTE: SEE DRA.I FOR ANISPAWN FLAGS (FOUND IN LOWER 4 BITS OF ANIM SCRIPT)
** NOTE: CURRENTLY ONLY FOR SINGLE PARTERS...
**
** JFL 02 OCT 92
** JFL 10 JAN 93; GET IHDR FROM ANIM SCRIPT
** JFL 19 FEB 93; INS OBJ INTO PLANE LIST AFTER COORDS SET
** JFL 06 APR 93; DOESNT RANDOMIZE FLIP BITS
**
ANISPAWNONE

	;SET H AND V FLIP AS PER FLAGS
	MOVW	@REFCNT,A14		;GET RND
	SLL	32-4,A14
	SRL	32-2,A14		;KEEP BOTTOM TWO RANDOM BITS
	AND	A2,A14		     	;BITS W/MASK SET & RND SET
	XOR	A14,A2			;FLIP ANY BITS THAT ARE NOW SET

ANISPAWNFIX

	;USE BOTTOM 2 BITS AS RANDOM FLIP MASK
	MOVE	A2,A4
	SLL	SL_HVF,A4		;ISOLATE FLIP BITS
	SRL	SR_HVF,A4
	MOVE	A2,A1
	SRL	4,A1			;ISOLATE ANIM SCRIPT
	SLL	4,A1

	MOVI	OBJINITRAMSPAWN,A5
	MOVL	*A1,A1			;GET IMAGE

	.IF DEBUG
	CMPI	ROM,A2			;MAKE SURE A2 IS IN ROM...
	TLOCKON	LO
	JRLO	ASX
	.ENDIF ;DEBUG

	MOVL	A1,*A5			;SET IHDR IN CREATE OBJ BLOCK

	;SET H AND V FLIP AS PER FLAGS
	MOVW	*A1(ICTRL),A14
	OR	A4,A14
	ORI	DMAWNZ,A14
	MOVW	A14,*A5(COCTRL)

	;SET THE AUTO VEL BIT IN OID AS FLAGGED
	SETF	1,0,0
	RL	32-B_AVEL,A2
	MOVE	A2,*A5(COID+B_OIDFAUTOVEL),0
	RL	B_AVEL,A2
	SETF	16,1,0

	;CREATE THE OBJ
	CALLA	CREATE_OBJ
	JRZ	ASX

	;CHECK IF WE SHOULD FORCE THE PAL
	BTST	B_CDPAL,A2
	JRZ	ASONOTPAL

	;REPLACE THE PAL
	MOVW	*A8(OPAL),*A0(OPAL)

ASONOTPAL
	;CALL INIT FUNCTION
	MOVE	A3,A3
	JRZ	ASADDANI
	CALL	A3 ;IN:A0,A2,A8 CHILD,ANISCRIPT,MOM OUT:A2 ANIMSCR

	;SET INITIAL SCALE
	MOVE	A8,A7		;SAVE
	MOVE	A3,A5		;SAVE
	MOVE	A2,A4		;SAVE
	MOVE	A0,A8
	CALLR	SETOBJSCALE ;IN: A8 OBJ
	MOVE	A4,A2		;RESTORE
	MOVE	A5,A3		;RESTORE
	MOVE	A7,A8		;RESTORE

ASADDANI
	;ADD THE ANIMATION
	SRL	4,A2			;CLEAN OUT BOTTOM BITS
	JRZ	ASINS			;NO ANIM
	SLL	4,A2
	MOVL	A2,*A0(ANIMFRM)
	MOVL	A2,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	INSANI ;IN: A0 OBJ

ASINS
	;INSERT THE OBJ INTO THE PLANE LIST
	CALLR	INSOBJ ;IN:A0

ASX
	RETS


***
*** ANI SPAWN INIT FUNCTIONS -------------------------------------------
***

**
** ASICARPART -- ANISPAWN INIT FUNCTION
**
** SET UP TO KILL ON LANDING
**
** IN
**   A0-A3,A8 MUST BE SAVED
**   A0 OBJ
**   A2 ANISCRIPT
**   A4 SCRATCH
**   A5 SCRATCH
**   A8 MOTHER OBJ
** OUT
**   A2 ANIMSCRIPT (OR ZERO FOR NONE)
**
** JFL 01 OCT 92
** JFL 16 FEB 93
**
ASIDRIVER
	MOVI	M_FBFORCE+DRIVERYVEL+M_FBCENTER,A14
	MOVW	A14,*A0(OFLYBITS)
	JRUC	ACPGENERIC

ASICARPART
	CLR	A14
	MOVW	A14,*A0(OFLYBITS)

ACPGENERIC
	;SET POS
	MOVW	*A8(OZPOS),A14
	INC	A14
	MOVW	A14,*A0(OZPOS)
	MOVW	*A8(OXPOS),*A0(OXPOS)
	MOVW	*A8(OYPOS),*A0(OYPOS)

	;MAKE IT SCALE TO 1TO1
	MOVI	STYPZ,A14
	MOVW	A14,*A0(OSCALETYPE)

	;SET ANIM
	MOVI	ASFLYLANDKILL,A14	;FIRST ANIM TO DO
	MOVL	A14,*A0(ANIMFRM)
	SRL	4,A2			;ISOLATE OBJ ANIM
	SLL	4,A2
	MOVL	A2,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	INSANI ;IN:A0 OBJ
	
	.IF 0 ;NO SHAD
	;CREATE SHADOW
	MMTM	SP,A0,A3,A8
	MOVE	A0,A8
	MOVL	*A8(OIMG),A2
	CALLA	MAKESHADMULTI ;IN A2,A3-A5,A8 SHADIMG,SC,OBJ OUT:A0 SHADOBJ
	MOVW	*A8(OXPOS),*A0(OXPOS)
	MOVW	*A8(OZPOS),*A0(OZPOS)
	CALLA	INSOBJ ;IN:A0
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A8(OFLAGS+B_ANIMSHAD),0
	SETF	16,1,0
	MMFM	SP,A0,A3,A8
	.ENDIF ;NO SHAD

	CLR	A2			;DONT ADD ANIM LATER
	RETS

**
** ASICOORDS -- ANISPAWN INIT FUNCTION
** SETUP OBJ FROM MAIN OBJ
**
** IN
**   A0-A3,A8 MUST BE SAVED
**   A0 OBJ
**   A2 ANISCRIPT
**   A4 SCRATCH
**   A5 SCRATCH
**   A8 MOTHER OBJ
**
** JFL 01 OCT 92
** JFL 17 NOV 92
** JFL 24 FEB 93
** JFL 22 MAR 93; ADDED ZOFF
**
ASICOORDS
	MOVW	*A8(OXPOS),*A0(OXPOS)
	MOVW	*A8(OYPOS),*A0(OYPOS)
	MOVW	*A8(OZPOS),*A0(OZPOS)
	MOVW	*A8(OZOFF),*A0(OZOFF)
	RETS

**
** ASIFROMCENTER -- ANISPAWN INIT FUNCTION
** SETUP OBJ FROM MAIN OBJ
**
** IN
**   A0-A3,A8 MUST BE SAVED
**   A0 OBJ
**   A2 ANISCRIPT
**   A4 SCRATCH
**   A5 SCRATCH
**   A8 MOTHER OBJ
**
** JFL 01 OCT 92
** JFL 17 NOV 92
**
ASIFROMCENTERGROW
	;MAKE IT SCALE TO 1TO1
	MOVK	STYPGROWMAX,A14
	MOVW	A14,*A0(OSCALETYPE)

	MOVW	*A8(OZPOS),A14
	INC	A14
	MOVW	A14,*A0(OZPOS)
	MOVW	*A8(OXPOS),*A0(OXPOS)
	MOVW	*A8(OYPOS),*A0(OYPOS)

	RETS

**
** ASIDEATHBOOM2 -- ANISPAWN INIT FUNCTION
** SETUP OBJ FROM MAIN OBJ
**
** IN
**   A0-A3,A8 MUST BE SAVED
**   A0 OBJ
**   A2 ANISCRIPT
**   A4 SCRATCH
**   A5 SCRATCH
**   A8 MOTHER OBJ
**
** JFL 01 OCT 92
** JFL 17 NOV 92
** JFL 19 FEB 93
**
ASIDEATHBOOM2
	;MAKE IT SCALE BIGGER
	MOVI	STYPZOFF+40,A14
	MOVW	A14,*A0(OSCALETYPE)

	MOVW	*A8(OZPOS),A14
	INC	A14
	MOVW	A14,*A0(OZPOS)
	MOVW	*A8(OYPOS),*A0(OYPOS)

	;SHIFT IT A FEW PIXELS RANDOMLY
	MOVW	*A8(OXPOS),A14
	MOVW	@REFCNT,A4
	SLL	32-7,A4
	SRA	32-5,A4			;+/- 0..15
	ADD	A4,A14
	MOVW	A14,*A0(OXPOS)
	
	RETS

***
*** ---------------------------------------------------------------------
***


**
** MAKETOSCORE
**
** IN
**   A2 IHDR+CODES, SCRATCH
**   A3	SRCOBJ
**  A14 XYOBJ
** OUT
**    Z -- FAIL
**   NZ -- A2 OBJ
**
** CODES
**   BIT0 -- IF SET, THIS GOES SLOW
**   BIT1 -- IF SET, USE SOLID ANIM
**
** JFL 10 FEB 93
**
MAKETOSCORE
	MMTM	SP,A0,A1,A5,A10,A11

	;SAVE IMG & DROP CODES
	MOVE	A2,B0			;SAVE IHDR FOR CODES
	SRL	4,A2
	SLL	4,A2

	;GET COORDS
	MOVW	*A14(OXPOS),A10		;SAVE X
	MOVW	*A14(OZPOS),A11		;SAVE Z
	MOVW	*A14(OZOFF),A14
	ADD	A14,A11

	MOVE	A3,A1			;SRCOBJ

	MOVI	OBJINITRAMAOVEL,A5
	MOVL	A2,*A5			;SET IHDR IN CREATE OBJ BLOCK
	CALLA	CREATE_OBJ ;IN:A5 COBLOCK OUT:A0 OBJ
	JRZ	MTSX
		
	.IF DEBUG
	MOVB	*A0(OID+B_OIDFAUTOVEL-7),A14
	TLOCKON	NN ;MUST BE ON V LIST
	.ENDIF ;DEBUG

	;SET COORDS
	MOVW	A10,*A0(OXPOS)
	MOVE	A11,A14
	MOVI	TOSCOREZOFF,A2
	ADD	A2,A14
	MOVW	A14,*A0(OZPOS)
	NEG	A2
	MOVW	A2,*A0(OZOFF)

	CALLA	INSOBJ ;IN:A0

	;CHECK IF THIS HAS A SCORE
	MOVW	*A1(OID),A14
	SLL	SL_POID,A14		;ISOLATE OID
	SRL	SR_POID,A14
	JRNZ	MTSHASBOX

	;
	;NO SCORE BOX
	;

	;DOESNT HAVE A SCORE BOX, SEND RIGHT OR LEFT
	MOVI	TOSCOREVEL<<VELSHIFT,A14
	MOVW	@REFCNT,A1
	SRL	3,A1
	JRC	MTSC
	NEG	A14
MTSC
	;CHECK IF WE SHOULD MAKE IT GO SLOW
	SRL	1,B0			;CHECK B_MTSSLOW
	JRNC	MTSNBFAST
	SRA	1,A14
MTSNBFAST
	MOVL	A14,*A0(OXVEL)

	MOVI	ASTOSCORENOBOX,A2
	MOVI	ASTOSCORENOBOXSOLID,A3
	JRUC	MTSANIM

MTSHASBOX
	;
	;SCORE BOX
	;
	
	.IF DEBUG
	CMPI	DRPLAYERS,A14
	TLOCKON	HI
	.ENDIF ;DEBUG

	SLL	5,A14			;TURN PLAYER OID INTO OFFSET
	ADDI	SCOREBOXCENTERTBL-32,A14
	MOVL	*A14,A14		;Z:X
	
	MOVE	A0,A5			;SAVE
	MOVL	A14,*A5(OFLYDESTXY)	;SET DESTINATION

	;FIND DIR TO MIDDLE OF SCORE BOX
	MOVE	A14,A1			;DST Z:X
	MOVE	A14,A3			;DST Z:X
	ZEXT	A1,W			;DX
	SRL	16,A3			;DY
	MOVE	A10,A0			;SX
	MOVE	A11,A2			;SY
	CALLR	POINT2POINTDIR16 ;IN:A0,A1,A2,A3,A4 SX,DX,SY,DY,SC OUT:A3 DIR
	MOVE	A3,A10

	;SET VEL
	MOVI	TOSCOREVEL,A11
	SRL	1,B0			;CHECK B_MTSSLOW
	JRNC	MTSFAST
	SRA	1,A11
MTSFAST
	CALLA	VECTORTOVELS ;IN:A10,A11 DIR,MAG OUT:A10,A11 X,-Z
	SLL	VELSHIFT,A10
	MOVL	A10,*A5(OXVEL)
	SLL	VELSHIFT,A11
	MOVL	A11,*A5(OZVEL)

	MOVE	A5,A0			;RESTORE
	
	MOVI	ASTOSCOREBOX,A2
	MOVI	ASTOSCOREBOXSOLID,A3

MTSANIM
	;CHECK IF WE SHOULD USE SOLID OR NORMAL	ANIM
	SRL	1,B0			;CHECK B_MTSSOLID
	JRNC	MTSADO
	MOVE	A3,A2
	
MTSADO
	MOVL	A2,*A0(ANIMSCR)
	MOVL	A2,*A0(ANIMFRM)
	MOVK	1,A2
	MOVW	A2,*A0(ANIMSLPB)
	CALLA	INSANI ;IN:A0 OBJ

	MOVE	A0,A2			;RETURN NZ & OBJ
MTSX
	MMFM	SP,A0,A1,A5,A10,A11
	RETS

**
** SETAREAPARTSXY -- ANISPAWN INIT FUNCTION
**
** SET UP TO KILL ON LANDING
**
** IN
**   A0 OBJ
**   A2 AREA, SCRATCH
**   A3 SCRATCH
**   A8 CAR OBJ
**
** JFL 29 OCT 92
**
SETAREAPARTSXY
	;CHANGE ANIM POINT BASED ON POSITION ON CAR & AREA
	MOVL	*A8(OCAR),A14
	ADDI	CDTP0,A14
	SLL	5,A2		;SIZEOF CDTP0
	ADD	A14,A2
	MOVL	*A2,A2		;GET Z:X OFFSET OF PT
	MOVL	A2,*A0(OPARTSXY)

	MOVL	*A8(OZVAL),A14
	INC	A14
	MOVL	A14,*A0(OZVAL)
	MOVL	*A8(OXVAL),*A0(OXVAL)
	MOVL	*A8(OYVAL),*A0(OYVAL)
	MOVL	*A8(OXVEL),*A0(OXVEL)
	MOVL	*A8(OYVEL),*A0(OYVEL)
	MOVL	*A8(OYACC),*A0(OYACC)
	MOVL	*A8(OZVEL),*A0(OZVEL)

	;MAKE IT SCALE TO 1TO1
	MOVK	STYPGROW1TO1,A14
	MOVW	A14,*A0(OSCALETYPE)

	RETS
***
*** ----------------------------------------------------------------------
***

**
** DOPEELOUT
** DOTURBO
**
** IN
**   A7 CD
**   A8 OBJ
**  A11 POS==FWD NEG==REV
**
** JFL 07 OCT 92
** JFL 26 MAR 93; MOVING PARTS
** JFL 14 APR 93; TURBO FIRE GRAPHIC
**
DOPEELOUT
	RETS
DOTURBO
	;MAKE SOUND
	MOVW	*A7(CDINPNUM),A14
	ADDI	SNDTURBO1,A14
	CALLA	ARENASND ;IN:A14 SNDID

	;ADD GRAPHIC
	CLR	A2			;DEFAULT DIRADJ
	MOVE	A11,A11
	JRNN	DTFWD
	MOVI	DIR180,A2		;DIRADJ
DTFWD
	MOVI	OID_CARPART+CPTIRECRUD,A3	;OID FOR THIS -- SEE DRA.I
	CALLA	ADDMOVINGPART ;IN:A2,A3,A8 DIRADJ,OID,OBJ

	RETS


***
*** ----------------------------------------------------------------------
***

**
** AOLFMAKEPOWERUP
**
** IN
**   A0 OBJ
** SCRATCH: A1-A3,A5
**
** JFL 18 JAN 93
** JFL 17 FEB 93
** JFL 22 FEB 93; SND
**
AOLFMAKEPOWERUP
	;SIGNAL A POWER UP HAS COME INTO EXISTENCE
	MOVI	DRG+DRGPOWERUPS,A2
	MOVW	*A2,A14
	INC	A14
	MOVW	A14,*A2

	;TRIGGER A SOUND
	MOVI	SNDPOWERUPAPPEAR,A14
	CALLA	MAKESND ;IN:A14 SNDID

AMPUX
	RETS

**
** AOLFCALL CREATION TBL
**
** JFL 25 JAN 93
**
AOLFCMAKETBL
	.LONG	AOLFMAKEPOWERUP
AOLFCMAKETBLX


**
** ARENA OBJ LIST -- OBJECT INIT BLOCKS
** EACH ARENA HAS A SPECIFIC AOL LIST OF ITS OWN
**
** ANIMS MUST START WITH AN .LONG IMAGE
**
** JFL 25 SEP 92
**
GENAOBJLIST
	;ARENA OBJ -- NONE -- SPACE HOLDER
	.LONG	0				;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_JUNK 			;OID
	.WORD	AOID_NONE 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- ARROW
	.LONG	ARROW+M_AOLIMG			;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_JUNK 			;OID
	.WORD	AOID_NONE 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- FLAG
	.LONG	ASFLAG1+M_AOLSHAD		;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_JUNK 			;OID
	.WORD	AOID_FLAG 			;AOID_
	.WORD	STYPZ				;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- TREE -- SPACE HOLDER
	.LONG	BOX+M_AOLIMG			;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_JUNK 			;OID
	.WORD	AOID_TREE 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- POLE
	.LONG	BOX+M_AOLIMG+M_AOLNOSHOW	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_FOBJ 			;OID
	.WORD	AOID_POLE 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- MISSILE
	.LONG	0				;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_MISSILE 			;OID
	.WORD	AOID_MISSILE 			;AOID_
	.WORD	STYPZ				;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- MISSILE ICON
	.LONG	ASZTBLMISSILEICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONMISL 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- MONEYBAG ICON
	.LONG	ASZTBLMONEYBAGICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONMONEYBAG		;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- HEALTH ICON
	.LONG	ASZTBLHEALTHICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONHEALTH			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- TURBO ICON
	.LONG	ASZTBLTURBOICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONTURBO 			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- SMARTBOMB ICON
	.LONG	ASZTBLSMARTBOMBICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONSMARTBOMB		;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- DETONATE ICON
	.LONG	ASZTBLDETONATEICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONDETONATE		;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- LMINE ICON
	.LONG	ASZTBLLMINEICON+M_AOLZTBL	;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_ICONEASY 			;OID
	.WORD	AOID_ICONLMINE			;AOID_
	.WORD	STYPNONE			;OSCALETYPE
	.WORD	M_AOLFCALL+AOLFCPOWERUP		;AOLFLAGS

	;ARENA OBJ -- BARREL
	.LONG	BFLIPa_1+M_AOLIMG		;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_BARREL 			;OID
	.WORD	AOID_BARREL			;AOID_
	.WORD	STYPZ				;OSCALETYPE
	.WORD	0				;AOLFLAGS

	;ARENA OBJ -- LAND MINE
	.LONG	0				;DEFAULTANIM
	.LONG	0				;HITANIM
	.WORD	OID_LMINE 			;OID
	.WORD	AOID_LMINE 			;AOID_
	.WORD	STYPELMINE			;OSCALETYPE
	.WORD	0				;AOLFLAGS

GENAOBJLISTX

**
**
** ADDTOARENA
**
** IN
**  A2 ARENAOBJID:AOLVAL16 (SEE DRO.I)
**  A3 Z:X
** A14 ?:Y
** OUT
**  A2 OBJ
**
** IF ARENAOBJID HAS HIGH BIT SET, USE AOL FROM ARENA, ELSE USE GENAOBJLIST
** THIS DOESNT ADD TO V LIST
**
** JFL 24 SEP 92
** JFL 30 SEP 92; SOUNDS TRIGGERED
** JFL 11 OCT 92; RETURN OBJ IN A2
** JFL 14 OCT 92
** JFL 22 NOV 92; SOUND ONLY OK
** JFL 03 DEC 92; AOL
** JFL 15 JAN 93; AOLNOSHOW
**
ADDTOARENA
	.IF MAKEGHOST
	RETS
	.ENDIF ;MAKEGHOST

	MMTM	SP,A1,A5,A6,A8
	MOVE	A14,A1			;SAVE SND:Y

	;CREATE THE OBJ & STUFF IT WITH A BUNCH OF STUFFING
	MOVE	A2,A0			;B_AOIDAOL
	JRN	ATAARENA		;ARENA SPECIFIC		

	;USE GENERAL ARENA OBJ LIST
	SLL	SL_AOID,A0
	SRL	SR_AOID,A0
	TLOCKON	Z
	JRZ	ATAX
	MOVI	GENAOBJLIST,A8
	MOVI	GENAOBJLISTX,A14	;DEBUG
	JRUC	ATAGOTLIST

ATAARENA
	;USE ARENA SPECIFIC ARENA OBJ LIST
	SLL	SL_AOID,A0
	SRL	SR_AOID,A0
	MOVL	@ARENATRACKINFO,A14
	MOVL	*A14(TIAOBJLIST),A8
	MOVL	*A14(TIAOBJLISTX),A14	;DEBUG
	TLOCKON	Z
	JRZ	ATAX

ATAGOTLIST
	;INDEX INTO ARENA OBJ LIST
	SLL	AOLSIZEOF,A0			;SIZEOF ARENAOBJINITTBL
	ADD	A0,A8
	.IF DEBUG
	CMP	A14,A8
	TLOCKON	HS
	JRHS	ATAX
	.ENDIF ;DEBUG
	
	;CREATE THE OBJ
	MOVI	OBJINITRAMAO,A5
	MOVL	*A8,A0				;AOLDEFAULTANI
	MOVE	A0,A6				;SAVE FOR FLAGS & ANIM
	SRL	4,A0				;ISOLATE ANIM OR IMG
	SLL	4,A0	

	BTST	B_AOLIMG,A6
	JRNZ	ATAIMG				;IT IS AN IMG

	BTST	B_AOLZTBL,A6			;IS IT A Z TBL THING
	JRZ	ATAANIM

	;TURN Z INTO 0..7 INDEX & LOOKUP IN Z TBL
	MOVE	A3,A14
	SLL	9,A14
	SRL	32-3,A14
	SLL	5,A14  				;SIZEOF ZTBL
	ADD	A0,A14
	MOVL	*A14,A0

	MOVE	A0,A6				;SAVE FOR FLAGS & ANIM
	SRL	4,A0				;ISOLATE ANIM OR IMG
	SLL	4,A0	

	BTST	B_AOLIMG,A6
	JRNZ	ATAIMG				;IT IS AN IMG
	
ATAANIM
	;ITS AN ANIM, GET IMAGE
	MOVL	*A0,A0
ATAIMG
	;SET UP THE CREATE_OBJ BLOCK
	MOVL	A0,*A5	
	MOVW	*A8(AOLOID),*A5(COID)
	BTST	B_AOIDJUNK+16,A2
	JRZ	ATANOTJUNK

	;CLEAR OUT SUP LIST AREA SO ITS NOT HIT TESTED
	SETF	4,0,0
	MOVE	SP,*A5(COID+B_SUPL),0
	SETF	16,1,0
ATANOTJUNK
	MOVW	*A8(AOLSTYP),*A5(COSCALETYPE)
	CALLA	CREATE_OBJ
	JRZ	ATAX
	
	;SET UP
	MOVL	A8,*A0(OAOL)
	MOVW	A2,*A0(OAOLVAL16)		;MISC DATA
	MOVW	*A8(AOLAOID),*A0(OPARTID)	;FOR QUICK REF BY OBJ
	MOVE	A3,A14
	SLL	16,A14
	MOVL	A14,*A0(OXVAL)
	SRL	16,A3
	SLL	16,A3
	MOVL	A3,*A0(OZVAL)
	MOVE	A1,A14
	SLL	16,A14				;GET Y
	MOVL	A14,*A0(OYVAL)

	;DOES THIS GO IN THE BACKGROUND
	MOVW	*A0(OID),A14
	ANDI	MASK_TYPE,A14
	CMPI	TYPE_BG,A14
	JRNE	ATAFG

	;MAKE THIS A BG OBJ
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A0(OFLAGS+B_NOTFG),0
	SETF	16,1,0
	
	MOVI	SCALE1TO1,A14
	MOVL	A14,*A0(OSCALEDMA)
	MOVW	A14,*A0(OSCALEMUL)

	;ADD TO THE BG
	CLR	A14
	MOVW	A14,*A0(OPLANE)
	CALLA	INSBOBJ ;IN:A0 OBJ 
	
	JRUC	ATAINSERTED
ATAFG
	;INSERT THE OBJ INTO THE PLANE LIST
	CALLR	INSOBJ ;IN: A0 OBJ

ATAINSERTED
	;CHECK FOR A CREATION FUNCION CALL
	MOVW	*A8(AOLFLAGS),A14
	JRNN	ATANOCALL		;B_AOLFCALL

	;CALL
	SLL	16+1,A14
	SRL	16+1-5,A14			;SIZEOF TBL
	ADDI	AOLFCMAKETBL,A14
	.IF DEBUG
	CMPI	AOLFCMAKETBLX,A14
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVL	*A14,A14
	CALL	A14 ;IN:A0 OBJ SC:A1-A3,A5

ATANOCALL
	;ADD ANIMATION
	BTST	B_AOLIMG,A6
	JRNZ	ATANOANI			;ITS AN IMAGE, NOT ANI
	MOVE	A6,A14
	SRL	4,A14
	SLL	4,A14
	MOVL	A14,*A0(ANIMFRM)
	MOVL	A14,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	INSANI ;IN: A0 OBJ

ATANOANI

	;CHECK IF OBJ IS MEANT TO BE DISPLAYED
	BTST	B_AOLNOSHOW,A6
	JRZ	ATASHOW				;SHOW IT
       	
	;TURN OFF DMAGO BIT
	SETF	1,0,0
	MOVE	SP,*A0(OCTRL+B_INUSE),0
	SETF	16,1,0

ATASHOW
	;ADD A SHADOW
	BTST	B_AOLSHAD,A6
	JRZ	ATANOSHAD			;DONT MAKE A SHADOW
	MOVE	A0,A8
	CALLA	ADDSHADOW ;IN: A0,A2,A8 SC,SC,OBJ
	MOVE	A8,A0
ATANOSHAD

ATAX
	MOVE	A0,A2
	MMFM	SP,A1,A5,A6,A8
	RETS



***
*** -----------------------------------------------------------------------
***


**
** MONEYPICKUPTBL
**
** .WORD COUNTMASK
** .LONG IHDR+CODE,SCOREVAL
**
** CODE -- SEE MAKETOSCORE
**
** JFL 10 FEB 93
**
MONEYPICKUPTBL
	.WORD	0FH			;COUNTMASK
	.LONG	MONEY1K+M_MTSSLOW+M_MTSSOLID,SCORE1K
	.LONG	MONEY5K+M_MTSSLOW+M_MTSSOLID,SCORE5K
	.LONG	MONEY1K+M_MTSSLOW+M_MTSSOLID,SCORE1K
	.LONG	MONEY5K+M_MTSSLOW+M_MTSSOLID,SCORE5K
	.LONG	MONEY1K+M_MTSSLOW+M_MTSSOLID,SCORE1K
	.LONG	MONEY5K+M_MTSSLOW+M_MTSSOLID,SCORE5K
	.LONG	MONEY10K+M_MTSSLOW+M_MTSSOLID,SCORE10K
	.LONG	MONEY5K+M_MTSSLOW+M_MTSSOLID,SCORE5K
	.LONG	MONEY10K+M_MTSSLOW+M_MTSSOLID,SCORE10K
	.LONG	MONEY5K+M_MTSSLOW+M_MTSSOLID,SCORE5K
	.LONG	MONEY10K+M_MTSSLOW+M_MTSSOLID,SCORE10K
	.LONG	MONEY20K+M_MTSSLOW+M_MTSSOLID,SCORE20K
	.LONG	MONEY50K+M_MTSSLOW+M_MTSSOLID,SCORE50K
	.LONG	MONEY75K+M_MTSSLOW+M_MTSSOLID,SCORE75K
	.LONG	MONEY100K+M_MTSSLOW+M_MTSSOLID,SCORE100K
	.LONG	MONEY150K+M_MTSSLOW+M_MTSSOLID,SCORE150K
MONEYPICKUPTBLX

**
** SHAKE SCRIPTS
**
** CPPP SXXX XXXX XXXX
** IF CPPPSXXXXXXXXXXX IS ZERO THEN SCRIPT IS ENDED
** IF C IS SET PPP IS PRI (7 HIGHEST, 0 LOWEST)
** S IS STATE OF SOLENOID, XXXXXXXX IS DELAY TO NEXT CHANGE
**
** JFL 23 JUL 92
**
SSOFFROAD	.WORD	09806H,00004H,00804H,00004H,0


* EOF 
