***
*** FILE: DRH.ASM
*** DERBY RACE HIT ROUTINES
***
*** JFL 16 AUG 92; FROM DR.ASM SPLIT
*** JFL 18 AUG 92; MOTION VECTOR METHOD
*** JFL 19 AUG 92
*** JFL 21 AUG 92; VIEWLEFTRIGHT
*** JFL 22 AUG 92
*** JFL 03 SEP 92
*** JFL 13 SEP 92; SCALE FIX
*** JFL 14 SEP 92; Y HIT TESTING
*** JFL 16 SEP 92; SCREEN BASED Z
*** JFL 17 SEP 92
*** JFL 24 SEP 92; FLAGS
*** JFL 28 SEP 92; NEW SCRATCH
*** JFL 02 OCT 92; CRAZYSCALE
*** JFL 07 OCT 92; SCORESETDAMAGE
*** JFL 13 OCT 92; VEC
*** JFL 16 OCT 92; VEC
*** JFL 20 OCT 92; CARTHROWUP
*** JFL 26 OCT 92
*** JFL 29 OCT 92
*** JFL 02 NOV 92; REACTIONS REDONE
*** JFL 15 NOV 92
*** JFL 23 DEC 92; NEW VEC
*** JFL 20 JAN 93; CDAGG
*** JFL 18 FEB 93; MISL SUP LIST
*** JFL 20 MAR 93; ROADKILLED CARS
*** JFL 12 APR 93; NO KILLS IN SCORE BOX
*** JFL 14 APR 93; LMINE ICON
*** JFL 15 APR
***

	.MLIB	"APMACS.LIB"
	.FILE	"DRH.ASM"
	.TITLE	" <<< DERBY RACE -- HIT >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST
**
** COMPILE FLAGS
**
SPINCRASH	EQU	0
UNDOEDGEHITS	EQU	0	;DONT TURN ON
UNDODIR		EQU	0
LOSERTOTOP	EQU	1
WINNERDEMON	EQU	1
NOYSCALE	EQU	0	;SCALE ISNT RELATED TO Y AT ALL
SCOREFLAGS	EQU	1	;SCORE FOR FLAG PICKUP
FLAGSASLAPS	EQU	0	;COUNT FLAGS AS LAPS

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

*	GET THE SYSTEM STUFF
	.INCLUDE	"AP.H"
	.INCLUDE	"DRINP.I"
	.INCLUDE	"DR.I"
	.INCLUDE	"DRO.I"
	.INCLUDE	"DRS.I"
	.INCLUDE	"DRC.I"
	.INCLUDE	"DRVEC.I"
	.INCLUDE	"DRV.I"
	.INCLUDE	"DRSND.I"
	.INCLUDE	"DRT.I"
	.INCLUDE	"DRPAL.I"
	.INCLUDE	"DRA.I"
	.INCLUDE	"DRMIS.I"
	.INCLUDE	"DRHITMSK.I"
	.INCLUDE	"DRFSCALE.I"

** OTHERS USE
	.DEF	TWOCARSHIT	;DRH.ASM
	.DEF	AFTERHITTEST	;DRH.ASM
	.DEF	BEFOREHITTEST	;DRH.ASM
	.DEF	WHCHECKFRAME	;DRH.ASM
	.DEF	GETSCALE	;DRH.ASM
	.DEF	SETOBJSCALE	;DRH.ASM
	.DEF	TAKEDAMAGE	;DRH.ASM
	.DEF	HITTESTOBJS	;DRH.ASM
	.DEF	HITTESTMISC	;DRH.ASM
	.DEF	HITTESTCARS	;DRH.ASM
	.DEF	AREAAWAY180TBL	;DRH.ASM
	.DEF	RANDOMSPIN	;DRH.ASM
	.DEF	ARSCALETBLRACE 	;DRH.ASM
	.DEF	INITARENASCALE	;DRH.ASM
	.DEF	OBJOBJDIR32	;DRH.ASM
	.DEF	OBJ2OBJDIR	;DRH.ASM
	.DEF	POINT2POINTDIR16 ;DRH.ASM
	.DEF	CARHITAOLOBJ	;DRH.ASM
	.DEF	CARLOSEPARTS	;DRH.ASM
	.DEF	FLASHPLBACKDEATH ;DRH.ASM
	.DEF	SETZMIN		;DRH.ASM
	
** WE USE
	.REF	ARENASND	;DRSND.ASM
	.REF	MAKESND		;DRSND.ASM
	.REF	FLOATOBJ	;DR.ASM
	.REF	SSOFFROAD	;DRI.ASM
	.REF	HITLIST		;DR.ASM
	.REF	DEMONCARINP	;DR.ASM
	.REF	WHOSHIT		;DR.ASM
	.REF	DEBUGOBJ	;DR.ASM
	.REF	KILLCAR		;DR.ASM
   	.REF	ASKILL		;DRI.ASM
	.REF	WINNER		;DR.ASM
	.REF	SCOREVALADD	;DRS.ASM
	.REF	SCOREVALADDOID	;DRS.ASM
	.REF	SCORESETDAMAGE	;DRS.ASM
	.REF	SCORESETDAMAGEOID ;DRS.ASM
	.REF	SCORESETTURBOOID ;DRS.ASM
	.REF	CLEARINPVEC	;DR.ASM
	.REF	CLEARVEC	;DR.ASM
	.REF	CARTHROWUP	;DRC.ASM
	.REF	CARDISABLE	;DRC.ASM
	.REF	RANDOMA2	;APUTIL.ASM
	.REF	CKINSANI	;APD.ASM
	.REF	SCORESETPLBACK	;DRS.ASM
	.REF	SCORESETPLBACKOID ;DRS.ASM
	.REF	COMPTODIRVEC	;DR.ASM
	.REF	MISPICKUP	;DRMIS.ASM
	.REF	LMINEPICKUP	;DRMIS.ASM
	.REF	ADDTIREVEC	;DR.ASM
	.REF	MAKETOSCORE	;DRA.ASM
	.REF	MONEYPICKUPTBL	;DRA.ASM
	.REF	MONEYPICKUPTBLX	;DRA.ASM
	.REF	MISDETONATEALL	;DRMIS.ASM
	.REF	MISDETONATETARGET ;DRMIS.ASM
	.REF	ASICARPART	;DRA.ASM
	.REF	ASICOORDS	;DRA.ASM
	.REF	ANISPAWNONE	;DRA.ASM
	.REF	VECTORTOVELS	;DR.ASM
	.REF	BARRELPROC	;DRBAR.ASM
	.REF	ASLMINEBOOM	;DRAS.ASM
	.REF	FLASHCARPAL	;DRA.ASM
	.REF	LMINEDETONATE	;DRMIS.ASM
	.REF	TOSSRUNNERUP	;DRR.ASM

	.REF	SASROLLLEFT	;DRAS.ASM
	.REF	SASROLLRIGHT	;DRAS.ASM
	.REF	SASROCKBACKA	;DRAS.ASM
	.REF	SASROCKFRONTA	;DRAS.ASM
	.REF	SASROCKRIGHTA	;DRAS.ASM
	.REF	SASROCKLEFTA	;DRAS.ASM

** WE USE -- RAM
	.REF	ARENASCALETBL		;DRRAM.ASM
	.REF	DRG			;DRRAM.ASM

	.TEXT
	.EVEN


**
** DEFINES
**
MINSPINSPEED	EQU	1		;MIN
MAXSPINSPEED	EQU	10H		;MAX
HITSPINSHIFT	EQU	9		;RIGHT SHIFT
THROWDEMONDUR	EQU	8		;SHOULD BE BASED ON DAMAGE
EDGEDEMONDUR	EQU	4
SCALECLEAN	EQU	2		;BITS TO CLEAN OF SCALE
STAYHITTIME	EQU	10
REHITSTOMOVE	EQU	9
REHITSTOTHROW	EQU	20
VELHITSTRENGTH	EQU	9		;RIGHT SHIFT FROM VEL TO HIT STRENGTH
VELHITPOINTS	EQU	9		;RIGHT SHIFT FROM VEL TO HIT POINTS
HITYFLAG 	EQU	10		;Y WILL SOMETIMES
HITYTREE	EQU	500		;Y WILL NOT
HITYPOLE	EQU	500		;Y WILL NOT
HITYCAR		EQU	20		;Y WILL SOMETIMES
HITYMISSILE	EQU	10		;Y WILL SOMETIMES
HITYICON	EQU	30		;Y WILL SOMETIMES
HITYBARREL	EQU	10		;Y WILL SOMETIMES
HITYLMINE	EQU	2		;Y WILL SOMETIMES
KILLAGG		EQU	16		;AGG VALUE FOR KILLING A CAR
MISCPIECEAFTER	EQU	2		;HITS BEFORE PARTS COME OFF
BARRELHITVEL	EQU	100H		;BARREL HIT VEL

***
*** HIT TESTING ------------------------------------------------------------
***

SR_QDIST	EQU	3

**
** HITCARCAR
** CAR IN A0 BOX OVERLAPS CAR IN A1 BOX
**
** IN
**   A0 OBJ0
**   A1 OBJ1
**   A2,A3,A6-A10 SCRATCH
** OUT
**   EQ IF NO OTHER CARS HIT, NE IF ANY OTHER CARS HIT
**
** JFL 22 JUL 92
** JFL 23 JUL 92
** JFL 28 JUL 92
** JFL 09 AUG 92; OVERLAPPING BOX CHECK
** JFL 11 AUG 92; MAKE SURE OBJ ISNT A CAR THAT HAS ALREADY BEEN HIT
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 29 SEP 92; NEW SCRATCH
** JFL 06 OCT 92; SCALEHITTEST BUFFERING
** JFL 14 OCT 92; RETURN FLAG
** JFL 10 NOV 92; COMPLETELY REDONE W/HIT MASKS
** JFL 11 NOV 92; SCALING
** JFL 15 APR 93
**
HITCARCAR
	MOVI	HCCQRAD,B4

	;
	;OBJ0 POINTS
	;

	;GET IMAGE CENTER POINTS
	MOVW	*A0(OXPOS),A6
	MOVW	*A0(OZPOS),A2
	SLL	16,A2
	MOVY	A2,A6

	;GET POINTS 0..3
	MOVL	*A0(OCAR),A10
	ADDI	CDTP0,A10
	MOVL	*A10+,A7
	ADDXY	A6,A7		;PT0
	MOVL	*A10+,A8
	ADDXY	A6,A8		;PT1
	MOVL	*A10+,A9
	ADDXY	A6,A9		;PT2
	MOVL	*A10,A10
	ADDXY	A6,A10		;PT3

	;FIGURE POINT 4
	MOVE	A8,A6
	ADDXY	A7,A6
	MOVE	A6,A14
	SRA	1,A14
	SEXT	A6,W
	SRA	1,A6
	MOVY	A14,A6		;PT4

	;FIGURE POINT 5
	MOVE	A9,A8
	ADDXY	A7,A8
	MOVE	A8,A14
	SRA	1,A14
	SEXT	A8,W
	SRA	1,A8
	MOVY	A14,A8		;PT5

	;FIGURE POINT 6
	ADDXY	A7,A10
	MOVE	A10,A14
	SRA	1,A14
	SEXT	A10,W
	SRA	1,A10
	MOVY	A14,A10		;PT6

	;FIGURE POINT 7
	MOVE	A8,A7
	ADDXY	A10,A7
	MOVE	A7,A14
	SRA	1,A14
	SEXT	A7,W
	SRA	1,A7
	MOVY	A14,A7		;PT7
				    	
	;FIGURE POINT 8
	MOVE	A8,A9
	MOVE	A7,A14
	SUBXY	A8,A14
	SUBXY	A14,A9		;PT8

	;FIGURE RADIUS & SAVE ALL POINTS IN B REGS
	MOVE	B4,B8
	MOVE	A8,A2
	MOVE	A6,A3
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	MOVE	A14,B3
	MOVE	A7,B0
	MOVE	A8,B1
	MOVE	A8,B2

	;
	;OBJ1 POINTS
	;

	;GET IMAGE CENTER POINTS
	MOVW	*A1(OXPOS),A6
	MOVW	*A1(OZPOS),A2
	SLL	16,A2
	MOVY	A2,A6

	;GET POINTS 0..3
	MOVL	*A1(OCAR),A10
	ADDI	CDTP0,A10
	MOVL	*A10+,A7
	ADDXY	A6,A7		;PT0
	MOVL	*A10+,A8
	ADDXY	A6,A8		;PT1
	MOVL	*A10+,A9
	ADDXY	A6,A9		;PT2
	MOVL	*A10,A10
	ADDXY	A6,A10		;PT3

	;FIGURE POINT 4
	MOVE	A8,A6
	ADDXY	A7,A6
	MOVE	A6,A14
	SRA	1,A14
	SEXT	A6,W
	SRA	1,A6
	MOVY	A14,A6		;PT4

	;FIGURE POINT 5
	MOVE	A9,A8
	ADDXY	A7,A8
	MOVE	A8,A14
	SRA	1,A14
	SEXT	A8,W
	SRA	1,A8
	MOVY	A14,A8		;PT5

	;FIGURE POINT 6
	ADDXY	A7,A10
	MOVE	A10,A14
	SRA	1,A14
	SEXT	A10,W
	SRA	1,A10
	MOVY	A14,A10		;PT6

	;FIGURE POINT 7
	MOVE	A8,A7
	ADDXY	A10,A7
	MOVE	A7,A14
	SRA	1,A14
	SEXT	A7,W
	SRA	1,A7
	MOVY	A14,A7		;PT7
				    	
	;FIGURE POINT 8
	MOVE	A8,A9
	MOVE	A7,A14
	SUBXY	A8,A14
	SUBXY	A14,A9		;PT8

	;FIGURE RADIUS
	MOVE	B4,B8
	MOVE	A8,A2
	MOVE	A6,A3
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3

	;ACCUMULATE RADIUS
	MOVE	B3,A6			;OBJ0 RADIUS
	;ADD	A6,A6			;THIS HELPS
	ADD	A14,A6			;TOTAL RADIUS

	;
	;TEST FOR ALL HITS
	;

	CLR	B5			;COUNT

	;FRONT V FRONT
	MOVE	A7,A2
	MOVE	B0,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT
	
	;FRONT V MID
	INC	B5			;COUNT
	MOVE	A7,A2
	MOVE	B1,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT
	
	;FRONT V REAR
	INC	B5			;COUNT
	MOVE	A7,A2
	MOVE	B2,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;MID V FRONT
	INC	B5			;COUNT
	MOVE	A8,A2
	MOVE	B0,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;MID V MID
	INC	B5			;COUNT
	MOVE	A8,A2
	MOVE	B1,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;MID V REAR
	INC	B5			;COUNT
	MOVE	A8,A2
	MOVE	B2,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;REAR V FRONT
	INC	B5			;COUNT
	MOVE	A9,A2
	MOVE	B0,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;REAR V MID
	INC	B5			;COUNT
	MOVE	A9,A2
	MOVE	B1,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	;REAR V REAR
	INC	B5			;COUNT
	MOVE	A9,A2
	MOVE	B2,A3
	MOVE	B4,B8
	EXGPC	B8 ;IN:A2,A3 OUT:A14 SC:A3
	CMP	A6,A14
	JRLS	HCCHIT

	CLR	A14		;SET EQ FLAG FOR NO HIT
	RETS

HCCHIT
	MOVE	B5,A3
	SLL	5,A3
	ADDI	HCCHITAREATBL,A3
	MOVL	*A3,A3
	MOVW	*A0(OID),A6
	MOVW	*A1(OID),A7
	CALLR	TWOCARSHIT ;IN:A0,A1,A3 CAR0,CAR1,[AREA1,AREA0]
	MOVK	1,A14		;SET NE FLAG FOR HIT
	RETS


**
** HCCHITAREATBL
**
** .LONG AREA1:AREA0
**
** JFL 25 MAR 93
**
HCCHITAREATBL
	.LONG	[AREAFWD,AREAFWD]
	.LONG	[AREAFWD,AREAMID]
	.LONG	[AREAFWD,AREABCK]
	.LONG	[AREAMID,AREAFWD]
	.LONG	[AREAMID,AREAMID]
	.LONG	[AREAMID,AREABCK]
	.LONG	[AREABCK,AREAFWD]
	.LONG	[AREABCK,AREAMID]
	.LONG	[AREABCK,AREABCK]

**
** HCCQRAD -- EXGPC B8
**
** IN
**   A2 Z:X
**   A3 Z:X (SCRATCH)
** OUT
**  A14 QDIST
**
** JFL 25 MAR 93
**
HCCQRAD
	SUBXY	A2,A3
	MOVE	A3,A14
	SRA	16,A14
	SEXT	A3,W
	ABS	A14
	ABS	A3
	CMP	A3,A14
	JRHS	HCCQRBIGOK
	SWAP	A3,A14
HCCQRBIGOK
	SRL	SR_QDIST,A3	
	ADD	A3,A14
	EXGPC	B8

**
** HITTESTCARS
**
** IN
**   A0 CAR
**   A1 CAR SUPP LIST
**   A2 ROUTINE TO CALL IF BOXES OVERLAP
**   A3 HIT HANDLER OFFSET
** OUT
**   EQ IF NO OTHER CARS HIT, NE IF ANY OTHER CARS HIT
**
** SCRATCHES ALL REASONABLE A'S EXCEPT A0
**
** JFL 21 JUL 92
** JFL 28 JUL 92
** JFL 12 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 13 OCT 92 
** JFL 14 OCT 92
**
HITTESTCARS
	CLR	A11			;NUMBER OF CARS HIT
	MOVL	@SUPPLSTS+SUPL_CAR,A1	;GET 1ST CAR
	JRZ	HTCX

	MOVE	A2,A6
	MOVE	A3,A7

	MOVL	*A0(ODAG),A4 	
	JRZ	HTCX			;PROTECT FROM FIRST FEW FRAMES
	MOVL	*A0(OSIZE),A5
	ADDXY	A4,A5

	.ALIGN	;ENSURE CACHE BOUNDRY
HTCLOOP
	; REG USE
	;  A0 OBJ0
	;  A1 OBJ1
	;  A2 SCRATCH, OBJ1 TL Y:X
	;  A3 SCRATCH, OBJ1 BR Y:X
	;  A4 OBJ0 TL Y:X
	;  A5 OBJ0 BR Y:X
	;  A6-A10 SCRATCH 
	; A10
	; A11 CAR HIT COUNT

	CMP	A0,A1		;DONT TEST SELF
	JREQ	HTCNEXT

	MOVL	*A1(ODAG),A2
	MOVL	*A1(OSIZE),A3
	ADDXY	A2,A3
	
	;CHECK FOR BOX OVERLAP
	CMPXY	A5,A2		;CHECK OBJ0 BR,OBJ1 TL
	JRXGT	HTCNEXT
	JRYGT	HTCNEXT
	CMPXY	A4,A3		;CHECK OBJ0 TL,OBJ1 BR
	JRXLT	HTCNEXT
	JRYLT	HTCNEXT

	CALLR	WHCHECKFRAME	;OK TO HIT TEST THESE TWO?
	JREQ	HTCNEXT		;NOT NOW

	;CALL BOXOVERLAP HANDLER
	MOVE	A7,A2
	CALLR	HITCARCAR ;A0,A1,A2 OBJ0,OBJ1,HDOFFSET OUT: NE FOR HIT
	JREQ	HTCNEXT
	INC	A11		;BUMP UP CAR HIT COUNT

HTCNEXT
	MOVL	*A1(OSLINK),A1
	JRNZ	HTCLOOP
HTCX		
	MOVE	A11,A11		;SET EQ/NE FLAG
	RETS

**
** HITTESTOBJS
**
** IN
**   A0 CAR
**
** SCRATCHES A0-A11,B0-B6
**
** JFL 21 JUL 92
** JFL 28 JUL 92
** JFL 24 SEP 92; NEW SCRATCH
** JFL 09 NOV 92
** JFL 15 NOV 92
** JFL 05 JAN 93; ONE CAR VS ALL OBJS
** JFL 21 FEB 93; CAR VS SUPLS
**
HITTESTOBJS
	;
	;TEST ONE CAR VS SUPL_BAR
	;
	MOVL	@SUPPLSTS+SUPL_BAR,A1
	JRZ	HTONONE1
	MOVI	HITCARBAR,B6
	CALLR	HTOLIST
HTONONE1
	;
	;TEST ONE CAR VS SUPL_MISL
	;
	MOVL	@SUPPLSTS+SUPL_MISL,A1
	JRZ	HTONONE2
	MOVI	HITCARMISL,B6
	CALLR	HTOLIST
HTONONE2
	;
	;TEST ONE CAR VS SUPL_MINE
	;
	MOVL	@SUPPLSTS+SUPL_MINE,A1
	JRZ	HTONONE3
	MOVI	HITCARBAR,B6
	CALLR	HTOLIST
HTONONE3
	;
	;TEST ONE CAR VS SUPL_FF
	;
	MOVL	@SUPPLSTS+SUPL_FF,A1
	JRZ	HTONONE4
	MOVI	HITCARMISL,B6
	CALLR	HTOLIST
HTONONE4
	;
	;TEST ONE CAR VS SUPL_FOBJ
	;
	MOVL	@SUPPLSTS+SUPL_FOBJ,A1
	JRZ	HTOX
	MOVI	HITCARFOBJ,B6

HTOLIST
	MOVE	A1,A6			;A8 COPY OF SUPL1
	.ALIGN ;ENSURE CACHE BOUNDRY
HTOLP0
	;FORM IMAGE BOX FOR CAR
	MOVL	*A0(ODAG),A4		;A4 OBJ0 Y:X TL
	MOVL	*A0(OSIZE),A5
	ADDXY	A4,A5			;A5 OBJ0 Y:X BR
HTOLP1

	;CHECK TL OF OBJ VS BR OF IMAGE BOX OF CAR
	MOVL	*A1(ODAG),A2		;A2 OBJ1 Y:X TL
	CMPXY	A5,A2			;CMP OBJ0 BR OBJ1 TL
	JRXGT	HTONEXT
	JRYGT	HTONEXT

	;CHECK BR OF OBJ VS TL OF IMAGE BOX OF CAR
	MOVL	*A1(OSIZE),A14
	ADDXY	A14,A2			;A2 OBJ1 Y:X BR
	CMPXY	A4,A2			;CMP OBJ0 TL OBJ1 BR
	JRXLT	HTONEXT
	JRYLT	HTONEXT

	;CALL BOX OVERLAP ROUTINE
	MOVL	*A1(OSLINK),A11
	CALL	B6 ;A0,A1,A2,A3,A7-A10,B0-B5 OBJ0,OBJ1,SC
	MOVE	A11,A1
	JRNZ	HTOLP1
	JRUC	HTOX

HTONEXT
	;NEXT OBJ
	MOVL	*A1(OSLINK),A1
	JRNZ	HTOLP1

HTOX
	RETS

**
** HITTESTMISC
**
** SCRATCHES A0-A11,B0-B6
**
** JFL 14 MAR 93; FROM HITTESTOBJS
** JFL 14 APR 93; RUNNER V THINGS
**
HITTESTMISC

	;
	;TEST MISL VS FF
	;

	MOVL	@SUPPLSTS+SUPL_FF,A1
	JRZ	HTMNONE1
	MOVL	@SUPPLSTS+SUPL_MISL,A0
	JRZ	HTMNONE1
	MOVI	HITMISLFF,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE1

	.IF 1 ;AGAINST SELF ---

	;
	;TEST FF VS FF
	;

	MOVL	@SUPPLSTS+SUPL_FF,A1
	JRZ	HTMNONE2
	MOVL	@SUPPLSTS+SUPL_FF,A0
	JRZ	HTMNONE2
	MOVI	HITFFFF,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE2
	.ENDIF ;AGAINST SELF ---

	;
	;TEST RUNNER VS CAR
	;
	MOVL	@SUPPLSTS+SUPL_RUN,A1
	JRZ	HTMNORUNNER
	MOVL	@SUPPLSTS+SUPL_CAR,A0
	JRZ	HTMNONE3
	MOVI	HITRUNCAR,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE3

	;
	;TEST RUNNER VS FF SHOT
	;
	MOVL	@SUPPLSTS+SUPL_RUN,A1
	MOVL	@SUPPLSTS+SUPL_FF,A0
	JRZ	HTMNONE4
	MOVI	HITRUNFF,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE4

	;
	;TEST RUNNER VS MISL
	;
	MOVL	@SUPPLSTS+SUPL_RUN,A1
	MOVL	@SUPPLSTS+SUPL_MISL,A0
	JRZ	HTMNONE5
	MOVI	HITRUNMISL,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE5

	;
	;TEST RUNNER VS MINE
	;
	MOVL	@SUPPLSTS+SUPL_RUN,A1
	MOVL	@SUPPLSTS+SUPL_MINE,A0
	JRZ	HTMNONE6
	MOVI	HITRUNLMINE,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE6
	;
	;TEST RUNNER VS FOBJS (ICONS)
	;
	MOVL	@SUPPLSTS+SUPL_RUN,A1
	MOVL	@SUPPLSTS+SUPL_FOBJ,A0
	JRZ	HTMNONE7
	MOVI	HITRUNFOBJS,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ
	CALLR	HTMLP0
HTMNONE7


HTMNORUNNER
	;
	;TEST MINE VS FF
	;

	MOVL	@SUPPLSTS+SUPL_FF,A1
	JRZ	HTMX
	MOVL	@SUPPLSTS+SUPL_MINE,A0
	JRZ	HTMX
	MOVI	HITMINEFF,B6
	MOVE	A1,A6			;SAVE SUPL1 FIRST OBJ


	;REG USE
	;  A0 OBJ0
	;  A1 SUPL1
	;  A2-A3 SCRATCH
	.ALIGN ;ENSURE CACHE BOUNDRY
HTMLP0

	;FORM IMAGE BOX FOR 
	MOVL	*A0(ODAG),A4		;A4 OBJ0 Y:X TL
	MOVL	*A0(OSIZE),A5
	ADDXY	A4,A5			;A5 OBJ0 Y:X BR
HTMLP1
	.IF 1 ;AGAINST SELF ---
	;CHECK FOR SAME OBJ
	CMP	A0,A1
	JREQ	HTMNEXT1
	.ENDIF ;AGAINST SELF ---

	;CHECK TL OF OBJ VS BR OF IMAGE BOX OF CAR
	MOVL	*A1(ODAG),A2		;A2 OBJ1 Y:X TL
	CMPXY	A5,A2			;CMP OBJ0 BR OBJ1 TL
	JRXGT	HTMNEXT1
	JRYGT	HTMNEXT1

	;CHECK BR OF OBJ VS TL OF IMAGE BOX OF CAR
	MOVL	*A1(OSIZE),A14
	ADDXY	A14,A2			;A2 OBJ1 Y:X BR
	CMPXY	A4,A2			;CMP OBJ0 TL OBJ1 BR
	JRXLT	HTMNEXT1
	JRYLT	HTMNEXT1

	;CALL BOX OVERLAP ROUTINE
	MOVL	*A1(OSLINK),A11		;GET LINK NOW IN CASE OF ZAP
	CALL	B6 ;A0,A1,A2,A3,A7-A10,B0-B5 OBJ0,OBJ1,SC
	MOVE	A11,A1			;FOLLOW LINK
	JRNZ	HTMLP1
	JRUC	HTMNEXT0

HTMNEXT1
	;NEXT OBJ IN SUPL1
	MOVL	*A1(OSLINK),A1
	JRNZ	HTMLP1

HTMNEXT0
	;NEXT OBJ IN SUPL0
	MOVE	A6,A1			;RESTORE FIRST OBJ IN SUPL1
	MOVL	*A0(OSLINK),A0
	JRNZ	HTMLP0

HTMX
	RETS

**
** AFTERHITTEST
**
** SCRATCHES: A0,A1,A2,A3,A4,A5
**
** JFL 17 AUG 92
** JFL 29 SEP 92; NEW SCRATCH
** JFL 29 OCT 92
**
AFTERHITTEST
	MOVI	SUPPLSTS+SUPL_CAR,A1
	MOVL	*A1,A0
	MOVE	A0,A2			;A2 IS FIRST OBJ
	JRZ	AHTX

AHTLOOP
	;CHECK IF THIS CAR NEEDS TO BE MOVE TO THE TOP
	MOVW	*A0(OFLAGS),A14
	BTST	B_HIT,A14
	JRZ	AHTNEXT

	;CLEAR FLAG
	ANDNI	M_HIT,A14
	MOVW	A14,*A0(OFLAGS)

	;CHECK IF ITS ALREADY THE HEAD
	CMP	A0,A2
	JREQ	AHTNEXT

	;MOVE TO HEAD
	MOVL	*A0(OSLINK),*A4(OSLINK)
	MOVL	A0,*A1
	MOVL	A2,*A0(OSLINK)
	MOVE	A0,A2
	MOVE	A4,A0
AHTNEXT
	;NEXT
	MOVE	A0,A4
	MOVL	*A0(OSLINK),A0
	JRNZ	AHTLOOP

AHTX
	RETS


**
** GETHITMASKZX
**
** IN
**   A0	CAR
**   A2 Z:X OF POINT TO TEST
**   A7 CD
**   A8 OBJ
** OUT
**   A3 HMVAL
**
** JFL 11 NOV 92
** JFL 12 NOV 92; SCALING
**
GETHITMASKZX
	MMTM	SP,A1,A4,A5,A6,A9

	;DO DAG BOX CHECK
	
	;GET CAR POS & DISTANCE FROM CAR TO POINT
	MOVW	*A0(OZPOS),A4
	MOVW	*A0(OXPOS),A6
	MOVE	A2,A14
	SRL	16,A14			;ISOLATE POINT Z
	SUB	A4,A14			;CAR Z - POINT Z
	MOVE	A2,A9
	ZEXT	A9,W			;ISOLATE POINT X
	SUB	A6,A9			;CAR X - POINT X

	;SCALE DISTANCES TO 1:1
	MOVW	*A0(OSCALEX),A3
	MOVE	A3,A5
	SETF	8,1,1
	MPYS	A14,A3
	MPYS	A9,A5
	SRA	MPYSCALE,A3
	SRA	MPYSCALE,A5
	SETF	32,1,1
	
	;FIGURE WHERE SCALED POINT IS
	SLL	16,A4
	MOVX	A6,A4			;CAR Z:X
	SLL	16,A3
	MOVX	A5,A3			;POINT DISTANCEZ:DISTANCEX
	ADDXY	A4,A3			;SCALED POINT Z:X
	MOVE	A3,A2
	
	;REG USE
	;  A2 POINT Z:X
	;  A4 CAR Z:X

	;GET HITMASK
	MOVL	*A7(CDHITMASK),A1

	;INDEX INTO HEAD BASED ON DIR
	MOVB	*A0(ODIR),A5
	SLL	24,A5
	SRL	24+4,A5
	SLL	HMSIZEOF,A5
	ADD	A1,A5			;HM HEAD

	;GET OFFSET OF DATA
	MOVW	*A5(HMOFFSET),A14
	SLL	HMOFFSETSHIFT,A14
	ADD	A14,A1		 	;HM DATA
	
	;GET TOP LEFT OF MASK BOX
	MOVL	*A5(HMANIOFF),A14
	ADDXY	A14,A4
	
	;GET DISTANCE INTO MASK BOX
	CLR	A3			;DEFAULT
	SUBXY	A4,A2
	JRXN	GHMX
	JRYN	GHMX

	;GET BOTTOM RIGHT OF MASK BOX
	MOVB	*A5(HMWIDTH),A6
	SLL	HMRSHIFT,A6
	MOVB	*A5(HMHEIGHT),A14
	SLL	HMRSHIFT+16,A14
	MOVY	A14,A6

	;CHECK IF POINT IS RIGHT/BELOW MASK BOX
	CMPXY	A6,A2
	JRXGE	GHMX
	JRYGE	GHMX

	;INDEX IN AND GET DATA
	MOVE	A6,A14			;GET HEIGHT:WIDTH
	ZEXT	A14,W			;ISOLATE WIDTH
	SRL	HMRSHIFT,A14		;TURN INTO HIT MASK COORD
	MOVE	A2,A3			;INSET Y:X
	SRL	16+HMRSHIFT,A3		;INSET Y ONLY
	SETF	8,1,1			;MAX WIDTH HEIGHT IS 127
	MPYU	A14,A3
	SETF	32,1,1
	ZEXT	A2,W			;INSET X
	SRL	HMRSHIFT,A2
	ADD	A3,A2
	SLL	3,A2			;SIZEOF BYTE
	ADD	A1,A2

	MOVB	*A2,A3
	NOP
	
GHMX
	MMFM	SP,A1,A4,A5,A6,A9
	RETS

***
*** RUNNER BOX OVERLAPS THINGS --------------------------------------------
***

VELRUNHITBYCAR		EQU	30H
VELRUNHITBYFF		EQU	30H
VELRUNHITBYMISL		EQU	50H
VELRUNHITBYLMINE	EQU	60H

**
** HITRUNCAR
** RUNNER IN A1 BOX OVERLAPS THING IN A0 BOX
**
** IN
**   A0 CAR
**   A1 RUNNER -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 15 APR 93
**
HITRUNCAR
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS
	MOVW	*A0(OSIZEX),A3
	MOVW	*A0(OSIZEY),A2
	ADD	A2,A3
	CMP	A3,A7
	JRHI	HRCX

	;SEND PLAYER UP
	MOVE	A1,A2
	MOVI	VELRUNHITBYCAR,A3
	CALLA	TOSSRUNNERUP ;IN:A2,A3 RUNOBJ,VEL
HRCX
	RETS

**
** HITRUNFOBJS
** RUNNER IN A1 BOX OVERLAPS THING IN A0 BOX
**
** IN
**   A0 FOBJ
**   A1 RUNNER -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 15 APR 93
**
HITRUNFOBJS
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS
	MOVW	*A0(OSIZEX),A3
	CMP	A3,A7
	JRHI	HRFOX
	
	CALLR	RUNNERHITOBJ ;IN:A0,A1,A2-A3,A7-A10,B0-B5 OBJ,RUNNER,SC
HRFOX
	RETS

**
** HITRUNMISL
** RUNNER IN A1 BOX OVERLAPS THING IN A0 BOX
**
** IN
**   A0 MISL
**   A1 RUNNER -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 14 APR 93
**
HITRUNMISL
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS
	MOVW	*A0(OSIZEX),A3
	CMP	A3,A7
	JRHI	HRMX
	
	;SET TO DETONATE
	MOVL	*A0(OPLINK),A2
	TLOCKON	Z
	CLR	A14
	MOVL	A14,*A2(PMDETONATE)

	;SEND PLAYER UP
	MOVE	A1,A2
	MOVI	VELRUNHITBYMISL,A3
	CALLA	TOSSRUNNERUP ;IN:A2,A3 RUNOBJ,VEL

HRMX
	RETS

**
** HITRUNFF
** RUNNER IN A1 BOX OVERLAPS THING IN A0 BOX
**
** IN
**   A0 FF
**   A1 RUNNER -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 14 APR 93
**
HITRUNFF
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS
	MOVW	*A0(OSIZEX),A3
	CMP	A3,A7
	JRHI	HRFFX
	
	;SET TO DETONATE
	MOVL	*A0(OPLINK),A2
	TLOCKON	Z
	CLR	A14
	MOVL	A14,*A2(PMDETONATE)

	;SEND PLAYER UP
	MOVE	A1,A2
	MOVI	VELRUNHITBYFF,A3
	CALLA	TOSSRUNNERUP ;IN:A2,A3 RUNOBJ,VEL

HRFFX
	RETS

**
** HITRUNLMINE
** RUNNER IN A1 BOX OVERLAPS THING IN A0 BOX
**
** IN
**   A0 LMINE
**   A1 RUNNER -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 14 APR 93
**
HITRUNLMINE
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS
	MOVW	*A0(OSIZEX),A3
	CMP	A3,A7
	JRHI	HRLMX
	
	;SET TO DETONATE
	CALLA	LMINEDETONATE ;IN:A0,A2-A3 MINEOBJ,SC

	;SEND PLAYER UP
	MOVE	A1,A2
	MOVI	VELRUNHITBYLMINE,A3
	CALLA	TOSSRUNNERUP ;IN:A2,A3 RUNOBJ,VEL

HRLMX
	RETS

***
*** FF SHOT BOX OVERLAPS THINGS --------------------------------------------
***

**
** HITFFFF
** MISL IN A0 BOX OVERLAPS FF IN A1 BOX
**
** IN
**   A0 MISL
**   A1 FF -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 15 MAR 93; FROM HITCARMISL
**
HITFFFF

	MOVL	*A0(OPLINK),A2
	TLOCKON	Z
	MOVL	*A1(OPLINK),A3
	TLOCKON	Z
	MOVL	*A2(PMMOM),A7
	MOVL	*A3(PMMOM),A8
	CMP	A7,A8
	JREQ	HFFFFX
	
	;SET BOTH TO DETONATE
	CLR	A14
	MOVL	A14,*A2(PMDETONATE)
	MOVL	A14,*A3(PMDETONATE)
	
HFFFFX
	RETS

**
** HITMISLFF
** MISL IN A0 BOX OVERLAPS FF IN A1 BOX
**
** IN
**   A0 MISL
**   A1 FF -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 14 MAR 93; FROM HITCARMISL
**
HITMISLFF
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS FROM FF TO MISL
	MOVW	*A1(OSIZEX),A2
	MOVW	*A1(OSIZEY),A3
	ADD	A2,A3

	CMP	A3,A7
	JRHI	HMFFX

	MOVL	*A0(OPLINK),A2		;MISL
	TLOCKON	Z
	MOVL	*A1(OPLINK),A3		;FF
	TLOCKON	Z
	
	;DONT BLOW UP OWN MISSILES WHILE THEY WONT HURT US
	MOVL	*A2(PMSAFE),A7
	JRZ	HMFFNOTSAFE		;MOST OF THE TIME THIS IS TRUE
	MOVL	*A3(PMMOM),A14
	CMP	A7,A14
	JREQ	HMFFX
HMFFNOTSAFE

	;SET BOTH TO DETONATE
	CLR	A14
	MOVL	A14,*A2(PMDETONATE)
	MOVL	A14,*A3(PMDETONATE)
	
HMFFX
	RETS

**
** HITMINEFF
** MISL IN A0 BOX OVERLAPS FF IN A1 BOX
**
** IN
**   A0 MINE
**   A1 FF -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 14 MAR 93; FROM HITCARMISL
**
HITMINEFF
	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS FROM FF TO MISL
	MOVW	*A1(OSIZEX),A2
	MOVW	*A1(OSIZEY),A3
	ADD	A2,A3

	CMP	A3,A7
	JRHI	HNFFX
	
	;SET BOTH MINE & FF TO DETONATE
	CLR	A14
	MOVL	*A1(OPLINK),A2
	TLOCKON	Z
	MOVL	A14,*A2(PMDETONATE)
	CALLA	LMINEDETONATE ;IN:A0,A2-A3 MINEOBJ,SC
	
HNFFX
	RETS


***
*** CAR BOX OVERLAPS THINGS -------------------------------------------------
***

**
** HITCARMISL
** CAR IN A0 BOX OVERLAPS OBJ IN A1 BOX
**
** IN
**   A0 CAR
**   A1 OBJ -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 21 FEB 93; FROM HITCARFOBJ
** JFL 05 MAR 93
** JFL 12 MAR 93
** JFL 14 MAR 93; ANOTHER QUICK DIST
**
HITCARMISL

	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS FOR THIS CAR AT THIS SCALE
	MOVW	*A0(OSIZEX),A2
	MOVW	*A0(OSIZEY),A3
	ADD	A2,A3
	SRL	2,A3
	TLOCKON	Z

	CMP	A3,A7
	JRHI	HCMX	

	;ACTION
	CLR	A3
	CALLR	CARHITOBJ ;IN:A0,A1,A3,A2,A7-A10,B0-B5 CAR,OBJ,CARAREA,SC
HCMX
	RETS

**
** HITCARBAR
** CAR IN A0 BOX OVERLAPS OBJ IN A1 BOX
**
** IN
**   A0 CAR
**   A1 OBJ -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 21 FEB 93; FROM HITCARFOBJ
**
HITCARBAR

	QDISTZOFF A0,A1,A2,A3,A7

	;COME UP WITH A QUICK RADIUS FOR THIS CAR AT THIS SCALE
	MOVW	*A0(OSIZEX),A2
	MOVW	*A0(OSIZEY),A3
	ADD	A2,A3
	SRL	2,A3
	TLOCKON	Z

	CMP	A3,A7
	JRHI	HCBX	
	
	.IF 0 ;--------------------------
	;LOAD UP FOR CALL
	MOVL	*A0(OCAR),A7

	;
	;TEST POINT BOTTOM CENTER
	;
	MOVL	*A1(ODAG),A2		;GET TOP LEFT OF IMAGE
	MOVL	*A1(OSIZE),A9		;YSIZ:XSIZ
	MOVE	A9,A3
	SRL	16,A3			;0:YSIZ
	SLL	16,A3			;YSIZ:0
	ADDXY	A3,A2			;FIGURE BOTTOM LEFT OF IMAGE
	MOVE	A2,A10			;SAVE

	;FIND CENTER
	MOVE	A9,A3
	ZEXT	A3,W			;0:XSIZ
	SRL	1,A3
	ADDXY	A3,A2	
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRNZ	HCBYES

	;
	;TEST LEFT POINT UP 1/4 FROM BASE
	;

	MOVE	A9,A3
	SRL	16+2,A3			;0:YSIZ/4
	SLL	16,A3
	MOVE	A10,A2
	SUBXY	A3,A2			;FIGURE 1/4 UP LEFT
	MOVE	A2,A10			;SAVE
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRNZ	HCBYES
	
	;
	;TEST RIGHT POINT UP 1/4 FROM BASE
	;

	MOVE	A10,A2
	ZEXT	A9,W			;0:XSIZ
	ADDXY	A9,A2
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRZ	HCBX
	.ENDIF ;--------------------------

HCBYES
	;ACTION
	SLL	25,A3			;ISOLATE AREA
	SRL	25,A3
	CLR	A3
	CALLR	CARHITOBJ ;IN:A0,A1,A3,A2,A7-A10,B0-B5 CAR,OBJ,CARAREA,SC
HCBX
	RETS

**
** HITCARFOBJ
** CAR IN A0 BOX OVERLAPS OBJ IN A1 BOX
**
** IN
**   A0 CAR
**   A1 OBJ -- OK TO SCRATCH
** SCRATCH: B0-B5,A2-A3,A7-A10
**
** JFL 22 JUL 92
** JFL 23 JUL 92
** JFL 28 JUL 92
** JFL 09 AUG 92; OVERLAPPING BOX CHECK
** JFL 11 AUG 92; MAKE SURE OBJ ISNT A CAR THAT HAS ALREADY BEEN HIT
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 29 SEP 92; NEW SCRATCH
** JFL 15 NOV 92; REDONE FOR HIT MASKS
** JFL 11 FEB 93
**
HITCARFOBJ
	CLR	A3			;DEFAULT AREA HIT
      	;CHECK IF OID IS SUCH THAT BOX OVERLAP IS ENOUGH
	MOVB	*A1(OID+B_OIDFHITBOX-7),A14
	JRN	HCFOYES			;NOTE: AREA IS ALWAYS ZERO!

	;GET OBJ Z:X
       	MOVL	*A1(OZVAL),A2
	MOVW	*A1(OXVAL+10H),A14
	MOVX	A14,A2

	;LOAD UP FOR CALL
	MOVL	*A0(OCAR),A7
	CALLR	GETHITMASKZX ;IN:A0,A2,A7 CAR,Z:X,CD OUT:A3 HMVAL
	MOVE	A3,A3			;CHECK IF WE HIT
	JRZ	HCMOX

	;ACTION
	SLL	25,A3			;ISOLATE AREA
	SRL	25,A3
HCFOYES
	CALLR	CARHITOBJ ;IN:A0,A1,A3,A2,A7-A10,B0-B5 CAR,OBJ,CARAREA,SC
HCMOX
	RETS


***
*** REACTIONS ------------------------------------------------------------
***

**
** FINDWINNER
** FIND WHO WON THE COLLISION
**
** IN&OUT
**   A0 CAR0 (ON EXIT WILL BE WINNER)
**   A1 CAR1 (ON EXIT WILL BE LOSER)
**   A3 [AREA1,AREA0]
**
** JFL 20 AUG 92
** JFL 23 AUG 92
** JFL 17 SEP 92; CAR FALLING ON OTHER CAR
** JFL 18 SEP 92
** JFL 13 OCT 92; VEC
** JFL 11 FEB 93; BACK TO RULE BASED
**
FINDWINNER
	;REG USE
	;  A0 CAR0
	;  A1 CAR1
	;  A2 SCRATCH0
	;  A3 [AREA1,AREA0]
	;  A4 SCRATCH1
	;  A5 POINTS (POSITIVE VALUE SIGNALS CAR0 IS WINNING,NEG FOR CAR1)
	;  A6 CD0
	;  A7 CD1
	;  A8 SCRATCH

	;AREA
	MOVE	A3,A10

	;
	;CHECK IF ONE CAR LANDED ON ANOTHER CAR
	;
	;MOVW	*A0(OYPOS),A2
	;MOVW	*A1(OYPOS),A3
	;CMP	A2,A3
	;JREQ	FWNOAIR
	;JRLT	FWCAR1X		;CAR ABOVE OTHER CAR WINS
	;JRUC	FWCAR0X
FWNOAIR
	;LOAD UP
	MOVL	*A0(OCAR),A6
	MOVL	*A1(OCAR),A7

	;
	;IF ONE CAR IS MOVING TWICE AS FAST IT WINS
	;

	MOVW	*A6(CDTOTMAG),A8
	MOVW	*A7(CDTOTMAG),A9
	CMP	A8,A9
	JRGT	FWFAST1
	JREQ	FWFASTNO
	
	;CAR 0 -- CHECK IF ITS TWICE THE SPEED
	MOVE	A8,A14
	SRL	1,A14
	CMP	A9,A14
	JRLE	FWFASTNO
	JRUC	FWCAR0X			;TWICE AS FAST
FWFAST1
	;CAR 1 -- CHECK IF ITS TWICE THE SPEED
	MOVE	A9,A14
	SRL	1,A14
	CMP	A8,A14
	JRGT	FWCAR1X			;TWICE AS FAST
	
FWFASTNO

	;
	;CHECK IF EITHER WAS IN TURBO BONUS
	;
	MOVB	*A6(CDFLAGS+B_CDFBONUSTURBO-7),A2
	MOVB	*A7(CDFLAGS+B_CDFBONUSTURBO-7),A3
	CMPXY	A2,A3					;CHECK SIGNS
	JRYEQ	FWTBSAME
	JRYLT	FWCAR1X					;CAR IN BONUS
	JRUC	FWCAR0X

FWTBSAME

	.IF 0 ;---------------- NO LEADING BULLSHIT
	;
	;CHECK IF ONE CAR HIT OTHER CAR RUNNING AWAY
	;

	;CAR 0 -- LEADING
	MOVE	A9,A2
	ZEXT	A2,W			;ISOLATE AREA0
	SLL	3,A2			;SIZEOF LEADINGTBL
	ADDI	LEADINGTBL,A2
	.IF DEBUG
	CMPI	LEADINGTBLX,A2
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVB	*A2,A2		   	;FIND IF AREA IS FRONT OR BACK
	MOVB	*A6(CDFLAGS+B_CDFREV-7),A14
	JRNN	FWFWD0			;TRAVEL DIR IS TO FRONT
	NEG	A2			;TRAVEL DIR IS TO BACK
FWFWD0
	;CAR 1 -- LEADING
	MOVE	A9,A3
	SRL	16,A3			;ISOLATE AREA1
	SLL	3,A3			;SIZEOF LEADINGTBL
	ADDI	LEADINGTBL,A3
	.IF DEBUG
	CMPI	LEADINGTBLX,A3
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVB	*A3,A3		   	;FIND IF AREA IS FRONT OR BACK
	MOVB	*A7(CDFLAGS+B_CDFREV-7),A14
	JRNN	FWFWD1			;TRAVEL DIR IS TO FRONT
	NEG	A3			;TRAVEL DIR IS TO BACK
FWFWD1
	CMP	A2,A3	
	JREQ	FWNOLEAD
	JRGT	FWCAR1X
	JRUC	FWCAR0X
FWNOLEAD
	.ENDIF ;---------------- NO LEADING BULLSHIT

	;
	;WHO EVER WAS FASTER WINS
	;
	CMP	A8,A9
	JRLT	FWCAR0X
FWCAR1X
	SWAP	A0,A1			;SWAP OBJ0 OBJ1
	RL	16,A10			;SWAP AREA1:AREA0
FWCAR0X
	MOVE	A10,A3			;AREA1:AREA0
	RETS


**
** AREAAWAYTBL
** MAP AN AREA 0..7 TO A DIRECTION AWAY FROM THE OBJECT AT THAT AREA
** JFL 20 AUG 92
**
AREAAWAYTBL
	.BYTE	020H,060H,0A0H,0E0H,000H,040H,080H,0C0H
AREAAWAY180TBL
	.BYTE	0A0H,0E0H,020H,060H,080H,0C0H,000H,040H
AREASIDETBL
	.BYTE	040H,040H,0C0H,0C0H,000H,040H,080H,0C0H
AREASIDE180TBL
	.BYTE	0C0H,0C0H,040H,040H,080H,0C0H,000H,040H


***
*** --------------------------------------------------------------------
***

**
** RX TBL STRUCT
**
** JFL 03 NOV 92
**
RXTANIM		EQU	000H	;UHL
RXTFUN		EQU	020H	;UHL
RXTDIS		EQU	040H	;UHL
RXTDATA		EQU	060H	;UHL
RXENTRYSIZEOF	EQU	7	; SIZEOF ONE ENTRY -- SHIFT

**
** TWOCARSHIT
**
** IN
**   A0 CAR0
**   A1 CAR1
**   A3 [AREA1,AREA0]
** OUT
**   NE ON FIRST HIT, EQ ON REHITS
**
** JFL 18 AUG 92
** JFL 18 SEP 92
**
TWOCARSHIT 	 
	;MULTIPLE OFFENDERS
	CALLR	WHCHECKMANY;IN:A0,A1,A3 CAR0,CAR1,AREA1:AREA0
			   ;OUT:A0,A1,A2,A3 SAME,SAME,NUMHITS,SAME

	JRNE	TWOCARSREHIT
  	JRUC	TWOCARSFIRSTHIT

**
** TWOCARSREHIT
**
**  A0 CAR0
**  A1 CAR1
**  A2 NUM OF TIMES TWO CARS RE-HIT
**  A3 [AREA1,AREA0]
**
** JFL 20 AUG 92
** JFL 29 AUG 92; NEW SCRATCH
** JFL 11 OCT 92
** JFL 20 OCT 92
** JFL 23 DEC 92
**
TWOCARSREHIT
	CMPI	REHITSTOMOVE,A2
	JRLE	TCRX

	MMTM	SP,A0,A1,A7,A8,A10,A11

	MOVE	A2,A8		;SAVE REHIT COUNT

	;RENEW THE HIT COUNTER
	CALLR	WHRESET ;IN:A0,A1 CARx,CARy OUT:A0,A1,A3 CAR0,CAR1,AREA1:AREA0	

	CALLA	CLEARVEC ;IN A2-A3,A7 SC,CD

	;ADD VEC AWAY
	MOVL	*A0(OCAR),A7

	;FIND DIR FROM OBJ1 TO OBJ0
	MOVE	A0,A2			;OBJ0
	MOVE	A1,A3			;OBJ1
	CALLR	OBJOBJDIR32 ;IN:A2,A3 OBJ0,OBJ1 OUT:A10,A11 DIR,SC

	;SET MOVE AWAY VEL
	MOVI	REHITTHROWVEL<<16,A11	
	MOVX	A10,A11			;CDSLIPMAG:CDSLIPDIR
	MOVL	A11,*A7(CDSLIPDIR)	;AND CDSLIPMAG
	MOVI	[30H,(PERCENT100/1-PERCENT100/9)<<SLIPFFRAC],A14
	MOVL	A14,*A7(CDSLIPFACTOR)	;AND CDSLIPDECAY

     	;SET UP FOR LOSER
	MOVE	A1,A0
	MOVL	*A0(OCAR),A7

	;SHOULD WE THROW UP LOSER
	CMPI	REHITSTOTHROW,A8	
	JRLT	TCRHNOTHROW

	;THROW UP LOSER
	MOVK	CCIDREHIT,A2
	CALLA	CARTHROWUP ;IN: A0,A2,A7 OBJ,CCID,CD

TCRHNOTHROW
	CALLA	CLEARVEC ;IN A2-A3,A7 SC,CD

	;MOVE LOSER AWAY
	ADDI	DIR180,A10
	MOVI	REHITTHROWVEL<<16,A11	
	MOVX	A10,A11			;CDSLIPMAG:CDSLIPDIR
	MOVL	A11,*A7(CDSLIPDIR)	;AND CDSLIPMAG
	MOVI	[50H,(PERCENT100/1-PERCENT100/5)<<SLIPFFRAC],A14
	MOVL	A14,*A7(CDSLIPFACTOR)	;AND CDSLIPDECAY

	CALLR	RANDOMSPIN ;IN:A7 CD
	


TCRHX
	MMFM	SP,A0,A1,A7,A8,A10,A11
TCRX
	CLR	A14			;SET EQ FLAG
	RETS
**
** CARHITSMALLSNDTBL
** CARHITBIGSNDTBL
**
** FIRST TWO ENTRIES FOR HITS W/O PIECE FLYING OFF
** NEXT TWO ENTRIES FOR HITS W/ PIECE FLYING OFF
**
** JFL 02 FEB 93
**
CARHITSNDTBLSIZEOF	EQU	5	; SIZEOF 1/2 OF TBL
CARHITSMALLSNDTBL
	.WORD	SNDCRASHSMALL1A
	.WORD	SNDCRASHSMALL1B
	.WORD	SNDCRASHSMALLOFF1A
	.WORD	SNDCRASHSMALLOFF1B
CARHITBIGSNDTBL
	.WORD	SNDCRASHBIG1A
	.WORD	SNDCRASHBIG1B
	.WORD	SNDCRASHBIGOFF1A
	.WORD	SNDCRASHBIGOFF1B

**
** TWOCARSFIRSTHIT
**
** THIS ROUTINE CHOOSES A REACTION TBL AND THEN PROCESSES IT
** THE REACTION TBL CHOSEN IS BASED ON AREAS HIT, ANGLES HIT AT, AND SPEED
** A REACTION IS THEN RANDOMLY CHOSEN FROM THE TBL
** REACTIONS CONTAIN A FUNCTION TO CALL TO MOVE CARS APART AND ANIMS FOR CAR
**
** IN
**   A0 CAR0
**   A1 CAR1
**   A3 [AREA1,AREA0]
** SCRATCH: A2-A3,B0-B7
**
** JFL 20 AUG 92
** JFL 20 SEP 92
** JFL 29 SEP 92; NEW SCRATCH
** JFL 13 OCT 92
** JFL 19 OCT 92
** JFL 02 NOV 92; REDONE
** JFL 07 JAN 93
** JFL 15 FEB 93
** JFL 26 MAR 93; NEW AREA SYSTEM
**
TWOCARSFIRSTHIT
	MMTM	SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11

	CALLR	FINDWINNER ;IN: A0,A1,A3 CAR0,CAR1,[AREA1,AREA0]
			   ;OUT: A0,A1,A3 CAR0,CAR1,[AREA1,AREA0] CAR0 WON
	MOVE	A3,A9		;SAVE [AREA1,AREA0]

	CALLR	WHADD			;ADD CARS TO HIT LIST

	;LOAD UP
	MOVL	*A0(OCAR),A7
	MOVL	*A1(OCAR),A8
	
	;MARK LOSER TO BE MOVED TO THE TOP OF THE SUPL LIST
	;AND STOP EXTERNAL FORCES
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFSTOPEXT),0
	MOVE	A14,*A8(CDFLAGS+B_CDFSTOPEXT),0
	MOVE	A14,*A1(OFLAGS+B_HIT),0
	SETF	16,1,0

	;CAR0 -- IS IT DROPPING
	MOVL	*A0(OYVEL),A14
	JRP	TCDROP

	;CAR0 -- CHECK IF WINNER HIT WITH LEADING AREA
	MOVE	A9,A4
	ZEXT	A4,W  	
	SLL	3,A4				;SIZEOF LEADINGTBL
	ADDI	LEADINGTBL,A4
	.IF DEBUG
	CMPI	LEADINGTBLX,A4
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVB	*A7(CDFLAGS+B_CDFREV-7),A2	;FWD/REV
	MOVB	*A4,A4
	JRZ	TC0NOTLEADING
	CMPXY	A2,A4				;CMP SIGN
	JRYNE	TC0NOTLEADING

**
** WINNER RAN INTO LOSER INTENTIONALLY
**
	

	MOVI	RX0LEADINGTBL,A4
	MOVI	RX1SPINTBL,A5
	JRUC	TCPROCESS

**
** WINNER ACCIDENTALLY RAN INTO LOSER
**
	
TC0NOTLEADING
	MOVI	RX0NOTLEADINGTBL,A4
	MOVI	RX1SPINTBL,A5
	JRUC	TCPROCESS

**
** WINNER LANDED ON LOSER
**
TCDROP
	;CAR0 -- IT LANDED ON CAR1
	MOVI	RX0LANDTBL,A4
	MOVI	RX1LANDTBL,A5
	JRUC	TCPROCESS

**
** PROCESS REACTION TBL
**
** IN:
**   A0 CAR0
**   A1 CAR1
**   A4 CAR0 REACTION TBL
**   A5 CAR1 REACTION TBL
**   A7 CD0
**   A8 CD1
**   A9 AREA1:AREA0
**
TCPROCESS
	;DO IT
	CALLA	RANDOMA2 ;OUT:A2 RANDOM
	MOVE	A2,B4				;SAVE

	;CAR0 -- SETUP
	MOVE	A5,B3				;SAVE
	MOVW	*A4+,A14			;GET MASK
	AND	A14,A2
	SLL	RXENTRYSIZEOF,A2		;SIZEOF RX TBL ENTRY
	ADD	A4,A2

	;CAR0 -- ADD NEW ANI
	MOVL	*A2(RXTANIM),A5
	JRZ	TC0NOANI
	MOVK	APRICOLLISION,A3
	MOVW	*A7(CDANIPRI),A14
	CMP	A3,A14
	JRGT	TC0NOANI
	MOVW	A3,*A7(CDANIPRI)
	MOVL	A5,*A7(CDSAS)

	;CAR0 -- CHECK IF WE ARE DISABLED TILL THE ANIM FINISHES
	MOVW	*A2(RXTDIS+10H),A14		;IF NO TIMEOUT ON DIS
	JRNZ	TC0NOANI
	MOVW	*A7(CDFLAGS),A14
	ORI	M_CDFANIDIS,A14
	MOVW	A14,*A7(CDFLAGS)
TC0NOANI

	;CAR0 -- CALL
	MOVL	*A2(RXTFUN),A14
	CALL	A14 ;IN: A0,A1,A2,A7,A8,A9,B2 CAR0,CAR1,RXTBL,CD0,CD1,SAVE

	;CAR1 -- SETUP
	MOVE	B3,A5				;RESTORE
	MOVE	B4,A2				;RESTORE
	SWAP	A0,A1
	SWAP	A7,A8

	MOVW	*A5+,A14			;GET MASK
	RL	3,A2
	AND	A14,A2
	SLL	RXENTRYSIZEOF,A2		;SIZEOF RX TBL ENTRY
	ADD	A5,A2

	;CAR1 -- ADD NEW ANI
	MOVL	*A2(RXTANIM),A5
	JRZ	TC1NOANI
	MOVK	APRICOLLISION,A3
	MOVW	*A7(CDANIPRI),A14
	CMP	A3,A14
	JRGT	TC1NOANI
	MOVW	A3,*A7(CDANIPRI)
	MOVL	A5,*A7(CDSAS)

	;CAR1 -- CHECK IF WE ARE DISABLED TILL THE ANIM FINISHES
	MOVW	*A2(RXTDIS+10H),A14		;IF NO TIMEOUT ON DIS
	JRNZ	TC1NOANI
	MOVW	*A7(CDFLAGS),A14
	ORI	M_CDFANIDIS,A14
	MOVW	A14,*A7(CDFLAGS)

TC1NOANI

	;CAR1 -- CALL
	MOVL	*A2(RXTFUN),A14
	CALL	A14 ;IN: A0,A1,A2,A7,A8,A9,B2 CAR0,CAR1,RXTBL,CD0,CD1,SAVE

	;
	;DO DAMAGE -- THIS MAY DESTROY THE CAR OBJ
	;
	MOVL	*A8(CDFEEL),A2		;WINNER GIVES DAMAGE
	MOVL	*A2(FDAMGIVE),A2	;A2 DAMAGE GIVE 01234567

	;ISOLATE DAMAGE GIVE
	MOVE	A9,A3			;A9 [LOSERAREAHIT,WINAREAHIT]
	ZEXT	A3,W			;A3 WINAREAHIT	
	MOVE	A3,A4			;AREA
	SLL	2,A4			;4 BITS PER AREA
	SLL	A4,A2			;CLEAR BITS ABOVE AREA BITS
	SRL	28,A2			;BACK DOWN

	;PUT ON ICE TILL AFTER DAMAGE IS GIVEN (FOR SOUND)
	MOVE	A2,B4			;AMOUNTOFDAMAGE
	MOVE	A7,B5			;LOSER CD
	MOVE	A8,B6			;WINNER CD

	;FINISH SETUP & DO DAMAGE
	MOVE	A9,A3			;A9 [LOSERAREAHIT,WINAREAHIT]
	SRL	16,A3			;A3 LOSERAREAHIT	
	MOVE	A2,A14 			;HOW MUCH
	MOVE	A0,A2			;LOSER GETS DAMAGE
	MOVE	A1,B0			;WINNER GIVES DAMAGE
	CALLR	TAKEDAMAGE ;IN: A2,A3,A14,B0,B1 CARGET,AREA HIT,DAM,CARGIVE,SC
			   ;OUT: C IF CAR DIED, B1=1 FOR PART OFF,ELSE 0
			   ;SC:	A0-A11
	JRNC	TCNOKILL
	
	;KILL SOUND -- ASSUME CD STILL VALID
	MOVE	B5,A14			;LOSER CD
	MOVW	*A14(CDINPNUM),A14
	ADDI	SNDKILLCAR1,A14
	CALLA	ARENASND ;IN:A14 SNDID
	JRUC	TCX

TCNOKILL
	;DAMAGE SOUND, BASED ON HOW MUCH DAMAGE
	SRL	2,B4			;AMOUNTOFDAMAGE
	JRNZ	TCNKBIG

	;LITTLE DAMAGE
	MOVE	B1,A3			;PART CAME OFF=1 OR NOT=0
	SLL	CARHITSNDTBLSIZEOF,A3
	ADDI	CARHITSMALLSNDTBL,A3
	JRUC	TCNKDAMAGE
TCNKBIG
	;BIG DAMAGE
	MOVE	B1,A3			;PART CAME OFF=1 OR NOT=0
	SLL	CARHITSNDTBLSIZEOF,A3
	ADDI	CARHITBIGSNDTBL,A3
TCNKDAMAGE
	CALLA	RANDOMA2 ;A2 RND
	MOVE	A2,A4		;SAVE RANDOM
	SLL	31,A2 		;GET 0 OR 1
	SRL	31-4,A2		;SIZEOF TBL
	ADD	A3,A2
	MOVW	*A2,A2		;GET BASE SOUND CALL
	MOVE	B5,A14		;LOSER CD
	MOVW	*A14(CDINPNUM),A14
	ADD	A2,A14
	CALLA	ARENASND ;IN:A14 SNDID
	
	;TALK SHIT  
	MOVE	A4,A14		;RANDOM
	SLL	32-2,A14	;1 OF 4 CHANCE
	JRNZ	TCX		;DONT ALWAYS TALK

	;DECIDE WHO DOES THE TALKING
	RL	1,A4		;RANDOM
	JRNC	TCNKNC

	;LOSER TALKS SHIT
	MOVE	B5,A14			;LOSER CD
	MOVL	*A14(CDSOUNDLIST),A2
	MOVW	*A2+,A3			;GET HIT COUNT MASK
	AND	A3,A4
	SLL	4,A4			;SIZEOF SOUNDLIST ENTRY
	JRUC	TCNKTALK
TCNKNC
	;WINNER TALKS SHIT
	MOVE	B6,A14			;WINNER CD
	MOVL	*A14(CDSOUNDLIST),A2
	MOVW	*A2+,A3			;GET HIT COUNT MASK
	INC	A3			;TURN INTO COUNT
	SLL	4,A3			;SIZEOF SOUNDLIST ENTRY
	ADD	A3,A2
	MOVW	*A2+,A3			;GIVE HIT COUNT MASK
	AND	A3,A4
	SLL	4,A4			;SIZEOF SOUNDLIST ENTRY
TCNKTALK
	ADD	A4,A2
	MOVW	*A2,A14
	CALLA	MAKESND ;IN:A14 SNDID
	
TCX
	MOVK	1,A14			;NE TO VELSUB
	MMFM	SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11
	RETS

***
*** MISC CAR HITS ---------------------------------------------------------
***

**
** OBJ2OBJDIR
**
** IN
**   A0-A4 SCRATCH
**   A2 SRCOBJ
**   A3 DSTOBJ
** OUT
**   A3 DIR
**
** JFL 21 JAN 93; FROM SHAWN
**
OBJ2OBJDIR
		;IN:A2,A3 SRCOBJ,DSTOBJ OUT:A3 DIR SC:A0-A4

	MOVW	*A2(OXPOS),A0		;SRC X
	MOVW	*A2(OZPOS),A2		;SRC Y
	MOVW	*A3(OXPOS),A1		;DST X
	MOVW	*A3(OZPOS),A3		;DST Y
**
** POINT2POINTDIR16 -- USE FOR 16 BIT VALUES
** POINT2POINTDIR32 -- USE FOR 32 BIT VALUES
**
** IN
**   A0-A4 SCRATCH
**   A0 SRC X 16BITS!
**   A2 SRC Y 16BITS!
**   A1 DST X 16BITS!
**   A3 DST Y 16BITS!
** OUT
**   A3 DIR
**
** JFL 21 JAN 93; FROM SHAWN
** 
POINT2POINTDIR16
	SLL	16,A0
	SLL	16,A1
	SLL	16,A2
	SLL	16,A3
POINT2POINTDIR32
	clr	A4			;Octant 0-1
	sub	A1,A0			;A0=SrcX-DestX
	jrgt	P2P100
	abs	A0
	sub	A3,A2			;A2=SrcY-DestY
	jrnn	P2Poct1
	movk	8,A4			;Oct 2-3
	abs	A2
	jruc	P2P160

P2P100	movk	16,A4			;Oct 4-5
	sub	A3,A2			;A2=SrcY-DestX
	abs	A2
	jrnn	P2P200
	movk	16+8,A4			;Oct 6-7
P2P160	SWAP	A0,A2

P2P200	sll	2,A4			;Oct*4
P2Poct1	clr	A14
	cmp	A2,A0			;>Cmp slope
	jrhs	P2P300

	srl	2+2,A2			;Bigger/16
	jrnz	P2P250
	jruc	P2Px
P2Plp1	addk	1,A4			;Next 1/16 oct
	add	A2,A14			;+1/16
P2P250	cmp	A0,A14
	jrlo	P2Plp1
	jruc	P2Px

P2P300	addk	31,A4			;End of next octant
	srl	2+2,A0			;Bigger/16
	jrnz	P2P350
	jruc	P2Px
P2Plp2	subk	1,A4			;Next 1/16 oct
	add	A0,A14			;+1/16
P2P350	cmp	A2,A14
	jrlo	P2Plp2


P2Px
	;ADJUST SHAWN ANGLES TO JOE ANGLES
	MOVI	7FH,A3
	AND	A3,A4
	SUB	A4,A3
	ADDK	20H,A3
	SLL	1,A3

	RETS

**
** OBJOBJDIR32
** FIND DIR FROM OBJ A3 TO OBJ A2
**
** IN
**   A2 OBJ0
**   A3 OBJ1
** OUT
**  A10	DIR
**  A11 SC
**
** JFL 23 DEC 92
**
OBJOBJDIR32
	MOVW	*A2(OXPOS),A10
	MOVW	*A3(OXPOS),A14
	SUB	A14,A10
	MOVW	*A2(OZPOS),A11
	MOVW	*A3(OZPOS),A14
	SUB	A14,A11
	CALLA	COMPTODIRVEC ;IN: A10,A11 X,Z OUT: A10,A11 DIR,SC
	RETS


**
** CARHITIMMOBILE
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2,A3,A7,A9,A10 SCRATCH
**
** JFL 02 DEC 92
** JFL 23 DEC 92
** JFL 05 JAN 93; CDFUNDO
** JFL 08 JAN 93; SLIDE
**
CARHITIMMOBILE
	MMTM	SP,A0,A1,A4,A5,A8,A11

	;FIND DIR FROM OBJ TO CAR
	MOVE	A1,A2		;OBJ
	MOVE	A0,A3		;CAR
	MOVE	A0,A10		;SAVE
	MOVE	A4,A11		;SAVE
	CALLR	OBJ2OBJDIR ;IN:A2,A3 SRCOBJ,DSTOBJ OUT:A3 DIR SC:A0-A4
	MOVE	A10,A0		;RESTORE
	MOVE	A11,A4		;RESTORE
	MOVE	A3,A10		;DIR

	;FIND MAG OF MOVEMENT
	MOVL	*A0(OCAR),A7
	MOVW	*A7(CDTOTMAG),A11
	CMPI	MINHITMAG,A11
	JRGE	CHIVOK
	MOVI	MINHITMAG,A11
CHIVOK

	;SIGNAL TO STOP ANY EXTERNAL FORCES -- I.E. TURBO
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFSTOPEXT),0
	SETF	16,1,0

	;ZERO VEC
	CALLA	CLEARVEC ;IN A2-A3,A7 SC,CD

	;ADD IN SOMETHING FOR THIS FRAME
	CALLA	ADDTIREVEC ;IN: A2,A7,A10,A11 SC,CD,DIR,MAG

	;SETUP SLIDE AWAY FROM COLLISION
	SLL	16,A11
	MOVX	A10,A11			;CDSLIPMAG:CDSLIPDIR
	MOVL	A11,*A7(CDSLIPDIR)	;AND CDSLIPMAG
	MOVI	[30H,(PERCENT100/1-PERCENT100/10)<<SLIPFFRAC],A14
	MOVL	A14,*A7(CDSLIPFACTOR)	;AND CDSLIPDECAY


CHIX
	MMFM	SP,A0,A1,A4,A5,A8,A11
	RETS

***
*** REACTION TABLES --------------------------------------------------------
***

**
** RX TBLS
**
** .WORD COUNTMASK
** .LONG STATEANIMSCRIPT,FUNCTION(),CCID,XXX
**
** IF ANIMSCRIPT != 0 && TOPWORD OF CCID == 0 THEN PLAYER CONTROL IS
** DISABLED UNTIL THE ANIMATION ENDS
**
** JFL 02 NOV 92
** JFL 04 NOV 92
** JFL 26 MAR 93
**
RX0LANDTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX0LAND,[8,CCIDHITWIN],0

RX1LANDTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1LAND,[8,CCIDHIT],0

RX0LEADINGTBL
	.WORD	0H ;COUNTMASK
	.LONG	0,RX0LEAD,[8,CCIDHITWIN],0

RX0NOTLEADINGTBL
	.WORD	0H ;COUNTMASK
	.LONG	0,RX0NOTLEAD,[8,CCIDHITWIN],0

RX1SPINTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1POSSPIN,[8,CCIDHIT],0







RX1ANOMOLYTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1ANOMOLY,[8,CCIDHIT],0
RX1POSSPINTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1POSSPIN,[8,CCIDHIT],0
RX1NEGSPINTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1NEGSPIN,[8,CCIDHIT],0
RX1ENDFRONTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROCKBACKA,RX1ENDFRONT,[0,CCIDHIT],0
RX1ENDBACKTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROCKFRONTA,RX1ENDBACK,[0,CCIDHIT],0
RX1SIDELEFTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROLLRIGHT,RX1SIDELEFT,[0,CCIDHIT],0
RX1SIDERIGHTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROLLLEFT,RX1SIDERIGHT,[0,CCIDHIT],0
RX1SWIPELEFTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROCKRIGHTA,RX1SWIPELEFT,[0,CCIDHIT],0
RX1SWIPERIGHTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	SASROCKLEFTA,RX1SWIPERIGHT,[0,CCIDHIT],0

RX1HARDANOMOLYTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDPOSSPINTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDNEGSPINTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDENDFRONTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDENDBACKTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDSIDELEFTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDSIDERIGHTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDSWIPELEFTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0
RX1HARDSWIPERIGHTTBL
	.WORD	0H ;COUNTMASK	
	.LONG	0,RX1TOSSUP,[0,CCIDMONDOHIT],0

***
*** REACTIONS -----------------------------------------------------------
***

**
** RX
**
** IN
**   A0 CAR US -- DONT SCRATCH
**   A1 CAR OTHER -- DONT SCRATCH
**   A2	RX TBL ENTRY
**   A3-A5 SCRATCH
**   A7 CD US -- DONT SCRATCH
**   A8 CD OTHER -- DONT SCRATCH
**   A9 AREA1:AREA0 -- DONT SCRATCH
**  A10-A11 PARAM PASS TO RX1/SCRATCH
**   B0-B2 SCRATCH
**   B3-B4 SAVE -- DONT SCRATCH
**
** JFL 03 NOV 92
** JFL 23 DEC 92; OBJOBJDIR32
**
RX0LAND
	MOVL	*A2(RXTDIS),A2
	CALLA	CARDISABLE ;IN: A0,A2,A7 OBJ,TIME:CCID,CD

	;CAR0 -- BOUNCE CAR BACK UP
	MOVL	*A0(OYVEL),A14
	SRL	1,A14
	NEG	A14
	MOVL	A14,*A0(OYVEL)

	;SCORE JUST A HIT
	MOVE	A0,A2
	MOVI	SCOREJUSTHIT,A3
	CALLA	SCOREVALADD ;IN: A2,A3 OBJ,VALUE

	;FIND DIR FROM OBJ1 TO OBJ0
	MOVE	A0,A2			;OBJ0
	MOVE	A1,A3			;OBJ1
	CALLR	OBJOBJDIR32 ;IN:A2,A3 OBJ0,OBJ1 OUT:A10,A11 DIR,SC

	;SET UP VEL FOR LOSER
	MOVI	MINHITMAG,A11

	RETS

**
** RX
**
** JFL 03 NOV 92
** JFL 23 DEC 92; OBJOBJDIR32
**
RX0LEAD
	;MOVL	*A2(RXTDIS),A2
	;CALLA	CARDISABLE ;IN: A0,A2,A7 OBJ,TIME:CCID,CD

	;FIND DIR FROM OBJ1 TO OBJ0
	MOVE	A0,A2			;OBJ0
	MOVE	A1,A3			;OBJ1
	CALLR	OBJOBJDIR32 ;IN:A2,A3 OBJ0,OBJ1 OUT:A10,A11 DIR,SC

	;CAR0 -- GET ENERGY FROM WINNER
	MOVW	*A7(CDTOTMAG),A11
	
	;CAR0 -- ZERO ALL VEC
	CALLA	CLEARVEC ;IN A2-A3,A7 SC,CD

	CMPI	MINHITMAG,A11
	JRGE	RX0LJUSTHIT
	MOVI	MINHITMAG,A11

	;SCORE A WIMPY HIT
	MOVE	A0,A2
	MOVI	SCOREWIMPYHIT,A3
	CALLA	SCOREVALADD ;IN: A2,A3 OBJ,VALUE
	JRUC	RX0LHITSCORED

RX0LJUSTHIT
	;SCORE JUST A HIT
	MOVE	A0,A2
	MOVI	SCOREJUSTHIT,A3
	CALLA	SCOREVALADD ;IN: A2,A3 OBJ,VALUE

RX0LHITSCORED

	;SETUP SLIDE AWAY FROM COLLISION
	SLL	16,A11
	MOVX	A10,A11			;CDSLIPMAG:CDSLIPDIR
	MOVL	A11,*A7(CDSLIPDIR)	;AND CDSLIPMAG
	MOVI	[50H,(PERCENT100/1-PERCENT100/5)<<SLIPFFRAC],A14
	MOVL	A14,*A7(CDSLIPFACTOR)	;AND CDSLIPDECAY
	SRL	16,A11			;MAG

	RETS
**
** RX
**
** JFL 03 NOV 92
**
RX0NOTLEAD
	;MOVL	*A2(RXTDIS),A2
	;CALLA	CARDISABLE ;IN: A0,A2,A7 OBJ,TIME:CCID,CD

	;FIND DIR FROM OBJ1 TO OBJ0
	MOVE	A0,A2			;OBJ0
	MOVE	A1,A3			;OBJ1
	CALLR	OBJOBJDIR32 ;IN:A2,A3 OBJ0,OBJ1 OUT:A10,A11 DIR,SC

	;CAR0 -- GET ENERGY FROM WINNER
	MOVW	*A7(CDTOTMAG),A11
	CMPI	MINHITMAG,A11
	JRGE	RX0NLJUSTHIT

	;SET MIN VEL
	MOVI	MINHITMAG,A11

	;SCORE A WIMPY HIT
	MOVE	A0,A2
	MOVI	SCOREWIMPYHIT,A3
	CALLA	SCOREVALADD ;IN: A2,A3 OBJ,VALUE
	JRUC	RX0NLHITSCORED

RX0NLJUSTHIT
	;SCORE JUST A HIT
	MOVE	A0,A2
	MOVI	SCOREJUSTHIT,A3
	CALLA	SCOREVALADD ;IN: A2,A3 OBJ,VALUE

RX0NLHITSCORED

	RETS

**
** RX
**
** JFL 03 NOV 92
**
RX1POSSPIN
RX1NEGSPIN
RX1ANOMOLY
RX1ENDFRONT
RX1ENDBACK
RX1SIDELEFT
RX1SIDERIGHT
RX1SWIPELEFT
RX1SWIPERIGHT
RX1LAND
	;CAR1 -- SPIN
	MOVE	A2,B0	;SAVE
	MOVE	A10,A4	;SAVE
	MOVE	A11,A5	;SAVE
	MOVW	*A0(ODIR),A3	;DIR1
	MOVW	*A8(CDTOTDIR),A14 ;DIR0 (ASSUME CDTOTMAG IS NEVER NEG)
	SUB	A3,A14		;DIR0-DIR1
	MOVE	A9,A2		;AREA1:AREA0
	SRL	16,A2
	CALLR	VECTORSPIN ;IN:A2,A3,A11,A14 AREA,SC,MAG,DIR0-DIR1 
			   ;OUT:A11,A14 SPIN,SPINDROP
	MOVW	A11,*A7(CDSPIN)
	MOVW	A14,*A7(CDSPINDROP)
	MOVE	B0,A2	;RESTORE
	MOVE	A4,A10	;RESTORE
	MOVE	A5,A11	;RESTORE

RX1GENERIC
	MOVL	*A2(RXTDIS),A2
	CALLA	CARDISABLE ;IN: A0,A2,A7 OBJ,TIME:CCID,CD

RX1GENERICNODIS

	;BOOST MAG
	MOVE	A11,A14
	SRL	1,A14
	ADD	A14,A11

	;ADD IN MAG FOR HOW FAST THE WINNER WAS SPINNING THE WHEEL
	MOVL	*A8(CDINPDATA),A14
	JRZ	RX1GDRONE
	MOVW	*A14(INPWHEELMAG),A14
	ABS	A14
	ADD	A14,A11	
RX1GDRONE

	;CAR1 -- ZERO INPUT VECTOR
	CALLA	CLEARVEC ;IN A2-A3,A7 SC,CD

	;CAR1 -- SAVE VECT
	;SETUP SLIDE AWAY FROM COLLISION
	ADDI	DIR180,A10
	SLL	16,A11
	MOVX	A10,A11			;CDSLIPMAG:CDSLIPDIR
	MOVL	A11,*A7(CDSLIPDIR)	;AND CDSLIPMAG
	MOVI	[50H,(PERCENT100/1-PERCENT100/5)<<SLIPFFRAC],A14
	MOVL	A14,*A7(CDSLIPFACTOR)	;AND CDSLIPDECAY
	SRL	16,A11


	RETS

**
** RX
**
** JFL 03 NOV 92
** JFL 07 JAN 93
**
RX1TOSSUP
	;MOVE CAR SPEED OF WINNER INTO LOSER TEMPORARILY
	;TO GET CARTHROWUP TO TOSS CAR UP ACCORDING TO SPEED IT WAS HIT
	MOVW	*A7(CDTOTMAG),A5		;SAVE
	SRL	1,A11				;NOT ALL OF MAG
	MOVW	A11,*A7(CDTOTMAG)
	MOVL	*A2(RXTDIS),A2
	CALLA	CARTHROWUP ;IN: A0,A2,A7 OBJ,CCID,CD
	MOVW	A5,*A7(CDTOTMAG)		;RESTORE
	RETS

***
*** ---------------------------------------------------------------------
***

**
** FRONTMIDREARTBL
**
** MAP AREA TO FRONT,MID,REAR
**
** JFL 14 FEB 93
**
FRONTMIDREARTBL
	.BYTE	0,2,2,0,0,1,2,1

**
** CARLOSEPARTS
**
** IN
**   A0 CAR
**   A2 AREA (>>3)!=0 FOR ALL AREAS
**   A3 DAMAGE, ZERO FOR DEATH
**   A7 CD
** SCRATCH: A1-A6,A8-A11
** OUT
**   B1 1 IF ANY PARTS LOST, ELSE 0
**   
** JFL 14 FEB 93
**
CARLOSEPARTS
	MOVE	A0,A8		;CAR
	CLR	B1		;NUMBER OF PARTS LOST
	MOVE	A3,A5		;DAMAGE

	;CHECK FOR ALL AREA LOSS
	MOVE	A2,A9
	SRL	3,A2
	JRZ	CLPONEAREA

	;LOSING PARTS FROM ALL AREAS
	CLR	A6

CLPALOOP
	;LOSE FROM ONE AREA
	MOVE	A6,A9		;SET AREA
	CALLR	CLPONEAREANOMAP

	;NEXT AREA
	INC	A6
	CMPI	2,A6
	JRLT	CLPALOOP
	MOVE	A6,A9		;LAST AREA
	JRUC	CLPONEAREANOMAP

CLPONEAREA
	;REMAP AREA TO FRONT/MID/REAR
	SLL	3,A9
	ADDI	FRONTMIDREARTBL,A9
	MOVB	*A9,A9

CLPONEAREANOMAP
	;LOSE ALL PARTS FROM AREA A2 DAMAGE IS A3
	SLL	5,A9		;AREA TO OFFSET
	ADD	A7,A9
	MOVL	*A9(CDHITFRONT),A4

CLPLOOP
	;REG USE
	;  A0 CAR
	;  A1
	;  A2 SCRATCH
	;  A3 SCRATCH
	;  A4 HIT ANIM TBL
	;  A5 DAMAGE ON CAR
	;  A6 AREA COUNT
	;  A7 CD
	;  A8 CAR TMP
	;  A9 CD+CDHITOFFSET
	; A10 
	; A11
	;  B0 SCRATCH
	;  B1 NUMBER OF ANIMS STARTED

	;CHECK IF WE SHOULD LAUNCH THIS PART
	MOVW	*A4+,A14	;GET DAMAGE LEVEL	
	JRZ	CLPX		;END OF TBL
	JRN	CLPPARTOFF	;LOSE PART SPECIAL HANDLER
CLPCHECKDEATH
	MOVE	A5,A5
	JRZ	CLPLAUNCH	;CAR IS CONSIDERED DEAD
	CMP	A14,A5
	JRGT	CLPX		;DAMAGE ABOVE THIS LEVEL
	
CLPLAUNCH
	;LAUNCH
	MOVK	1,B1			;SIGNAL PART(S) LOST
	MOVL	*A4+,A2			;ANIM
	MOVL	A4,*A9(CDHITFRONT)	;FOR NEXT TIME

	MMTM	SP,A0,A4,A5,A6,A7
	MOVI	ASICARPART,A3	;INIT()
	CALLA	ANISPAWNONE	;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
				;SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR
	MMFM	SP,A0,A4,A5,A6,A7
	JRUC	CLPLOOP
CLPPARTOFF
	;CHECK IF WE ONLY WANT TO LOSE THESE AT DEATH TIME
	;IF WE DO, THE ABOVE ASSUMES A14 WILL BE NEG AND CMP A14,A5
	;WILL FAIL IF IT GETS THAT FAR...
	BTST	B_PTDEATH,A14
	JRNZ	CLPCHECKDEATH

	;
	;TAKE A MULTI-PART CAR PART OFF
	;

	MOVL	A4,*A9(CDHITFRONT)	;FOR NEXT TIME

	;GET PART NUMBER
	SLL	24,A14			;ISOLATE PART NUMBER
	SRL	24,A14
CLPPOLOOK
	;GET NEXT PART
	MOVL	*A8(OPARTS),A8		;USE FOR PART
	JRZ	CLPONOSUCH
	MOVW	*A8(OPARTID),A2
	CMP	A14,A2
	JRNE	CLPPOLOOK		;KEEP LOOKING
	
	;ZAP IT EEEEEEEEE DOOOOO DAH
	CALLA	ZAP_OBJ ;IN:A8 OBJ
CLPONOSUCH
	MOVE	A0,A8			;RESTORE
	JRUC	CLPLOOP			;GO BACK & CONTINUE
	
CLPX
	RETS


**
** TAKEDAMAGE
**
** IN
**   A2 CAR
**   A3 AREA TO DAMAGE 
**  A14 AMOUNT OF DAMAGE 0..F
**   B0 CAR THAT IS GIVING DAMAGE
**   B0,A0-A11 SCRATCH
** OUT
**   C IF CAR HAS BEEN KILLED FOR THE FIRST TIME
**  B1 1=PART(S) CAME OFF, 0 OTHERWISE
**
** JFL 20 AUG 92
** JFL 03 SEP 92; NEVER LOSE A PIECE BUG FIX
** JFL 17 SEP 92
** JFL 20 SEP 92; STILL PRETTY SLOPY...
** JFL 29 SEP 92
** JFL 07 OCT 92
** JFL 29 OCT 92; LOSEMISCCARPART
** JFL 27 JAN 93
** JFL 01 FEB 93
** JFL 12 FEB 93; RE-WRITE STARTED
** JFL 14 FEB 93
** JFL 22 MAR 93; B1 FIX
** JFL 12 APR 93; NO KILLS IN SCORE BOX
** JFL 16 APR 93; CUT DAMAGE IN HALF
**
TAKEDAMAGE	
	MOVE	A2,A0			;CAR	
	MOVL	*A0(OCAR),A7		;CD
	MOVE	A14,A4			;DAMAGE
	MOVE	A3,A5			;AREA
	CLR	B1			;DEFAULT TO NO PIECES OFF

	;DO THE DAMAGE TO THE CAR
	MOVW	*A7(CDDAMAGE),A3			
	JRZ	TDMALREADYDEAD
	SLL	2,A14
	SUB	A14,A3
	MOVE	A3,A3 ;XXX DEBUG TAKE THIS OUT!!!!
	JRP	TDMNODEATH

	;
	;CAR WAS JUST KILLED
	;
	CALLA	KILLCAR ;IN: A0,A2-A3 CAR,SC OUT:B0 NZ CAR NOT ZAPPED

	MOVE	B0,A2
	JRZ	TDMNOCAR1

	;MAKE SURE OBJ HASNT BEEN ZAPPED OR REUSED (MAY NOT BE NECESSARY)
	MOVB	*A2(OCTRL+B_INUSE-7),A14
	;TLOCKON	NN ;WILL THIS EVER HAPPEN -- DONT THINK SO 14 FEB 93
	JRNN	TDMNOCAR1
	MOVW	*A2(OID),A14
	SLL	SL_SUPL,A14
	SRL	SR_SUPL,A14
	SUBK	SUPLIST_CAR,A14
	;TLOCKON	NZ ;WILL THIS EVER HAPPEN -- DONT THINK SO 14 FEB 93
	JRNZ	TDMNOCAR1

	;ADD IN DAMAGE DONE TO AGGRESSOR
	;GET CAR THAT HIT THIS CAR
	MOVL	*A2(OCAR),A14
	MOVW	*A14(CDAGG),A3
	ADDK	10,A3
	MOVW	A3,*A14(CDAGG)
	MOVW	*A14(CDKILLS),A3
	INC	A3
	MOVW	A3,*A14(CDKILLS)

TDMNOCAR1
	;SET RETURN CODES
	CLR	B1			;NO PART CAME OFF
	SETC				;CAR DIED FOR THE FIRST TIME
	JRUC	TDMX

TDMNODEATH
	;
	;CAR WASNT KILLED, JUST DAMAGED
	;
	
	;SET CAR DAMAGE
	MOVW	A3,*A7(CDDAMAGE)

	;SET DAMAGE BAR
	MOVE	A3,A6			;SAVE
	MOVE	A0,A2
	CALLA	SCORESETDAMAGE ;IN: A2,A3 OBJ,DAMAGE
	MOVE	A6,A3			;UNSAVE

	;LOSE PARTS
	MOVE	A5,A2
	CALLR	CARLOSEPARTS ;IN:A0,A2,A3,A7 CAR,AREA,DAMAGE,CD 
			     ;OUT:B1 1=PARTSLOST SC:A1,A3-A6,A8-A11

	;FLASH THE BACK
	MOVK	SPALRED,A3
	CALLR	FLASHPLBACK ;IN A0,A3 OBJ,COLOR

	;
	;SET AGG OF CAR THAT HIT THIS CAR
	;
	MOVE	B0,A2
	JRZ	TDMNOCAR2

	;MAKE SURE OBJ HASNT BEEN ZAPPED OR REUSED (MAY NOT BE NECESSARY)
	MOVB	*A2(OCTRL+B_INUSE-7),A14
	;TLOCKON	NN ;WILL THIS EVER HAPPEN -- DONT THINK SO 14 FEB 93
	JRNN	TDMNOCAR2
	MOVW	*A2(OID),A14
	SLL	SL_SUPL,A14
	SRL	SR_SUPL,A14
	SUBK	SUPLIST_CAR,A14
	JRNZ	TDMNOCAR2

	;ADD IN DAMAGE DONE TO AGGRESSOR
	;GET CAR THAT HIT THIS CAR
	MOVL	*A2(OCAR),A3
	MOVW	*A3(CDAGG),A14
	ADDK	2,A14
	MOVW	A14,*A3(CDAGG)
TDMNOCAR2


TDMALREADYDEAD
	;
	;CAR WAS ALREADY DEAD
	;

	;RETURN CODES
	CLRC				;CAR DIDNT DIE FOR FIRST TIME
TDMX
	RETS
	


**
** GETSPINENERGY
**
** IN
**   A2 AREA
**   A3 DIR
**  A14 LASTDIR
** OUT
**  A10 DIR
**  A11 MAG
**
** JFL 16 NOV 92
**
GETSPINENERGY

	;GET DIR OF ENERGY BASED ON AREA
	SLL	3,A2		;SIZEOF AREAAWAYTBL	
	ADDI	AREAAWAYTBL,A2
	MOVB	*A2,A10
	ADD	A3,A10		;DIR

	;GET AMOUNT OF ENERGY BASED ON SPIN
	SUB	A14,A3
	ABS	A3
SPINTOENERGYSHIFT	EQU	6
MAXSPINENERGY		EQU	500H
	SLL	SPINTOENERGYSHIFT,A3
	MOVE	A3,A11
	CMPI	MAXSPINENERGY,A11
	JRLE	GSEX
	MOVI	MAXSPINENERGY,A11

GSEX
	RETS

**
** FLASHPLBACKPROC
**
** IN
**   A8 OBJ
**
** JFL 11 DEC 92
**
FLASHPLBACKPROC

	;CLR PLAYER BACK
	CLR	A3		;SPALCLR
	MOVE	A8,A2
	CALLA	SCORESETPLBACK ;IN: A2,A3 OBJ,COLOR

	DIE

**
** FLASHPLBACKOIDPROC
**
** IN
**   A8 OID
**
** JFL 11 DEC 92
** JFL 19 FEB 93
**
FLASHPLBACKOIDPROC

	;CLR PLAYER BACK
	CLR	A3		;SPALCLR
	MOVE	A8,A2
	CALLA	SCORESETPLBACKOID ;IN: A2,A3 OID,COLOR

	DIE

**
** FLASHPLBACK
**
** IN
**   A2 OBJ
**   A3 COLOR
**
** JFL 11 DEC 92
**
FLASHPLBACK
	MMTM	SP,A0,A1,A7,A8

	;SET PLAYER BACK
	MOVE	A0,A2
	CALLA	SCORESETPLBACK ;IN: A2,A3 OBJ,COLOR

	MOVE	A0,A8
	CREATE	PID_DRAGONE,FLASHPLBACKPROC
	MOVK	4,A14			;SET FLASH TIME
	MOVW	A14,*A0(PTIME)

	MMFM	SP,A0,A1,A7,A8
	RETS

**
** FLASHPLBACKDEATH
**
** IN
**   A2 OBJ
**   A3 COLOR
**
** JFL 11 DEC 92
** JFL 19 FEB 93
**
FLASHPLBACKDEATH
	MMTM	SP,A0,A1,A7,A8

	;SET PLAYER BACK
	MOVE	A0,A2
	CALLA	SCORESETPLBACK ;IN: A2,A3 OBJ,COLOR

	MOVE	A0,A8
	CREATE	PID_DRAGONE,FLASHPLBACKPROC
	MOVI	ONESECOND*2,A14		;SET FLASH TIME
	MOVW	A14,*A0(PTIME)

	MMFM	SP,A0,A1,A7,A8
	RETS

**
** FLASHPLBACKOID
**
** IN
**   A2 OID
**   A3 COLOR
**
** JFL 11 DEC 92
** JFL 19 FEB 93
**
FLASHPLBACKOID
	MMTM	SP,A0,A1,A7,A8

	;SAVE OID FOR PROC
	MOVE	A2,A8

	;SET PLAYER BACK
	CALLA	SCORESETPLBACKOID ;IN: A2,A3 OBJ,COLOR

	CREATE	PID_DRAGONE,FLASHPLBACKOIDPROC
	MOVK	4,A14			;SET FLASH TIME
	MOVW	A14,*A0(PTIME)

	MMFM	SP,A0,A1,A7,A8
	RETS

**
** IN
**   A7 CD
**
** JFL 22 NOV 92
**
RANDOMSPIN
	;PICK A SMALL RANDOM SPIN
	MOVW	@HCOUNT,A14
	XORI	3FH,A14
	SLL	26,A14
	SRA	26,A14
	MOVW	A14,*A7(CDSPIN)
	MOVK	8,A14
	MOVW	A14,*A7(CDSPINDROP)
	RETS

**
** VECTORSPIN
**
** IN
**   A2 AREA
**  A11 VECTOR MAG
**  A14 DIR OF CAR0 FORCE - FACING DIR OF CAR1
** OUT
**  A11 SPIN
**  A14 SPINDROP
**
** BREAKS A2,A3,A11,A14
**
** JFL 17 AUG 92
** JFL 20 SEP 92
** JFL 16 OCT 92
** JFL 07 DEC 92
** JFL 26 MAR 93; NEW AREA
**
VECTORSPIN
	;CHECK MIN VEL
	CMPI	MINTOSPIN,A11	
	JRLT	VSNONE			;NO SPIN

	;CHECK FOR HIT IN THE MIDDLE -- NEVER SPIN
	MOVE	A2,A2
	JRZ	VSNONE			;NO SPIN

	;GET SPIN INFO -- SET UP FOR FRONT HIT (REVERSE LATER IF NOT)
	ADDK	7,A14			;ROUND UP
	SLL	24,A14			;DROP TOP SIGN BITS
	SRL	24+4,A14		;TURN INTO 0..F INDEX
	SLL	3,A14			;SIZEOF DIRSPINTBL
	ADDI	DIRSPINTBL,A14
	MOVB	*A14,A3
	JRZ	VSNONE			;NO SPIN

	;NEG SPIN DIR IF FORCE IS INTO THE BACK
	SUBK	2,A2
	JRN	VSFRONT

	NEG	A3			;HIT BACK END
VSFRONT

	;FIGURE SPIN SPEED BASED ON VECTOR
	SRL	HITSPINSHIFT,A11
	CMPI	MINSPINSPEED,A11
	JRGE	VSOK1
	MOVK	MINSPINSPEED,A11
	JRUC	VSOK3
VSOK1
	CMPI	MAXSPINSPEED,A11
	JRLE	VSOK3
	MOVK	MAXSPINSPEED,A11	;SPIN START OUT COUNTER CLOCKWISE
VSOK3
	;CHECK DIR OF SPIN
	MOVE	A3,A3
	JRN	VSNEG

	;POSITIVE SPIN
	SLL	A3,A11
	JRUC	VSSPINOK
VSNEG
	;NEGATIVE SPIN
	
	NEG	A3
	SLL	A3,A11
	NEG	A11
	JRUC	VSSPINOK
	 
VSNONE	
	;SET NO SPIN SPEED
	CLR	A11
	JRUC	VSX

VSSPINOK
	;POS SPIN, ADD SPINDROP

	;DECAY THE SPIN FROM 1..4 RND
	MOVW	@REFCNT,A14
	SLL	32-2-2,A14
	SRL	32-2,A14
	INC	A14
	
	SLL	SPINFRACSHIFT,A11
VSX
	RETS

***
*** AREA TBLS ------------------------------------------------------------
***

**
** BYTE TBLS
**

**
** LEADING TABLE
** A POS NUM INDICATES AREA IS CONSIDERED LEADING WHEN DRIVING FORWARD
** A NEG NUM INDICATES AREA IS CONSIDERED LEADING WHEN DRIVING BACKWARD
** A ZERO INDICATES AREA IS CONSIDERED ALWAYS LEADING
**
** JFL 23 AUG 92
** JFL 26 MAR 93; NEW AREA
**
LEADINGTBL
	.BYTE	0,1,-1
LEADINGTBLX

**
** DIRSPINTBL
**
** INDEX BY DIR 0..F
** DONT SPIN IF ZERO
**
** JFL 20 SEP 92
** JFL 26 MAR 93; NEW AREA
**
DIRSPINTBL
	.BYTE	0,1,1,2,3,2,1,1,0,-1,-1,-2,-3,-2,-1,-1
DIRSPINTBLX

	.EVEN

***
*** -----------------------------------------------------------------------
***

AREAMASK
	.LONG	0F0000000H
	.LONG	0F000000H
	.LONG	0F00000H
	.LONG	0F0000H
	.LONG	0F000H
	.LONG	0F00H
	.LONG	0F0H
	.LONG	0FH


***
*** -----------------------------------------------------------------------
***

**
** SMARTBOMBALL
**
** IN
**   A0 US
**   A2-A3,A7,A9,A10 SCRATCH
**
** JFL 10 FEB 93
**
SMARTBOMBALL
	MOVE	A0,A10			;SAVE

	MOVL	@SUPPLSTS+SUPL_CAR,A0	;GET 1ST CAR
	JRZ	SBAX
	
SBALOOP
	CMP	A10,A0			;IS THIS US?
	JREQ	SBANEXT

	;TOSS THE CAR HIT UP IN THE AIR
	MOVL	*A0(OCAR),A7
	MOVI	CCIDSMARTBOMB,A2
	CALLA	CARTHROWUP ;IN: A0,A2,A7 OBJ,CCID,CD

SBANEXT
	MOVL	*A0(OSLINK),A0
	JRNZ	SBALOOP

SBAX
	MOVE	A10,A0			;RESTORE
	RETS

***
*** ICON TAKES EFFECT -----------------------------------------------------
***



**
** REGISTERMONEY -- EXGPC B8
**
** IN
**   A0-A7 SCRATCH
**   A8 OBJ
**   A9-A11 SCRATCH
**   
** JFL 10 FEB 93
**
REGISTERMONEY

	;FLASH THE BACK
	MOVW	*A8(OICONOID),A2	;WHO GOT IT
	MOVK	SPALWHITE,A3
	CALLR	FLASHPLBACKOID ;IN A2,A3 OID,COLOR

	;GIVE IT AWAY, GIVE IT AWAY, GIVE IT AWAY NOW
	MOVW	*A8(OICONOID),A2	;WHO GOT IT
	MOVL	*A8(OICONVAL32),A3	;AMOUNT OF MONEY
	CALLA	SCOREVALADDOID ;IN:A2,A3 OID,VAL

	EXGPC	B8

**
** REGISTERHEALTH -- EXGPC B8
**
** IN
**   A0-A7 SCRATCH
**   A8 OBJ
**   A9-A11 SCRATCH
**   
** JFL 10 FEB 93
** JFL 20 MAR 93; ROADKILLED CARS
**
REGISTERHEALTH

	;GIVE IT AWAY, GIVE IT AWAY, GIVE IT AWAY NOW
	MOVW	*A8(OICONOID),A2
	MOVL	*A8(OICONVAL32),A0	;GET CAR OBJ

	;MAKE SURE CAR IS STILL ALIVE
	MOVB	*A0(OCTRL+B_INUSE-7),A14
	JRNN	RHX			;ZAPPED
	MOVW	*A0(OID),A9
	CMP	A2,A9
	JRNE	RHX			;RECYCLED

	;MAKE SURE CAR IS NOT ROADKILL
	MOVL	*A0(OCAR),A7
	MOVW	*A7(CDDAMAGE),A14
	JRZ	RHX

	;FLASH THE BACK
	MOVK	SPALWHITE,A3
	CALLR	FLASHPLBACKOID ;IN A2,A3 OID,COLOR

	;HALF WAY FROM CURRENT HEALTH TO COMPLETELY HEALTHY
	MOVW	*A7(CDDAMAGE),A3	;CUR DAMAGE
	MOVI	NODAMAGE,A14
	SUB	A3,A14
	SRL	1,A14			;HALF BETTER
	JRZ	RHX
	ADD	A14,A3	
	MOVW	A3,*A7(CDDAMAGE)
	MOVE	A9,A2			;WHO GOT IT
	CALLA	SCORESETDAMAGEOID ;IN:A2,A3 OID,VAL

RHX
	EXGPC	B8


**
** REGISTERTURBO -- EXGPC B8
**
** IN
**   A0-A7 SCRATCH
**   A8 OBJ
**   A9-A11 SCRATCH
**   
** JFL 10 FEB 93
** JFL 20 MAR 93; ROADKILLED CARS
** JFL 16 APR 93; ADD A MAX TURBO
**
REGISTERTURBO

	;GIVE IT AWAY, GIVE IT AWAY, GIVE IT AWAY NOW
	MOVW	*A8(OICONOID),A2
	MOVL	*A8(OICONVAL32),A0	;GET CAR OBJ

	;MAKE SURE CAR OBJ HASNT BEEN ZAPPED
	MOVB	*A0(OCTRL+B_INUSE-7),A14
	JRNN	RTX			;ZAPPED
	MOVW	*A0(OID),A9
	CMP	A2,A9
	JRNE	RTX			;RECYCLED

	;MAKE SURE CAR IS NOT ROADKILL
	MOVL	*A0(OCAR),A7
	MOVW	*A7(CDDAMAGE),A14
	JRZ	RTX

	;FLASH THE BACK
	MOVK	SPALWHITE,A3
	CALLR	FLASHPLBACKOID ;IN A2,A3 OID,COLOR

	;ADD ON TO MAX TURBOS
	MOVW	*A7(CDTURBOMAX),A2
	CMPI	TURBOSINGLEMAX,A2
	JRHS	RTMAXED
	INC	A2			;ONE MORE TO MAX
	MOVW	A2,*A7(CDTURBOMAX)
	
RTMAXED
	;MAX OUT TURBOS
	MOVI	TURBOSINGLE,A3
	SETF	8,0,1
	MPYU	A2,A3			;TURN INTO FRACTIONAL THING
	SETF	32,1,1
	MOVW	A3,*A7(CDTURBOS)

	;SHOW MAXED OUT TURBO ON SCORE
	MOVE	A2,A3			;VAL
	MOVE	A9,A2			;WHO GOT IT
	CALLA	SCORESETTURBOOID ;IN:A2,A3 OID,VAL

	;GIVE UNLIMITED TURBOS FOR A WHILE
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFBONUSTURBO),0
	SETF	16,1,0

	;SET TIME FOR UNLIMITED TURBOS
	MOVI	TURBOBONUSTIME/8,A14	;DIV BY 8 DUE TO REGEN TIMER IN MCP
	MOVW	A14,*A7(CDBONUSTURBO)

RTX
	EXGPC	B8


**
** REGISTERMISSILE -- EXGPC B8
**
** IN
**   A0-A6 SCRATCH
**   A7 EXGPC
**   A8 OBJ
**   A9-A11 SCRATCH
**   
** JFL 10 FEB 93
** JFL 20 MAR 93; ROADKILLED CARS
**
REGISTERMISSILE
	MOVE	A8,A0			;SAVE

	;GIVE IT AWAY, GIVE IT AWAY, GIVE IT AWAY NOW
	MOVW	*A0(OICONOID),A2
	MOVL	*A0(OICONVAL32),A8	;GET CAR OBJ

	;MAKE SURE CAR IS STILL ALIVE
	MOVB	*A8(OCTRL+B_INUSE-7),A14
	JRNN	RMX			;ZAPPED
	MOVW	*A8(OID),A14
	CMP	A2,A14
	JRNE	RMX			;RECYCLED

	;MAKE SURE CAR IS NOT ROADKILL
	MOVL	*A8(OCAR),A7
	MOVW	*A7(CDDAMAGE),A14
	JRZ	RMX

	;FLASH THE BACK
	MOVK	SPALWHITE,A3
	CALLR	FLASHPLBACKOID ;IN A2,A3 OID,COLOR

	;GIVE MISSILE TO PLAYER
	MOVW	*A0(OICONVAL16),A2	;HOW MANY MISSILES
	CALLA	MISPICKUP ;IN:A2,A7,A8 COUNT,CD,OBJ 

RMX
	MOVE	A0,A8			;RESTORE
	EXGPC	B8

**
** REGISTERLMINE -- EXGPC B8
**
** IN
**   A0-A6 SCRATCH
**   A7 EXGPC
**   A8 OBJ
**   A9-A11 SCRATCH
**   
** JFL 10 FEB 93
** JFL 20 MAR 93; ROADKILLED CARS
** JFL 14 APR 93; LMINE ICON
**
REGISTERLMINE
	MOVE	A8,A0			;SAVE

	;GIVE IT AWAY, GIVE IT AWAY, GIVE IT AWAY NOW
	MOVW	*A0(OICONOID),A2
	MOVL	*A0(OICONVAL32),A8	;GET CAR OBJ

	;MAKE SURE CAR IS STILL ALIVE
	MOVB	*A8(OCTRL+B_INUSE-7),A14
	JRNN	RMX			;ZAPPED
	MOVW	*A8(OID),A14
	CMP	A2,A14
	JRNE	RLMX			;RECYCLED

	;MAKE SURE CAR IS NOT ROADKILL
	MOVL	*A8(OCAR),A7
	MOVW	*A7(CDDAMAGE),A14
	JRZ	RLMX

	;FLASH THE BACK
	MOVK	SPALWHITE,A3
	CALLR	FLASHPLBACKOID ;IN A2,A3 OID,COLOR

	;GIVE MISSILE TO PLAYER
	MOVW	*A0(OICONVAL16),A2	;HOW MANY MISSILES
	CALLA	LMINEPICKUP ;IN:A2,A7,A8 COUNT,CD,OBJ 

RLMX
	MOVE	A0,A8			;RESTORE
	EXGPC	B8

***
*** CAR HIT ICON -------------------------------------------------------------
***

** 
**
** CAR HIT ICON
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
**   A7,A9,A10 SCRATCH
**   B0 SCRATCH
**
** JFL 24 SEP 92
** JFL 15 NOV 92
** JFL 02 DEC 92
** JFL 18 JAN 93
** JFL 14 APR 93; LMINE ICON
**
CARHITMISLICON
	;
	;MISSILE ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX
	
	;SOUND
	MOVI	SNDMISSILEICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;SEND ICON IMAGE UP
	MOVL	*A1(OIMG),A2
	MOVE	A0,A3
	MOVE	A1,A14
	CALLA	MAKETOSCORE ;IN:A2,A3,A14 IHDR,SRCOBJ,XYOBJ OUT:A2 OBJ
	JRZ	CHIGENERIC
	
	;SET UP FOR WHEN IT GETS TO SCORE
	MOVI	REGISTERMISSILE,A14
	MOVL	A14,*A2(OCVECT)		;USE FOR WHEN IT GETS TO DEST
	MOVW	*A0(OID),*A2(OICONOID)	;WHO GOT THIS -- OID
	MOVL	A0,*A2(OICONVAL32)	;WHO GOT THIS -- OBJ
	MOVW	*A1(OAOLVAL16),*A2(OICONVAL16)	;HOW MANY MISSILES

	JRUC	CHIGENERIC

CARHITLMINEICON
	;
	;LMINE ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX
	
	;SOUND
	MOVI	SNDMISSILEICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;SEND ICON IMAGE UP
	MOVL	*A1(OIMG),A2
	MOVE	A0,A3
	MOVE	A1,A14
	CALLA	MAKETOSCORE ;IN:A2,A3,A14 IHDR,SRCOBJ,XYOBJ OUT:A2 OBJ
	JRZ	CHIGENERIC
	
	;SET UP FOR WHEN IT GETS TO SCORE
	MOVI	REGISTERLMINE,A14
	MOVL	A14,*A2(OCVECT)		;USE FOR WHEN IT GETS TO DEST
	MOVW	*A0(OID),*A2(OICONOID)	;WHO GOT THIS -- OID
	MOVL	A0,*A2(OICONVAL32)	;WHO GOT THIS -- OBJ
	MOVW	*A1(OAOLVAL16),*A2(OICONVAL16)	;HOW MANY MISSILES

	JRUC	CHIGENERIC

CARHITMONEYBAGICON
	;
	;MONEYBAG ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX

	;SOUND
	MOVI	SNDMONEYBAGICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;FIND AMOUNT OF MONEY
	CALLA	RANDOMA2 ;A2 RND
	MOVI	MONEYPICKUPTBL,A7
	MOVW	*A7+,A3	    		;COUNTMASK
	AND	A2,A3			;PICK ONE RANDOMLY
	SLL	6,A3			;SIZEOF TBL
	ADD	A3,A7
	.IF DEBUG
	CMPI	MONEYPICKUPTBLX,A7
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVL	*A7+,A2			;GET IMAGE
	MOVE	A0,A3
	MOVE	A1,A14
	CALLA	MAKETOSCORE ;IN:A2,A3,A14 IHDR,SRCOBJ,XYOBJ OUT:A2 OBJ
	JRZ	CHIGENERIC
	
	;SET UP FOR WHEN IT GETS TO SCORE
	MOVL	*A7(0),*A2(OICONVAL32)	;VALUE OF ICON
	MOVI	REGISTERMONEY,A14
	MOVL	A14,*A2(OCVECT)		;USE FOR WHEN IT GETS TO DEST
	MOVW	*A0(OID),*A2(OICONOID)	;WHO GOT THIS

	JRUC	CHIGENERIC

CARHITHEALTHICON
	;
	;HEALTH ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX

	;LOAD UP
	MOVL	*A0(OCAR),A7

	.IF 0 ;DONT GIVE TO ROADKILL
	;CHECK IF ITS TOO LATE TO HELP THIS PLAYER
	MOVW	*A7(CDDAMAGE),A14
	JRZ	CHIGX
	.ENDIF ;DONT GIVE TO ROADKILL

	;SOUND
	MOVI	SNDHEALTHICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;SEND ICON IMAGE UP
	MOVL	*A1(OIMG),A2
	MOVE	A0,A3
	MOVE	A1,A14
	CALLA	MAKETOSCORE ;IN:A2,A3,A14 IHDR,SRCOBJ,XYOBJ OUT:A2 OBJ
	JRZ	CHIGENERICGOTA7
	
	;SET UP FOR WHEN IT GETS TO SCORE
	MOVI	REGISTERHEALTH,A14
	MOVL	A14,*A2(OCVECT)		;USE FOR WHEN IT GETS TO DEST
	MOVW	*A0(OID),*A2(OICONOID)	;WHO GOT THIS -- OID
	MOVL	A0,*A2(OICONVAL32)	;WHO GOT THIS -- OBJ

	JRUC	CHIGENERICGOTA7

CARHITTURBOICON
	;
	;TURBO ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX

	;SOUND
	MOVI	SNDTURBOICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;SEND ICON IMAGE UP
	MOVL	*A1(OIMG),A2
	MOVE	A0,A3
	MOVE	A1,A14
	CALLA	MAKETOSCORE ;IN:A2,A3,A14 IHDR,SRCOBJ,XYOBJ OUT:A2 OBJ
	JRZ	CHIGENERIC
	
	;SET UP FOR WHEN IT GETS TO SCORE
	MOVI	REGISTERTURBO,A14
	MOVL	A14,*A2(OCVECT)		;USE FOR WHEN IT GETS TO DEST
	MOVW	*A0(OID),*A2(OICONOID)	;WHO GOT THIS -- OID
	MOVL	A0,*A2(OICONVAL32)	;WHO GOT THIS -- OBJ

	JRUC	CHIGENERIC

CARHITSMARTBOMBICON
	;
	;SMARTBOMB ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX
						      
	;SOUND
	MOVI	SNDSMARTBOMBICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;DETONATE ALL MISLS TARGETTED ON US
	CLR	B0
	CALLA	MISDETONATETARGET ;IN:A0,A2-A3,B0 TARGET,SCRATCH,DETONIRQ

	;TOSS ALL IN AIR EXCEPT US
	CALLR	SMARTBOMBALL ;IN:A0,A2-A3,A7,A9,A10 US,SCRATCH

	JRUC	CHIGENERIC

CARHITDETONATEICON
	;
	;DETONATE ICON
	;

	;CHECK IF OBJ IS ALREADY DEAD
	MOVB	*A1(OCTRL+B_INUSE-7),A14
	JRNN	CHIGX
	
	;SOUND
	MOVI	SNDSMARTBOMBICON,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;DETONATE ALL MISLS
	CLR	B0
	CALLA	MISDETONATEALL ;IN:A2-A3,B0 SCRATCH,DETONIRQ

	;JRUC	CHIGENERIC

CHIGENERIC
	MOVL	*A0(OCAR),A7
	
CHIGENERICGOTA7

	
	;
	;GENERIC ICON HITTING STUFF
	;

	;MARK AS DEAD
	SETF	1,0,0
	MOVE	SP,*A1(OCTRL+B_INUSE),0
	SETF	16,1,0

	;SET UP TO KILL NEXT FRAME
	MOVE	A0,A9			;SAVE
	MOVE	A1,A0
	MOVI	ASKILL,A14
	MOVL	A14,*A0(ANIMSCR)
	MOVL	A14,*A0(ANIMFRM)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI ;IN: A0 OBJ
	MOVE	A9,A0			;RESTORE

	;ONE LESS POWER UP AVAILABLE
	MOVI	DRG+DRGPOWERUPS,A2
	MOVW	*A2,A3
	DEC	A3
	MOVW	A3,*A2
	TLOCKON	N
	
	;CHECK IF WE HAVE A RUNNER (I.E. DEAD CAR)
	MOVB	*A7(CDFLAGS+B_CDFDEAD-7),A14
	JRN	CHIGX

	;AGGRESSIVE
	MOVW	*A7(CDAGG),A14
	INC	A14
	MOVW	A14,*A7(CDAGG)

	;
	;FLASH CAR PAL
	;
	MOVE	A8,A9		;SAVE
	MOVE	A0,A8
	MOVW	*A7(CDPALICON),A2
	SLL	16,A2
	MOVK	5,A14
	MOVX	A14,A2		;PAL:COUNT
	MOVI	[6,3],A3	;TIMEON:TIMEOFF
	CALLA	FLASHCARPAL ;IN:A2,A3,A7,A8 PAL:COUNT,TIMEON:TIMEOFF,CD,OBJ
	MOVE	A9,A8		;UNSAVE
CHIGX
	RETS

***
*** ----------------------------------------------------------------------
***

**
** CARHITFLAG
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 24 SEP 92
** JFL 15 NOV 92
** JFL 02 DEC 92
**
CARHITFLAG
	RETS

**
** CARHITTREE
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 24 SEP 92
** JFL 15 NOV 92
** JFL 02 DEC 92
** JFL 01 FEB 93
** JFL 24 FEB 93; ADDED TREE ANIM HERE
**
CARHITTREE
	;SOUND
	MOVW	*A7(CDINPNUM),A14
	ADDI	SNDTREE1,A14
	CALLA	ARENASND ;IN:A14 SNDID

	;
	;IF THERE IS AN ANIM, START IT
	;
	;CHANGE OR ADD ANIM
	MOVL	*A1(OAOL),A2	
	JRZ	CHTNOANI
	MOVL	*A2(AOLHITANIM),A2
	JRZ	CHTNOANI
	MOVL	A2,*A1(ANIMSCR)
	MOVL	A2,*A1(ANIMFRM)
	MOVK	1,A14
	MOVW	A14,*A1(ANIMSLPB)
	MOVE	A0,A2			;SAVE
	MOVE	A1,A0
	CALLA	CKINSANI ;IN: A0 OBJ
	MOVE	A2,A0			;RESTORE

CHTNOANI
	CALLR	CARHITIMMOBILE ;IN:A0,A1 CAR,OBJ SC:A2,3,7,9,10
	RETS

CARHITPOLE
	;SOUND
	MOVW	*A7(CDINPNUM),A14
	ADDI	SNDPOLE1,A14
	CALLA	ARENASND ;IN:A14 SNDID

	CALLR	CARHITIMMOBILE ;IN:A0,A1 CAR,OBJ SC:A2,3,7,9,10
	RETS

**
** CARHITMISSILE
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 24 SEP 92
** JFL 15 NOV 92
** JFL 02 DEC 92
** JFL 04 FEB 93
**
CARHITMISSILE

	;MARK MISSILE AS HIT
	MOVL	A0,*A1(OMISHIT)		;SAVE CAR THAT MISL HIT
	MOVW	A3,*A1(OMISAREA)	;AREA ON CAR THAT WAS HIT
	MOVW	*A0(OID),*A1(OMISOID)	;ID OF CAR

	RETS

** 
**
** CARHITBARREL
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 21 FEB 93
** JFL 22 FEB 93
**
CARHITBARREL
	;MAKE SOUND
	MOVI	SNDBARREL,A14
	CALLA	MAKESND ;IN:A14

	;CHECK IF BARREL IS ALREADY IN THE AIR
	MOVL	*A1(OPLINK),A14
	JRNZ	CHBALREADY

	;MAKE A BARREL WATCHER
	MOVE	A0,A9		;SAVE & SETUP
	MOVE	A1,A8		;SAVE & SETUP
	CREATE	PID_DRAGONE,BARRELPROC ;IN:A8,A9 BARREL,CAR
	MOVL	A0,*A8(OPLINK)
	MOVE	A9,A0		;RESTORE
	MOVE	A8,A1		;RESTORE


CHBALREADY
	;
	;TOSS SLIGHTLY IN DIR CAR HIT IT
	;

	MOVE	A11,A9			;SAVE

	;FIND DIR CAR WAS MOVING
	MOVL	*A0(OCAR),A7
	MOVB	*A7(CDTOTDIR),A10
	MOVI	BARRELHITVEL,A11	;VEL
	CALLA	VECTORTOVELS ;IN:A10,A11 DIR,MAG OUT:A10,A11 X,Z 
	SLL	VELSHIFT,A10
	SLL	VELSHIFT,A11
	MOVL	A10,*A1(OXVEL)		;USE SAVED BARRIER OBJ
	MOVL	A11,*A1(OZVEL)

	MOVE	A9,A11			;UNSAVE
	
	RETS

** 
**
** CARHITLMINE
**
** IN
**   A0 CAR
**   A1 OBJ
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 24 FEB 93
**
CARHITLMINE
	;ALLOW TO DAMAGE MULTIPLE CARS

	;DONT BLOW UP MOM
	MOVL	*A1(OLMINEMOM),A14
	CMP	A14,A0
	JREQ	CHLMX
	MOVE	A14,B0		;WHO GIVES DAMAGE
     	MOVE	A1,B2		;FOR ANIM
	
	;THROW UP LOSER
	MOVL	*A0(OCAR),A7
	MOVK	CCIDLMINE,A2
	CALLA	CARTHROWUP ;IN: A0,A2,A7 OBJ,CCID,CD

	;
	;DAMAGE CAR
	;
	MOVE	A0,A2		;WHO GETS DAMAGE
	MOVK	16,A14		;DAMAGE

	MMTM	SP,A0,A1,A4,A5,A6,A11
	CALLR	TAKEDAMAGE ;IN: A2,A3,A14,B0,B1 CARGET,AREA HIT,DAM,CARGIVE,SC
			   ;OUT: C IF CAR DIED, B1=1 FOR PART OFF,ELSE 0
			   ;SC:	A0-A11

	;
	;START EXPLOSION ANIM
	;
	MOVE	B2,A8		;PARENTOBJ
	MOVI	ASLMINEBOOM,A2
	MOVI	ASICOORDS,A3	;INIT()
	CALLA	ANISPAWNONE	;IN:A2,A3,A4,A5,A7,A8 ASCRIPT,INIT(),
				;SC,SC,SC,PARENTOBJ OUT:A0,A1 OBJ,IHDR


	;
	;SET UP TO KILL MINE
	;
	MOVB	*B2(OCTRL+B_INUSE-7),B0
	JRNN	CHLMNOKILL		;ALREADY ON KILL LIST
	MOVE	B2,A0
	SETF	1,0,0
	MOVE	SP,*A0(OCTRL+B_INUSE),0
	SETF	16,1,0
	MOVI	ASKILL,A14
	MOVL	A14,*A0(ANIMFRM)	
	MOVL	A14,*A0(ANIMSCR)	
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI ;IN:A0

CHLMNOKILL
	MMFM	SP,A0,A1,A4,A5,A6,A11


CHLMX
	RETS


***
*** -----------------------------------------------------------------------
***

**
** RUNNERHITOBJ -- HIT SUBROUTINE
**
** NOTE: STILL MUST DO Y CHECK!!!
** NOTE: BE CAREFUL WHEN DESTROYING AN OBJ AS THIS WILL SCREW UP
**       THE SUPL LIST HIT TEST THING THAT CALLED THIS... BETTER TO
**       SET UP OBJ TO BE KILLED LATER (ASKILL)
**
** IN
**   A0 OBJ
**   A1 RUNNER -- OK TO SCRATCH
**   A2 SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 15 APR 93; FROM CARHITOBJ
**
RUNNERHITOBJ
	MMTM	SP,A0
	SWAP	A1,A0			;RUNNER INTO A0

	;INDEX INTO TBL
	MOVW	*A1(OPARTID),A8
	SLL	AOHSIZEOF,A8
	ADDI	AORUNHITTBL,A8		;USE RUNNER TBL
	.IF DEBUG    
	CMPI	AORUNHITTBLX,A8
	LOCKON	HS
	.ENDIF ;DEBUG

	;CHECK Y NOW
	MOVW	*A0(OYPOS),A2
	MOVW	*A1(OYPOS),A3
	SUB	A2,A3
	ABS	A3
	MOVW	*A8(AOHYMAX),A14
	CMP	A14,A3
	JRGT	RHOX			;Y OUT OF RANGE

	;CALL HANDLER
	MOVL	*A8(AOHCALL),A14
	JRZ	RHOCALLDONE
	CALL	A14 ;IN:A0,A1,A3 CAR,OBJ,AREA SC:A2-A3,A7-A10,B0-B5

RHOCALLDONE

RHOX
	MMFM	SP,A0
	RETS

**
** CARHITOBJ -- HITCAR SUBROUTINE
**
** NOTE: STILL MUST DO Y CHECK!!!
** NOTE: BE CAREFUL WHEN DESTROYING AN OBJ AS THIS WILL SCREW UP
**       THE SUPL LIST HIT TEST THING THAT CALLED THIS... BETTER TO
**       SET UP OBJ TO BE KILLED LATER (ASKILL)
**
** IN
**   A0 CAR
**   A1 OBJ -- OK TO SCRATCH
**   A2 SCRATCH
**   A3 CAR AREA, SCRATCH
** SCRATCH: A2-A3,A7-A10,B0-B5
**
** JFL 23 JUL 92
** JFL 28 JUL 92
** JFL 29 JUL 92
** JFL 24 SEP 92
** JFL 15 NOV 92
** JFL 02 DEC 92
** JFL 28 JAN 93
** JFL 15 APR 93; LABELS CORRECTED
**
CARHITOBJ

	;INDEX INTO TBL
	MOVW	*A1(OPARTID),A8
	SLL	AOHSIZEOF,A8
	ADDI	AOHITTBL,A8
	.IF DEBUG    
	CMPI	AOHITTBLX,A8
	LOCKON	HS
	.ENDIF ;DEBUG

	;CHECK Y NOW
	MOVW	*A0(OYPOS),A2
	MOVW	*A1(OYPOS),A3
	SUB	A2,A3
	ABS	A3
	MOVW	*A8(AOHYMAX),A14
	CMP	A14,A3
	JRGT	CHOX			;Y OUT OF RANGE

	;CALL HANDLER
	MOVL	*A8(AOHCALL),A14
	JRZ	CHOCALLDONE
	CALL	A14 ;IN:A0,A1,A3 CAR,OBJ,AREA SC:A2-A3,A7-A10,B0-B5

CHOCALLDONE

CHOX
	RETS

**
** CARHITAOLOBJ
**
** IN
**   A0 OBJ
**   A3 AOL OBJ, SCRATCH
**   A2-A4,A10-A11 SCRATCH
**   A6 TRACKINFOPOINT PTR
**
** JFL 28 JAN 93
**
CARHITAOLOBJ
	MMTM	SP,A1,A7,A8,A9
	MOVE	A3,A1
	CLR	A3
	CALLR	CARHITOBJ ;IN:A0,A1,A2,A3,A7-A10 CAR,OBJ,SC,CARAREA,SC
	MMFM	SP,A1,A7,A8,A9
	RETS

***
*** ----------------------------------------------------------------------
***

**
** ARENA OBJ HIT STRUCTURE
**
** JFL 24 SEP 92
**
AOHCALL		EQU	000H	;UHL FUNCTION TO CALL
AOHXXX3		EQU	020H	;UHW
AOHYMAX		EQU	030H	;UHW HITYMAX
AOHSIZE		EQU	080H	; SIZE
AOHSIZEOF	EQU	6	;SHIFT AMOUNT

**
** ARENA OBJ HIT TABLE
** SEE DRO.I FOR OBJECT IDS
**
** NOTE:
** !! UPDATE AORUNHITTBL ALSO !!
** IF NO ANIMATION, OBJECT WILL NOT BE DESTROYED
**
** JFL 24 SEP 92
** JFL 01 FEB 93; SHORTENED TO 2 LONGS
** JFL 14 APR 93; LMINE ICON
**
AOHITTBL
	;NOT USED
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX
	
	;ARROW
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;FLAG
	.LONG	CARHITFLAG		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYFLAG		;HITYMAX

	;TREE
	.LONG	CARHITTREE		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYTREE		;HITYMAX

	;POLE
	.LONG	CARHITPOLE		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYPOLE		;HITYMAX

	;MISSILE
	.LONG	CARHITMISSILE		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYMISSILE		;HITYMAX

	;ICON
	.LONG	CARHITMISLICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITMONEYBAGICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITHEALTHICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITTURBOICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITSMARTBOMBICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITDETONATEICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITLMINEICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;BARREL
	.LONG	CARHITBARREL		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYBARREL		;HITYMAX

	;LMINE
	.LONG	CARHITLMINE		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYLMINE		;HITYMAX

AOHITTBLX


**
** ARENA OBJ RUNNER HIT TABLE
** SEE DRO.I FOR OBJECT IDS
**
** NOTE:
** !! UPDATE AOHITTBL ALSO !!
** IF NO ANIMATION, OBJECT WILL NOT BE DESTROYED
**
** JFL 15 APR 93
**
AORUNHITTBL
	;NOT USED
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX
	
	;ARROW
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;FLAG
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;TREE
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;POLE
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;MISSILE
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;ICON
	.LONG	CARHITMISLICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITMONEYBAGICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITHEALTHICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITTURBOICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITSMARTBOMBICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITDETONATEICON	;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;ICON
	.LONG	CARHITLMINEICON		;FUNC
	.WORD	0			;XXX3
	.WORD	HITYICON		;HITYMAX

	;BARREL
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

	;LMINE
	.LONG	0			;FUNC
	.WORD	0			;XXX3
	.WORD	0			;HITYMAX

AORUNHITTBLX

***
*** ----------------------------------------------------------------------
***

**
** SETOBJSCALE
**  A8 OBJ
**
** JFL 13 SEP 92
** JFL 28 SEP 92; NEW SCRATCH
** JFL 02 OCT 92; CRAZY SCALE
** JFL 30 OCT 92; NEW SCALE
** JFL 10 FEB 93
**
SETOBJSCALE
	MMTM	SP,A1,A5

	;HOW DO WE HANDLE THE SCALE
	MOVW	*A8(OSCALETYPE),A14
	JRNZ	SOSGETSCALE

	;NO SCALE
	MOVI	SCALE1TO1,A2
	MOVW	A2,*A8(OSCALEMUL)
	MOVL	A2,*A8(OSCALEDMA)
	MOVL	*A8(OUSIZE),*A8(OSIZE)
	MOVL	*A8(OUANIOFF),*A8(OANIOFF)
	JRUC	SOSX

SOSGETSCALE
	;GET SCALE FACTOR FOR THIS POSITION
	MOVL	*A8(OZVAL),A3

	MOVE	A8,A2
	CALLA	GETSCALE ;IN: A2,A3,A14 OBJ,OZVAL,OSCALETYPE
			 ;OUT:A2 OSCALEDMA:OSCALEMUL

	MOVW	A2,*A8(OSCALEMUL)
	MOVE	A2,A3
	SRL	16,A3		;ISOLATE DMASCALE
	MOVY	A2,A3		;FORM DMASCALE:DMASCALE
	MOVL	A3,*A8(OSCALEDMA)
	ZEXT	A2,W		;ISOLATE SCALE

	;
	;SCALE PTS
	;A2 HAS SCALE FACTOR
	;
	MOVL	*A8(OUSIZE),A1		;UNSCALED Y:X SIZ
	MOVL	*A8(OUANIOFF),A5	;UNSCALED Y:X ANIM OFFSET
	SETF	12,1,1			;FS1 Rs MAX BIT SIZE FOR MULTIPLIES

	;SCALE SIZ
	CLR	A3		  	;
	MOVX	A1,A3			;GET X SIZ
	MPYU	A2,A3		  	;A11 = X SIZ * SCALE 
	SRL	MPYSCALE,A3		;SCALE IS 100H BASE
	SRL	MPYSCALE,A1		;SCALE IS 100H BASE
	MPYU	A2,A1			;A1 = Y SIZ * SCALE
	MOVX	A3,A1			;A1 = SCALED Y:X SIZ 

	;SCALE ANI
	MOVE	A5,A3			;GET UNSCALED Y:X ANI
	SEXT	A5,W			;READY FOR 32 BIT SIGNED MULT OF X
	MPYS	A2,A5		  	;X ANI * SCALE
	SRA	MPYSCALE,A5		;SCALE IS 100H BASE
	SRA	16,A3			;SHIFT DOWN Y ANIM -- MAINTAIN SIGN
	MPYS	A2,A3			;Y ANIM * SCALE
	SLL	16-MPYSCALE,A3		;SCALE IS 100H BASE
	MOVX	A5,A3			;SCALED Y:X ANIM

	;SAVE RESULTS
	SETF	32,1,1			;RESTORE FS1
	MOVL	A1,*A8(OSIZE)		;SAVE SCALED Y:X SIZ
	MOVL	A3,*A8(OANIOFF)		;SAVE SCALED Y:X ANI

SOSX
	MMFM	SP,A1,A5
	RETS



***
*** WHO HIT WHOM STUFF ----------------------------------------------------
***

**
** WHADD
**
** A0 OBJ0
** A1 OBJ1
** A3 [AREA1,AREA0]
**
** JFL 19 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 07 DEC 92
**
WHADD
	MMTM	SP,A4
	MOVK	WHMAX,A4
	MOVI	WHOSHIT,A2
WHALOOP
	MOVL	*A2(WHA),A14
	JRNZ	WHATRYNEXT

	;FOUND EMPTY, USE IT
	MOVL	A0,*A2(WHA)
	MOVL	A1,*A2(WHB)
	MOVK	STAYHITTIME,A14
	MOVW	A14,*A2(WHTIME)
	MOVL	A3,*A2(WHHITAREAS)
	CLR	A14
	MOVW	A14,*A2(WHCOUNT)
	JRUC	WHAX
	
WHATRYNEXT
	ADDI	WHSIZE,A2
	DSJS	A4,WHALOOP
WHAX
	MMFM	SP,A4
	RETS

**
** WHCHECK
**
** A0 OBJ0
** A1 OBJ1
**
** RETURN EQ ON MATCH
**
** JFL 19 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
**
WHCHECK
	MMTM	SP,A4,A5,A6
	MOVK	WHMAX,A4
	MOVI	WHOSHIT,A2
WHCLOOP
	MOVE	*A2(WHA),A14,L
	JRZ	WHCTRYNEXT

	;FOUND NON-EMPTY, TRY IT
	MOVE	*A2(WHA),A5,L
	MOVE	*A2(WHB),A6,L
	
	CMP	A0,A5
	JRNE	WHCT2
	CMP	A1,A6
	JREQ	WHCX
	JRUC	WHCTRYNEXT
WHCT2
	CMP	A1,A5
	JRNE	WHCTRYNEXT
	CMP	A0,A6
	JREQ	WHCX			;MATCH, EXIT WITH EQ

WHCTRYNEXT
	ADDI	WHSIZE,A2
	DSJS	A4,WHCLOOP
	CMP	A0,A1			;FORCE NE
WHCX
	MMFM	SP,A4,A5,A6
	RETS

**
** WHCHECKMANY
**
**  A0 OBJ0
**  A1 OBJ1
** RETURNS
**  A2 NUMBER OF HITS
**
** RETURN NE ON MATCH
**
** JFL 19 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 11 OCT 92
** JFL 23 DEC 92
**
WHCHECKMANY
	MMTM	SP,A4,A5,A6
	CLR	A5			;ZERO MATCH COUNT
	MOVK	WHMAX,A4
	MOVI	WHOSHIT,A2
WHCMLOOP
	MOVL	*A2(WHA),A14
	JRZ	WHCMTRYNEXT

	;FOUND NON-EMPTY, TRY IT
	MOVL	*A2(WHA),A5
	MOVL	*A2(WHB),A6
	
	CMP	A0,A5
	JRNE	WHCMT2
	CMP	A1,A6
	JREQ	WHCMMAYBE
	JRUC	WHCMTRYNEXTRESET
WHCMT2
	CMP	A1,A5
	JRNE	WHCMTRYNEXTRESET
	CMP	A0,A6
	JRNE	WHCMTRYNEXTRESET
WHCMMAYBE
	MOVW	*A2(WHCOUNT),A5
	INC	A5
	MOVW	A5,*A2(WHCOUNT)
	JRUC	WHCMX

WHCMTRYNEXTRESET
	CLR	A5
WHCMTRYNEXT
	ADDI	WHSIZE,A2
	DSJ	A4,WHCMLOOP
WHCMX
	MOVE	A5,A2
	MMFM	SP,A4,A5,A6
	RETS
		  
**
** WHCHECKFRAME
**
** A0 OBJ0
** A1 OBJ1
**
** RETURN EQ ON MATCH
**
** JFL 20 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
**
WHCHECKFRAME
	MMTM	SP,A4,A5,A6
	MOVK	WHMAX,A4
	MOVI	WHOSHIT,A2
WHCFLOOP
	MOVL	*A2(WHA),A14
	JRZ	WHCFTRYNEXT

	;FOUND NON-EMPTY, TRY IT
	MOVL	*A2(WHA),A5
	MOVL	*A2(WHB),A6
	
	CMP	A0,A5
	JRNE	WHCFT2
	CMP	A1,A6
	JREQ	WHCFMAYBE
	JRUC	WHCFTRYNEXT
WHCFT2
	CMP	A1,A5
	JRNE	WHCFTRYNEXT
	CMP	A0,A6
	JRNE	WHCFTRYNEXT
WHCFMAYBE
	MOVW	*A2(WHTIME),A14
	CMPI	STAYHITTIME,A14
	JRUC	WHCFX			;LEAVE EQ OR NE IN STATUS

WHCFTRYNEXT
	ADDI	WHSIZE,A2
	DSJS	A4,WHCFLOOP
	CMP	A0,A1			;FORCE NE
WHCFX
	MMFM	SP,A4,A5,A6
	RETS

**
** WHRESET
**
**  A0 OBJx
**  A1 OBJy
** RETURNS
**  A0 OBJ0
**  A1 OBJ1
**  A3 AREA1:AREA0
**
** JFL 20 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 07 DEC 92
**
WHRESET
	MMTM	SP,A2,A4,A6
	MOVK	WHMAX,A4
	MOVI	WHOSHIT,A2
WHRLOOP
	MOVE	*A2(WHA),A14,L
	JRZ	WHRTRYNEXT

	;FOUND NON-EMPTY, TRY IT
	MOVE	*A2(WHA),A5,L
	MOVE	*A2(WHB),A6,L
	
	CMP	A0,A5
	JRNE	WHRT2
	CMP	A1,A6
	JREQ	WHRFOUND
	JRUC	WHRTRYNEXT
WHRT2
	CMP	A1,A5
	JRNE	WHRTRYNEXT
	CMP	A0,A6
	JRNE	WHRTRYNEXT
WHRFOUND
	MOVK	STAYHITTIME,A14
	MOVE	A14,*A2(WHTIME),W
	MOVE	*A2(WHA),A0,L
	MOVE	*A2(WHB),A1,L
	MOVL	*A2(WHHITAREAS),A3
	JRUC	WHRX

WHRTRYNEXT
	ADDI	WHSIZE,A2
	DSJ	A4,WHRLOOP
	CMP	A0,A1			;FORCE NE
WHRX
	MMFM	SP,A2,A4,A6
	RETS

**
** WHUPDATE
**
** JFL 19 AUG 92
** JFL 18 SEP 92; SCRATCH A2,A3,A14,B0-B5
** JFL 28 SEP 92
** JFL 29 OCT 92
**
BEFOREHITTEST
WHUPDATE
	MOVK	WHMAX,A3
	MOVI	WHOSHIT,A2
WHULOOP
	MOVL	*A2(WHA),A14
	JRZ	WHUTRYNEXT

	;FOUND NON-EMPTY, DEC TIME
	MOVW	*A2(WHTIME),A14
	DEC	A14
	MOVW	A14,*A2(WHTIME)
	JRP	WHUTRYNEXT
	MOVL	A14,*A2(WHA)
	
WHUTRYNEXT
	ADDI	WHSIZE,A2
	DSJS	A3,WHULOOP
WHUX
	RETS

***
*** SCALE STUFF -----------------------------------------------------------
***

**
** INITARENASCALE
**
** IN
**   A2 ARENASCALETBL
**
** JFL 10 DEC 92
**
INITARENASCALE
	MOVI	(ASTSIZE*ASTMAX)/16,A14
	MOVI	ARENASCALETBL,A3
IASLOOP
	MOVW	*A2+,*A3+
	DSJ	A14,IASLOOP
	
	RETS


ZMINMAC	.MACRO	MINWIDTH
	.ASG	0,CURSIZE	
	.LOOP	32
	.EVAL	CURSIZE*100H/:MINWIDTH:,DMASVAL
	.IF	DMASVAL<1
	.WORD	0,0
	.ELSE
	.WORD	10000H/DMASVAL,DMASVAL
	.ENDIF
	.EVAL	CURSIZE+1,CURSIZE
	.ENDLOOP
	.ENDM

**
** ZMINTBL
**
** INDEX BY GRAPHIC WIDTH
** .LONG SCALEDMA:SCALEMUL
**
** JFL 14 MAR 93
**
ZMINTBL
	ZMINMAC	6
ZMINTBLX

**
** SETZMIN
** 
** IN
**   A0 OBJ
**
** JFL 14 MAR 93
**
SETZMIN
	MOVW	*A0(OUSIZEX),A14
	SLL	5,A14
	ADDI	ZMINTBL,A14
	CMPI	ZMINTBLX,A14
	JRHS	SZMBIG

	MOVL	*A14(0),*A0(OSCALEMIN)
	
	MOVK	STYPZMIN,A14
	MOVW	A14,*A0(OSCALETYPE)
	JRUC	SZMX

SZMBIG
	;OBJ WILL NEVER SCALE SMALL ENOUGH TO MATTER...
	MOVK	STYPZ,A14
	MOVW	A14,*A0(OSCALETYPE)
SZMX
	RETS

SL_STYPZOFF	EQU	32-15
SR_STYPZOFF	EQU	32-15

**
** GETSCALE
**
** IN
**   A2 OBJ
**   A3 OZVAL
**  A14 OSCALETYPE
** OUT
**   A2 OSCALEDMA:OSCALEMUL
** 
** JFL 30 OCT 92
** JFL 17 NOV 92; ALL CONTIGUOUS
** JFL 10 DEC 92; ARENA DEPENDENT
** JFL 14 MAR 93; Z MIN SCALE TYPE
**
GETSCALE
	.IF NOSCALE
	MOVI	SCALE1TO1,A2
	RETS
	.ENDIF ;NOSCALE

	MOVE	A14,A14
	JRN	GSZOFF

	SLL	4,A14			;SIZEOF JUMP TBL
	ADDI	GSJUMPTBL,A14
	JUMP	A14

GSZOFF
	;	
	;OFFSET FROM Z
	;
	SLL	SL_STYPZOFF,A14
	SRA	SR_STYPZOFF,A14
	MOVL	@ARENASCALETBL+ASTZOFF,A2	;TBL START
	SRA	16,A3
	ADD	A14,A3
	JRNN	GS1NN				;GROW TO 1TO1

	;FIRST ENTRY FROM TBL
	MOVL	*A2,A2				;FIRST
	RETS

	;	
	;BASED ENTIRELY ON Z
	;
GSZ
	MOVL	@ARENASCALETBL+ASTZ,A2	;TBL START
	SRA	16,A3 			;ISOLATE INTEGER Z
	JRNN	GSZNN
	MOVL	*A2,A2			;FIRST ENTRY
	RETS
GSZNN
	SLL	SCLSIZEOF,A3		;SIZEOF SCALETBL ENTRY
	ADD	A2,A3			;ADD IN TBL START
	MOVL	@ARENASCALETBL+ASTZ+ASTEND,A2 ;END OF TBL
	CMP	A2,A3
	JRLE	GSLOOKUP
	MOVL	*A2,A2			;LOOKUP	LAST
	RETS
GSLOOKUP
	MOVL	*A3,A2			;LOOKUP
	RETS

GSNOSCALE
	;
	;NO SCALE -- SHOULDNT BE CALLED
	;
	LOCKUP

	;
	;GROW TO MAX
	;
GSGROWMAX
	MOVW	*A2(OGROW),A14
	INC	A14
	MOVW	A14,*A2(OGROW)
	MOVL	@ARENASCALETBL+ASTGROWMAX,A2	;TBL START
	SRA	16,A3 				;ISOLATE INTEGER Z
	ADD	A14,A3
	JRNN	GSGNN
	MOVL	*A2,A2				;FIRST
	RETS
GSGNN
	SLL	SCLSIZEOF,A3			;SIZEOF ZSCALETBL ENTRY
	ADD	A2,A3				;ADD IN TBL START
	MOVL	@ARENASCALETBL+ASTGROWMAX+ASTEND,A2 ;END OF TBL
	CMP	A2,A3
	JRLE	GSLOOKUP
	MOVL	*A2,A2				;LAST
	RETS

GSGROW1TO1
	;
	;GROW TO 1:1
	;
	MOVW	*A2(OGROW),A14
	INC	A14
	MOVW	A14,*A2(OGROW)
	MOVL	@ARENASCALETBL+ASTGROW1TO1,A2	;TBL START
	SRA	16,A3 				;ISOLATE INTEGER Z
	ADD	A14,A3
	JRNN	GS1NN
	MOVL	*A2,A2				;FIRST
	RETS
GS1NN
	SLL	SCLSIZEOF,A3			;SIZEOF ZSCALETBL ENTRY
	ADD	A2,A3				;ADD IN TBL START
	MOVL	@ARENASCALETBL+ASTGROW1TO1+ASTEND,A2 ;END OF TBL
	CMP	A2,A3
	JRLE	GSLOOKUP
	MOVL	*A2,A2				;LAST
	RETS


GSJUMPTBL
	JRUC	GSNOSCALE
	JRUC	GSZ
	JRUC	GSGROWMAX
	JRUC	GSGROW1TO1
	JRUC	GSYZ
	JRUC	GSZMIN
	NOP
	
	;
	;FIGURE SCALE BASED ON YZ
	;
GSYZ
	SRA	16,A3 			;ISOLATE INTEGER Z
	MOVW	*A2(OYPOS),A14
	MOVL	@ARENASCALETBL+ASTYZ,A2	;TBL START
	NEG	A14
	SLL	1,A14			;Y CONTRIBUTES 2X
	ADD	A14,A3
	JRNN	GSYZNN
	MOVL	*A2,A2			;FIRST
	RETS
GSYZNN
	SLL	SCLSIZEOF,A3			;SIZEOF ZSCALETBL ENTRY
	ADD	A2,A3				;ADD IN TBL START
	MOVL	@ARENASCALETBL+ASTYZ+ASTEND,A2 ;END OF TBL
	CMP	A2,A3
	JRLE	GSLOOKUP
	MOVL	*A2,A2				;LAST
	RETS

	;	
	;BASED ENTIRELY ON Z -- WITH MIN SCALE CHECK
	;
GSZMIN
	MOVL	*A2(OSCALEMIN),A14	;GET SCALE MIN DMA:MUL
	MOVL	@ARENASCALETBL+ASTZ,A2	;TBL START
	SRA	16,A3 			;ISOLATE INTEGER Z
	JRNN	GSZMNN
	MOVL	*A2,A2			;FIRST ENTRY -- NO CHECK NECESSARY
	RETS
GSZMNN
	SLL	SCLSIZEOF,A3		;SIZEOF SCALETBL ENTRY
	ADD	A2,A3			;ADD IN TBL START
	MOVL	@ARENASCALETBL+ASTZ+ASTEND,A2 ;END OF TBL
	CMP	A2,A3
	JRLE	GSZMLOOKUP
	MOVL	*A2,A2			;LOOKUP	LAST
	CMPXY	A14,A2
	JRXGE	GSZMUSE			;ITS OK
	MOVE	A14,A2			;NOT OK, USE MIN
GSZMUSE
	RETS
GSZMLOOKUP
	MOVL	*A3,A2			;LOOKUP
	CMPXY	A14,A2
	JRXGE	GSZMUSE			;ITS OK
	MOVE	A14,A2			;NOT OK, USE MIN
	RETS

***
*** ----------------------- SCALE TBL ----------------------------------
***

**
** ARENA SCALE TBL -- SEE DRT.I FOR STRUCT
**
** JFL 10 DEC 92
**
ARSCALETBLRACE
	.LONG	SCALETBLRACE,GROW1TO1TBLXRACE-32	;STYPZOFF
	.LONG	SCALETBLRACE,ZSCALETBLXRACE-32		;STYPZ
	.LONG	SCALETBLRACE,GROWMAXTBLXRACE-32		;STYPGROWMAX
	.LONG	SCALETBLRACE,GROW1TO1TBLXRACE-32	;STYPGROW1TO1
	.LONG	SCALETBLRACE,YZSCALETBLXRACE-32		;STYPYZ


SCALETBLRACE

	;a 166.000000 inc 0.443350
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H

	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A7H,188H
	.WORD 0A7H,188H
	.WORD 0A8H,184H
	.WORD 0A8H,184H
	.WORD 0A9H,180H
	.WORD 0A9H,180H
	.WORD 0A9H,180H
	.WORD 0AAH,180H
	.WORD 0AAH,180H
	.WORD 0ABH,17CH
	.WORD 0ABH,17CH
	.WORD 0ACH,17CH
	.WORD 0ACH,17CH
	.WORD 0ADH,178H
	.WORD 0ADH,178H
	.WORD 0ADH,178H
	.WORD 0AEH,178H
	.WORD 0AEH,178H
	.WORD 0AFH,174H
	.WORD 0AFH,174H
	.WORD 0B0H,174H
	.WORD 0B0H,174H
	.WORD 0B1H,170H
	.WORD 0B1H,170H
	.WORD 0B1H,170H
	.WORD 0B2H,170H
	.WORD 0B2H,170H
	.WORD 0B3H,16CH
	.WORD 0B3H,16CH
	.WORD 0B4H,16CH
	.WORD 0B4H,16CH
	.WORD 0B5H,168H
	.WORD 0B5H,168H
	.WORD 0B5H,168H
	.WORD 0B6H,168H
	.WORD 0B6H,168H
	.WORD 0B7H,164H
	.WORD 0B7H,164H
	.WORD 0B8H,164H
	.WORD 0B8H,164H
	.WORD 0B9H,160H
	.WORD 0B9H,160H
	.WORD 0B9H,160H
	.WORD 0BAH,160H
	.WORD 0BAH,160H
	.WORD 0BBH,15CH
	.WORD 0BBH,15CH
	.WORD 0BCH,15CH
	.WORD 0BCH,15CH
	.WORD 0BDH,158H
	.WORD 0BDH,158H
	.WORD 0BDH,158H
	.WORD 0BEH,158H
	.WORD 0BEH,158H
	.WORD 0BFH,154H
	.WORD 0BFH,154H
	.WORD 0C0H,154H
	.WORD 0C0H,154H
	.WORD 0C1H,150H
	.WORD 0C1H,150H
	.WORD 0C1H,150H
	.WORD 0C2H,150H
	.WORD 0C2H,150H
	.WORD 0C3H,150H
	.WORD 0C3H,150H
	.WORD 0C4H,14CH
	.WORD 0C4H,14CH
	.WORD 0C5H,14CH
	.WORD 0C5H,14CH
	.WORD 0C5H,14CH
	.WORD 0C6H,148H
	.WORD 0C6H,148H
	.WORD 0C7H,148H
	.WORD 0C7H,148H
	.WORD 0C8H,144H
	.WORD 0C8H,144H
	.WORD 0C9H,144H
	.WORD 0C9H,144H
	.WORD 0C9H,144H
	.WORD 0CAH,144H
	.WORD 0CAH,144H
	.WORD 0CBH,140H
	.WORD 0CBH,140H
	.WORD 0CCH,140H
	.WORD 0CCH,140H
	.WORD 0CDH,13CH
	.WORD 0CDH,13CH
	.WORD 0CDH,13CH
	.WORD 0CEH,13CH
	.WORD 0CEH,13CH
	.WORD 0CFH,13CH
	.WORD 0CFH,13CH
	.WORD 0D0H,138H
	.WORD 0D0H,138H
	.WORD 0D1H,138H
	.WORD 0D1H,138H
	.WORD 0D1H,138H
	.WORD 0D2H,138H
	.WORD 0D2H,138H
	.WORD 0D3H,134H
	.WORD 0D3H,134H
	.WORD 0D4H,134H
	.WORD 0D4H,134H
	.WORD 0D4H,134H
	.WORD 0D5H,130H
	.WORD 0D5H,130H
	.WORD 0D6H,130H
	.WORD 0D6H,130H
	.WORD 0D7H,130H
	.WORD 0D7H,130H
	.WORD 0D8H,12CH
	.WORD 0D8H,12CH
	.WORD 0D8H,12CH
	.WORD 0D9H,12CH
	.WORD 0D9H,12CH
	.WORD 0DAH,12CH
	.WORD 0DAH,12CH
	.WORD 0DBH,128H
	.WORD 0DBH,128H
	.WORD 0DCH,128H
	.WORD 0DCH,128H
	.WORD 0DCH,128H
	.WORD 0DDH,128H
	.WORD 0DDH,128H
	.WORD 0DEH,124H
	.WORD 0DEH,124H
	.WORD 0DFH,124H
	.WORD 0DFH,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E1H,120H
	.WORD 0E1H,120H
	.WORD 0E2H,120H
	.WORD 0E2H,120H
	.WORD 0E3H,120H
	.WORD 0E3H,120H
	.WORD 0E4H,11CH
	.WORD 0E4H,11CH
	.WORD 0E4H,11CH
	.WORD 0E5H,11CH
	.WORD 0E5H,11CH
	.WORD 0E6H,11CH
	.WORD 0E6H,11CH
	.WORD 0E7H,118H
	.WORD 0E7H,118H
	.WORD 0E8H,118H
	.WORD 0E8H,118H
	.WORD 0E8H,118H
	.WORD 0E9H,118H
	.WORD 0E9H,118H
	.WORD 0EAH,118H
	.WORD 0EAH,118H
	.WORD 0EBH,114H
	.WORD 0EBH,114H
	.WORD 0ECH,114H
	.WORD 0ECH,114H
	.WORD 0ECH,114H
	.WORD 0EDH,114H
	.WORD 0EDH,114H
	.WORD 0EEH,110H
	.WORD 0EEH,110H
	.WORD 0EFH,110H
	.WORD 0EFH,110H
	.WORD 0F0H,110H
	.WORD 0F0H,110H
	.WORD 0F0H,110H
	.WORD 0F1H,10CH
	.WORD 0F1H,10CH
	.WORD 0F2H,10CH
	.WORD 0F2H,10CH
	.WORD 0F3H,10CH
	.WORD 0F3H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F5H,108H
	.WORD 0F5H,108H
	.WORD 0F6H,108H
	.WORD 0F6H,108H
	.WORD 0F7H,108H
	.WORD 0F7H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F9H,104H
	.WORD 0F9H,104H
	.WORD 0FAH,104H
	.WORD 0FAH,104H
	.WORD 0FBH,104H
	.WORD 0FBH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FDH,100H
	.WORD 0FDH,100H
	.WORD 0FEH,100H
	.WORD 0FEH,100H
	.WORD 0FFH,100H
	.WORD 0FFH,100H

	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H
	.WORD 100H,100H

ZSCALETBLXRACE
GROW1TO1TBLXRACE
YZSCALETBLXRACE
	.WORD 104H,0FCH
	.WORD 108H,0F8H
	.WORD 10CH,0F4H
	.WORD 110H,0F0H
	.WORD 114H,0EDH
	.WORD 118H,0EAH
	.WORD 11CH,0E6H
	.WORD 120H,0E3H
	.WORD 124H,0E0H
	.WORD 128H,0DDH
	.WORD 12CH,0DAH
	.WORD 130H,0D7H
	.WORD 130H,0D7H
	.WORD 134H,0D4H
	.WORD 138H,0D2H
	.WORD 13CH,0CFH
	.WORD 140H,0CCH
	.WORD 144H,0CAH
	.WORD 148H,0C7H
	.WORD 14CH,0C5H
	.WORD 150H,0C3H
	.WORD 154H,0C0H
	.WORD 158H,0BEH
	.WORD 15CH,0BCH
	.WORD 160H,0BAH
	.WORD 164H,0B8H
	.WORD 168H,0B6H
	.WORD 16CH,0B4H
	.WORD 16CH,0B4H
	.WORD 170H,0B2H
	.WORD 174H,0B0H
	.WORD 178H,0AEH
	.WORD 17CH,0ACH
	.WORD 180H,0AAH
	.WORD 184H,0A8H
	.WORD 188H,0A7H
	.WORD 18CH,0A5H
	.WORD 190H,0A3H
	.WORD 194H,0A2H
	.WORD 198H,0A0H
	.WORD 19CH,09FH
	.WORD 1A0H,09DH
	.WORD 1A4H,09CH
	.WORD 1A8H,09AH
	.WORD 1A8H,09AH
	.WORD 1ACH,099H
	.WORD 1B0H,097H
	.WORD 1B4H,096H
	.WORD 1B8H,094H
	.WORD 1BCH,093H
	.WORD 1C0H,092H
	.WORD 1C4H,090H
	.WORD 1C8H,08FH
	.WORD 1CCH,08EH
	.WORD 1D0H,08DH
	.WORD 1D4H,08CH
	.WORD 1D8H,08AH
	.WORD 1DCH,089H
	.WORD 1E0H,088H
	.WORD 1E4H,087H
	.WORD 1E4H,087H
	.WORD 1E8H,086H
	.WORD 1ECH,085H
	.WORD 1F0H,084H
	.WORD 1F4H,083H
	.WORD 1F8H,082H
	.WORD 1FCH,081H
	.WORD 200H,080H
	.WORD 204H,07FH
	.WORD 208H,07EH
	.WORD 20CH,07DH
	.WORD 210H,07CH
	.WORD 214H,07BH
	.WORD 218H,07AH
	.WORD 21CH,079H
	.WORD 220H,078H
	.WORD 220H,078H
	.WORD 224H,077H
	.WORD 228H,076H
	.WORD 22CH,075H
	.WORD 230H,075H
	.WORD 234H,074H
	.WORD 238H,073H
	.WORD 23CH,072H
	.WORD 240H,071H
	.WORD 244H,070H
	.WORD 248H,070H
	.WORD 24CH,06FH
	.WORD 250H,06EH
	.WORD 254H,06DH
	.WORD 258H,06DH
	.WORD 25CH,06CH
	.WORD 25CH,06CH
	.WORD 260H,06BH
	.WORD 264H,06BH
	.WORD 268H,06AH
	.WORD 26CH,069H
	.WORD 270H,069H
	.WORD 274H,068H
	.WORD 278H,067H
	.WORD 27CH,067H
	.WORD 280H,066H
	.WORD 284H,065H
	.WORD 288H,065H
	.WORD 28CH,064H
	.WORD 290H,063H
	.WORD 294H,063H
	.WORD 298H,062H
	.WORD 298H,062H
	.WORD 29CH,062H
	.WORD 2A0H,061H
	.WORD 2A4H,060H
	.WORD 2A8H,060H
	.WORD 2ACH,05FH
	.WORD 2B0H,05FH
	.WORD 2B4H,05EH
	.WORD 2B8H,05EH
	.WORD 2BCH,05DH
	.WORD 2C0H,05DH
	.WORD 2C4H,05CH
	.WORD 2C8H,05CH
	.WORD 2CCH,05BH
	.WORD 2D0H,05BH
	.WORD 2D4H,05AH
	.WORD 2D4H,05AH
	.WORD 2D8H,05AH
	.WORD 2DCH,059H
	.WORD 2E0H,059H
	.WORD 2E4H,058H
	.WORD 2E8H,058H
	.WORD 2ECH,057H
	.WORD 2F0H,057H
	.WORD 2F4H,056H
	.WORD 2F8H,056H
	.WORD 2FCH,055H
	.WORD 300H,055H
	.WORD 304H,054H
	.WORD 308H,054H
	.WORD 30CH,054H
	.WORD 310H,053H
	.WORD 310H,053H
	.WORD 314H,053H
	.WORD 318H,052H
	.WORD 31CH,052H
	.WORD 320H,051H
	.WORD 324H,051H
	.WORD 328H,051H
	.WORD 32CH,050H
	.WORD 330H,050H
	.WORD 334H,04FH
	.WORD 338H,04FH
	.WORD 33CH,04FH
	.WORD 340H,04EH
	.WORD 344H,04EH
	.WORD 348H,04EH
	.WORD 34CH,04DH
	.WORD 34CH,04DH
	.WORD 350H,04DH
	.WORD 354H,04CH
	.WORD 358H,04CH
	.WORD 35CH,04CH
	.WORD 360H,04BH
	.WORD 364H,04BH
	.WORD 368H,04BH
	.WORD 36CH,04AH
	.WORD 370H,04AH
	.WORD 374H,04AH
	.WORD 378H,049H
	.WORD 37CH,049H
	.WORD 380H,049H
	.WORD 384H,048H
	.WORD 388H,048H
	.WORD 388H,048H
	.WORD 38CH,048H
	.WORD 390H,047H
	.WORD 394H,047H
	.WORD 398H,047H
	.WORD 39CH,046H
	.WORD 3A0H,046H
	.WORD 3A4H,046H
	.WORD 3A8H,046H
	.WORD 3ACH,045H
	.WORD 3B0H,045H
	.WORD 3B4H,045H
	.WORD 3B8H,044H
	.WORD 3BCH,044H
	.WORD 3C0H,044H
	.WORD 3C4H,043H
	.WORD 3C4H,043H
	.WORD 3C8H,043H
	.WORD 3CCH,043H
	.WORD 3D0H,043H
	.WORD 3D4H,042H
	.WORD 3D8H,042H
	.WORD 3DCH,042H
	.WORD 3E0H,042H
	.WORD 3E4H,041H
	.WORD 3E8H,041H
	.WORD 3ECH,041H
	.WORD 3F0H,041H
	.WORD 3F4H,040H
	.WORD 3F8H,040H
	.WORD 3FCH,040H
GROWMAXTBLXRACE

	.IF 0 ;--------- DEAD -------------------
SCALETBLRACE
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 040H,400H
	.WORD 041H,3F0H
	.WORD 042H,3E0H
	.WORD 042H,3E0H
	.WORD 043H,3D0H
	.WORD 044H,3C0H
	.WORD 044H,3C0H
	.WORD 045H,3B4H
	.WORD 046H,3A8H
	.WORD 046H,3A8H
	.WORD 047H,398H
	.WORD 048H,38CH
	.WORD 048H,38CH
	.WORD 049H,380H
	.WORD 04AH,374H
	.WORD 04AH,374H
	.WORD 04BH,368H
	.WORD 04CH,35CH
	.WORD 04CH,35CH
	.WORD 04DH,350H
	.WORD 04EH,348H
	.WORD 04EH,348H
	.WORD 04FH,33CH
	.WORD 050H,330H
	.WORD 050H,330H
	.WORD 051H,328H
	.WORD 052H,31CH
	.WORD 052H,31CH
	.WORD 053H,314H
	.WORD 054H,30CH
	.WORD 055H,300H
	.WORD 055H,300H
	.WORD 056H,2F8H
	.WORD 057H,2F0H
	.WORD 057H,2F0H
	.WORD 058H,2E8H
	.WORD 059H,2E0H
	.WORD 059H,2E0H
	.WORD 05AH,2D8H
	.WORD 05BH,2D0H
	.WORD 05BH,2D0H
	.WORD 05CH,2C8H
	.WORD 05DH,2C0H
	.WORD 05DH,2C0H
	.WORD 05EH,2B8H
	.WORD 05FH,2B0H
	.WORD 05FH,2B0H
	.WORD 060H,2A8H
	.WORD 061H,2A0H
	.WORD 061H,2A0H
	.WORD 062H,29CH
	.WORD 063H,294H
	.WORD 063H,294H
	.WORD 064H,28CH
	.WORD 065H,288H
	.WORD 065H,288H
	.WORD 066H,280H
	.WORD 067H,27CH
	.WORD 067H,27CH
	.WORD 068H,274H
	.WORD 069H,270H
	.WORD 069H,270H
	.WORD 06AH,268H
	.WORD 06BH,264H
	.WORD 06BH,264H
	.WORD 06CH,25CH
	.WORD 06DH,258H
	.WORD 06EH,250H
	.WORD 06EH,250H
	.WORD 06FH,24CH
	.WORD 070H,248H
	.WORD 070H,248H
	.WORD 071H,240H
	.WORD 072H,23CH
	.WORD 072H,23CH
	.WORD 073H,238H
	.WORD 074H,234H
	.WORD 074H,234H
	.WORD 075H,230H
	.WORD 076H,228H
	.WORD 076H,228H
	.WORD 077H,224H
	.WORD 078H,220H
	.WORD 078H,220H
	.WORD 079H,21CH
	.WORD 07AH,218H
	.WORD 07AH,218H
	.WORD 07BH,214H
	.WORD 07CH,210H
	.WORD 07CH,210H
	.WORD 07DH,20CH
	.WORD 07EH,208H
	.WORD 07EH,208H
	.WORD 07FH,204H
	.WORD 080H,200H
	.WORD 080H,200H
	.WORD 081H,1FCH
	.WORD 082H,1F8H
	.WORD 082H,1F8H
	.WORD 083H,1F4H
	.WORD 084H,1F0H
	.WORD 084H,1F0H
	.WORD 085H,1ECH
	.WORD 086H,1E8H
	.WORD 087H,1E4H
	.WORD 087H,1E4H
	.WORD 088H,1E0H
	.WORD 089H,1DCH
	.WORD 089H,1DCH
	.WORD 08AH,1D8H
	.WORD 08BH,1D4H
	.WORD 08BH,1D4H
	.WORD 08CH,1D4H
	.WORD 08DH,1D0H
	.WORD 08DH,1D0H
	.WORD 08EH,1CCH
	.WORD 08FH,1C8H
	.WORD 08FH,1C8H
	.WORD 090H,1C4H
	.WORD 091H,1C0H
	.WORD 091H,1C0H
	.WORD 092H,1C0H
	.WORD 093H,1BCH
	.WORD 093H,1BCH
	.WORD 094H,1B8H
	.WORD 095H,1B4H
	.WORD 095H,1B4H
	.WORD 096H,1B4H
	.WORD 097H,1B0H
	.WORD 097H,1B0H
	.WORD 098H,1ACH
	.WORD 099H,1ACH
	.WORD 099H,1ACH
	.WORD 09AH,1A8H
	.WORD 09BH,1A4H
	.WORD 09BH,1A4H
	.WORD 09CH,1A4H
	.WORD 09DH,1A0H
	.WORD 09DH,1A0H
	.WORD 09EH,19CH
	.WORD 09FH,19CH
	.WORD 0A0H,198H
	.WORD 0A0H,198H
	.WORD 0A1H,194H
	.WORD 0A2H,194H
	.WORD 0A2H,194H
	.WORD 0A3H,190H
	.WORD 0A4H,18CH
	.WORD 0A4H,18CH
	.WORD 0A5H,18CH
	.WORD 0A6H,188H
	.WORD 0A6H,188H
	.WORD 0A7H,188H
	.WORD 0A8H,184H
	.WORD 0A8H,184H
	.WORD 0A9H,180H
	.WORD 0AAH,180H
	.WORD 0AAH,180H
	.WORD 0ABH,17CH
	.WORD 0ACH,17CH
	.WORD 0ACH,17CH
	.WORD 0ADH,178H
	.WORD 0AEH,178H
	.WORD 0AEH,178H
	.WORD 0AFH,174H
	.WORD 0B0H,174H
	.WORD 0B0H,174H
	.WORD 0B1H,170H
	.WORD 0B2H,170H
	.WORD 0B2H,170H
	.WORD 0B3H,16CH
	.WORD 0B4H,16CH
	.WORD 0B4H,16CH
	.WORD 0B5H,168H
	.WORD 0B6H,168H
	.WORD 0B6H,168H
	.WORD 0B7H,164H
	.WORD 0B8H,164H
	.WORD 0B9H,160H
	.WORD 0B9H,160H
	.WORD 0BAH,160H
	.WORD 0BBH,15CH
	.WORD 0BBH,15CH
	.WORD 0BCH,15CH
	.WORD 0BDH,158H
	.WORD 0BDH,158H
	.WORD 0BEH,158H
	.WORD 0BFH,154H
	.WORD 0BFH,154H
	.WORD 0C0H,154H
	.WORD 0C1H,150H
	.WORD 0C1H,150H
	.WORD 0C2H,150H
	.WORD 0C3H,150H
	.WORD 0C3H,150H
	.WORD 0C4H,14CH
	.WORD 0C5H,14CH
	.WORD 0C5H,14CH
	.WORD 0C6H,148H
	.WORD 0C7H,148H
	.WORD 0C7H,148H
	.WORD 0C8H,144H
	.WORD 0C9H,144H
	.WORD 0C9H,144H
	.WORD 0CAH,144H
	.WORD 0CBH,140H
	.WORD 0CBH,140H
	.WORD 0CCH,140H
	.WORD 0CDH,13CH
	.WORD 0CDH,13CH
	.WORD 0CEH,13CH
	.WORD 0CFH,13CH
ZSCALETBLXRACE
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D0H,13BH
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D4H,135H
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0D8H,12FH
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0DCH,129H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E0H,124H
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E4H,11FH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0E8H,11AH
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0ECH,115H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F0H,111H
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F4H,10CH
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0F8H,108H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 0FCH,104H
	.WORD 100H,100H
GROW1TO1TBLXRACE
YZSCALETBLXRACE
	.WORD 104H,0FCH
	.WORD 108H,0F8H
	.WORD 10CH,0F4H
	.WORD 110H,0F0H
	.WORD 114H,0EDH
	.WORD 118H,0EAH
	.WORD 11CH,0E6H
	.WORD 120H,0E3H
	.WORD 124H,0E0H
	.WORD 128H,0DDH
	.WORD 12CH,0DAH
	.WORD 130H,0D7H
	.WORD 130H,0D7H
	.WORD 134H,0D4H
	.WORD 138H,0D2H
	.WORD 13CH,0CFH
	.WORD 140H,0CCH
	.WORD 144H,0CAH
	.WORD 148H,0C7H
	.WORD 14CH,0C5H
	.WORD 150H,0C3H
	.WORD 154H,0C0H
	.WORD 158H,0BEH
	.WORD 15CH,0BCH
	.WORD 160H,0BAH
	.WORD 164H,0B8H
	.WORD 168H,0B6H
	.WORD 16CH,0B4H
	.WORD 16CH,0B4H
	.WORD 170H,0B2H
	.WORD 174H,0B0H
	.WORD 178H,0AEH
	.WORD 17CH,0ACH
	.WORD 180H,0AAH
	.WORD 184H,0A8H
	.WORD 188H,0A7H
	.WORD 18CH,0A5H
	.WORD 190H,0A3H
	.WORD 194H,0A2H
	.WORD 198H,0A0H
	.WORD 19CH,09FH
	.WORD 1A0H,09DH
	.WORD 1A4H,09CH
	.WORD 1A8H,09AH
	.WORD 1A8H,09AH
	.WORD 1ACH,099H
	.WORD 1B0H,097H
	.WORD 1B4H,096H
	.WORD 1B8H,094H
	.WORD 1BCH,093H
	.WORD 1C0H,092H
	.WORD 1C4H,090H
	.WORD 1C8H,08FH
	.WORD 1CCH,08EH
	.WORD 1D0H,08DH
	.WORD 1D4H,08CH
	.WORD 1D8H,08AH
	.WORD 1DCH,089H
	.WORD 1E0H,088H
	.WORD 1E4H,087H
	.WORD 1E4H,087H
	.WORD 1E8H,086H
	.WORD 1ECH,085H
	.WORD 1F0H,084H
	.WORD 1F4H,083H
	.WORD 1F8H,082H
	.WORD 1FCH,081H
	.WORD 200H,080H
	.WORD 204H,07FH
	.WORD 208H,07EH
	.WORD 20CH,07DH
	.WORD 210H,07CH
	.WORD 214H,07BH
	.WORD 218H,07AH
	.WORD 21CH,079H
	.WORD 220H,078H
	.WORD 220H,078H
	.WORD 224H,077H
	.WORD 228H,076H
	.WORD 22CH,075H
	.WORD 230H,075H
	.WORD 234H,074H
	.WORD 238H,073H
	.WORD 23CH,072H
	.WORD 240H,071H
	.WORD 244H,070H
	.WORD 248H,070H
	.WORD 24CH,06FH
	.WORD 250H,06EH
	.WORD 254H,06DH
	.WORD 258H,06DH
	.WORD 25CH,06CH
	.WORD 25CH,06CH
	.WORD 260H,06BH
	.WORD 264H,06BH
	.WORD 268H,06AH
	.WORD 26CH,069H
	.WORD 270H,069H
	.WORD 274H,068H
	.WORD 278H,067H
	.WORD 27CH,067H
	.WORD 280H,066H
	.WORD 284H,065H
	.WORD 288H,065H
	.WORD 28CH,064H
	.WORD 290H,063H
	.WORD 294H,063H
	.WORD 298H,062H
	.WORD 298H,062H
	.WORD 29CH,062H
	.WORD 2A0H,061H
	.WORD 2A4H,060H
	.WORD 2A8H,060H
	.WORD 2ACH,05FH
	.WORD 2B0H,05FH
	.WORD 2B4H,05EH
	.WORD 2B8H,05EH
	.WORD 2BCH,05DH
	.WORD 2C0H,05DH
	.WORD 2C4H,05CH
	.WORD 2C8H,05CH
	.WORD 2CCH,05BH
	.WORD 2D0H,05BH
	.WORD 2D4H,05AH
	.WORD 2D4H,05AH
	.WORD 2D8H,05AH
	.WORD 2DCH,059H
	.WORD 2E0H,059H
	.WORD 2E4H,058H
	.WORD 2E8H,058H
	.WORD 2ECH,057H
	.WORD 2F0H,057H
	.WORD 2F4H,056H
	.WORD 2F8H,056H
	.WORD 2FCH,055H
	.WORD 300H,055H
	.WORD 304H,054H
	.WORD 308H,054H
	.WORD 30CH,054H
	.WORD 310H,053H
	.WORD 310H,053H
	.WORD 314H,053H
	.WORD 318H,052H
	.WORD 31CH,052H
	.WORD 320H,051H
	.WORD 324H,051H
	.WORD 328H,051H
	.WORD 32CH,050H
	.WORD 330H,050H
	.WORD 334H,04FH
	.WORD 338H,04FH
	.WORD 33CH,04FH
	.WORD 340H,04EH
	.WORD 344H,04EH
	.WORD 348H,04EH
	.WORD 34CH,04DH
	.WORD 34CH,04DH
	.WORD 350H,04DH
	.WORD 354H,04CH
	.WORD 358H,04CH
	.WORD 35CH,04CH
	.WORD 360H,04BH
	.WORD 364H,04BH
	.WORD 368H,04BH
	.WORD 36CH,04AH
	.WORD 370H,04AH
	.WORD 374H,04AH
	.WORD 378H,049H
	.WORD 37CH,049H
	.WORD 380H,049H
	.WORD 384H,048H
	.WORD 388H,048H
	.WORD 388H,048H
	.WORD 38CH,048H
	.WORD 390H,047H
	.WORD 394H,047H
	.WORD 398H,047H
	.WORD 39CH,046H
	.WORD 3A0H,046H
	.WORD 3A4H,046H
	.WORD 3A8H,046H
	.WORD 3ACH,045H
	.WORD 3B0H,045H
	.WORD 3B4H,045H
	.WORD 3B8H,044H
	.WORD 3BCH,044H
	.WORD 3C0H,044H
	.WORD 3C4H,043H
	.WORD 3C4H,043H
	.WORD 3C8H,043H
	.WORD 3CCH,043H
	.WORD 3D0H,043H
	.WORD 3D4H,042H
	.WORD 3D8H,042H
	.WORD 3DCH,042H
	.WORD 3E0H,042H
	.WORD 3E4H,041H
	.WORD 3E8H,041H
	.WORD 3ECH,041H
	.WORD 3F0H,041H
	.WORD 3F4H,040H
	.WORD 3F8H,040H
	.WORD 3FCH,040H
GROWMAXTBLXRACE

	.ENDIF ;--------- DEAD -------------------

	.END
* EOF
