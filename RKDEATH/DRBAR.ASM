***
*** FILE: DRBAR.ASM
*** BARRIER ROUTINES
***
*** JFL 21 FEB 93
***

	.MLIB	"APMACS.LIB"
	.FILE	"DRBAR.ASM"
	.TITLE	" <<< DERBY RACE -- BARRIER >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST
**
** COMPILE FLAGS
**

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

*	GET THE SYSTEM STUFF
	.INCLUDE	"AP.H"
	.INCLUDE	"DR.I"
	.INCLUDE	"IMGTBLM2.GLO"

** OTHERS USE
	.DEF	BARRELPROC	;DRBAR.ASM

** WE USE
	.REF	SETGCOL		;DR.ASM
	.REF	CLRGCOL		;DR.ASM
	.REF	PULLVLIST	;APD.ASM
	.REF	MAKESHADMULTI	;DRI.ASM
	.REF	DROPICON	;DRACT.ASM
	.REF	WAVEIRQS
	.REF	INSVLIST	;APD.ASM

** WE USE -- RAM

	.TEXT
	.EVEN


**
** DEFINES
**
MINDROPYACC	EQU	200H

***
*** ------------------------------------------------------------------------
***

**
** PROCESS DATA FOR BARREL
**
** JFL 21 FEB 93
**
PDBIRQ		EQU	PDATA+000H	;UHL NEXT IRQ TO CHANGE
PDBIMG		EQU	PDATA+020H	;UHL NEXT IMAGE
PDBTIME		EQU	PDATA+040H	;UHW TIME BETWEEN CHANGES
PDBSIZE		EQU	PDATA+060H	; SIZE

	.IF PDBSIZE >= PSDATA
	ERROR	TOO BIG
	.ENDIF

M_BFLAT		EQU	01H	;BARREL CAN LIE FLAT	
B_BFLAT		EQU	0

BARRELTBL
	.LONG	BFLIPa_1+M_BFLAT
	.LONG	BFLIPa_2
	.LONG	BFLIPa_3
	.LONG	BFLIPa_4+M_BFLAT
	.LONG	BFLIPa_5
	.LONG	BFLIPa_6
	.LONG	BFLIPa_7+M_BFLAT
	.LONG	BFLIPa_8
	.LONG	BFLIPa_9
	.LONG	BFLIPa_10
	.LONG	BFLIPa_11+M_BFLAT
	.LONG	BFLIPa_12
	.LONG	BFLIPa_13
	.LONG	0			;LOOP

**
** BARRELLANDS
**
** IN
**   A8 OBJ
** SCRATCH: A0-A8,A10-A11
**
** JFL 21 FEB 93
**
BARRELLANDS
	MOVE	A8,A0

	;
	;NO MORE VEL ADD
	;
	CALLA	PULLVLIST ;IN:A0 OBJ

	;
	;GET RID OF SHADOW
	;
	MOVL	*A0(OSHADIMG),A8
	JRZ	BLX
	CALLA	ZAP_OBJ ;IN:A8
	CLR	A0
	MOVL	A0,*A8(OSHADIMG)
	
BLX
	RETS


BARRELTIME	EQU	2

**
** BARRELHARDHITTBL
** 8 ENTRIES
**
** .WORD	YVEL
** .WORD	ANIMTIME
**
** JFL 21 FEB 93
**
BARRELHARDHITTBL
	.WORD	10H
	.WORD	8
	.WORD	20H
	.WORD	7
	.WORD	30H
	.WORD	6
	.WORD	40H
	.WORD	5
	.WORD	50H
	.WORD	4
	.WORD	60H
	.WORD	3
	.WORD	70H
	.WORD	2
	.WORD	-80H	;NEG INDICATES RND ICON TO POP OUT
	.WORD	1
BARRELHARDHITTBLX

BHTYVEL		EQU	000H	;UHW
BHTTIME		EQU	020H	;UHW
BHTSIZEOF	EQU	5	; SHIFT
SR1_MAG2BHT	EQU	8
SL_MAG2BHT	EQU	29
SR2_MAG2BHT	EQU	29-BHTSIZEOF
SL_BHT2VEL	EQU	4

**
** BARRELPROC
**
** IN
**   A8 BARREL
**   A9 CAR
**
** JFL 21 FEB 93
**
BARRELPROC
	MOVE	A8,A0
	
	.IF DEBUG
	MOVL	*A8(OGCOL),A14
	TLOCKON	NZ
	.ENDIF ;DEBUG

	;
	;FIND HOW HARD BARREL WAS HIT
	;
	MOVL	*A9(OCAR),A7
	MOVW	*A7(CDTOTMAG),A1
	TLOCKON	N
	SRL	SR1_MAG2BHT,A1
	SLL	SL_MAG2BHT,A1
	SRL	SR2_MAG2BHT,A1
	ADDI	BARRELHARDHITTBL,A1
	.IF DEBUG
	CMPI	BARRELHARDHITTBLX,A1
	TLOCKON	HS
	.ENDIF ;DEBUG
	
	;
	;TOSS UP
	;
	CLR	A11			;FLAG NOT TO TOSS ICON OUT OF BARREL
	MOVW	*A1(BHTYVEL),A3
	JRNN	BPNORNDICON
	NEG	A3			;MAKE NORMAL
	;MOVW	@REFCNT,A14
	;SRL	2,A14
	;SLL	32-2,A14
	;JRZ	BPNORNDICON
	MOVK	1,A11			;FLAG TO TOSS ICON OUT OF BARREL
BPNORNDICON
	MOVW	*A8(OSCALEMUL),A14
	SETF	10,0,1
	MPYU	A14,A3
	SETF	32,1,1
	;SRL	MPYSCALE-VELSHIFT,A3
	SLL	SL_BHT2VEL,A3
	NEG	A3
	MOVL	A3,*A0(OYVEL)
	NEG	A3
	SRL	5,A3
	TLOCKON	Z
	MOVL	A3,*A0(OYACC)

	;SET ANIM SPEED
	MOVW	*A1(BHTTIME),*A13(PDBTIME)

	;	
	;ADD BARREL TO VEL ADD LIST
	;
	.IF DEBUG
	MOVB	*A0(OID+B_OIDFAUTOVEL-7),A14
	TLOCKON	N ;DO THIS MANUALLY
	.ENDIF ;DEBUG

	;FLAG ON VLIST
	SETF	1,0,0
	MOVK	1,A14
	MOVB	A14,*A0(OID+B_OIDFAUTOVEL)
	SETF	16,1,0

	CALLR	INSVLIST ;IN:A0,A2-A3 OBJ,SC

	;
	;FIND FIRST ANIM
	;
	MOVI	BARRELTBL,A2
	MOVL	*A0(OIMG),A3
BPFIND
	MOVL	*A2+,A14
	SRL	4,A14		;DROP FLAG BITS
	SLL	4,A14
	TLOCKON	Z
	CMP	A3,A14
	JRNE	BPFIND

	MOVL	A2,*A13(PDBIMG)

	;NEXT IRQ TO CHANGE
	CLR	A14
	MOVL	A14,*A13(PDBIRQ)

	;
	;SET UP FOR WHEN IT LANDS
	;
	MOVI	BARRELLANDS,A2
	MOVI	SETGCOL,B8 ;IN:A2,A8,B8 GCOL(),OBJ,PC
	EXGPC	B8
	
	;
	;ADD A SHADOW
	;
	MOVL	*A8(OIMG),A2
	CALLA	MAKESHADMULTI ;IN A2,A3-A5,A8 SHADIMG,SC,OBJ OUT:A0 SHADOBJ
	CALLA	INSOBJ ;IN:A0
	JRUC	BPNEXT
BPLOOP
	;
	;CHECK IF IT WENT OFF SCREEN
	;
	MOVL	*A8(ODAG),A0
	MOVI	[SCRBOT,SCRRGT],A14
	CMPXY	A14,A0
	JRXGT	BPKILL
	JRYGT	BPKILL
	MOVL	*A8(OSIZE),A14
	ADDXY	A14,A0
	JRXN	BPKILL
	JRYN	BPKILL

	;CHECK IF WE SHOULD MAKE AN ICON DROP OUT OF BARREL
	MOVE	A11,A11
	JRZ	BPNOICON
	MOVL	*A8(OYVEL),A14
	JRN	BPNOICON		;STILL TRAVELLING UP

	;
	;DROP ICON
	;
	CLR	A11			;ONLY ONE!

	MOVW	*A8(OZPOS),A3
	MOVW	*A8(OXPOS),A14
	SLL	16,A3
	MOVX	A14,A3

	CALLA	DROPICON ;IN:A3 Z:X OUT:A0 OBJ SC:B0-B1,B8,A1-A5

	;SET POS & VELS
	MOVL	*A8(OXVEL),A14
	SLL	1,A14
	MOVL	A14,*A0(OXVEL)
	MOVL	*A8(OZVEL),A14
	SLL	1,A14
	MOVL	A14,*A0(OZVEL)
	MOVW	*A8(OYPOS),*A0(OYPOS)
	MOVL	*A8(OYVEL),*A0(OYVEL)
	MOVL	*A8(OYACC),A14
	SRA	1,A14
	CMPI	MINDROPYACC,A14
	JRGE	BPIDROP
	TLOCKUP
	MOVI	MINDROPYACC,A14	
BPIDROP
	MOVL	A14,*A0(OYACC)


BPNOICON
	;
	;CHECK IF ITS TIME TO CHANGE
	;
	MOVL	@WAVEIRQS,A1
	MOVL	*A13(PDBIRQ),A14
	CMP	A1,A14
	JRHI	BPNEXT

	;
	;CHANGE TO NEW FRAME
	;

	;FIGURE NEXT TIME TO CHANGE
	MOVW	*A13(PDBTIME),A14
	ADD	A14,A1
	MOVL	A14,*A13(PDBTIME)
	
	MOVL	*A13(PDBIMG),A2
	MOVL	*A2+,A1
	JRNZ	BPGOTIMG
	MOVI	BARRELTBL,A2
	MOVL	*A2+,A1
	TLOCKON	Z ;TBL EMPTY!
BPGOTIMG
	;CLEAN FLAG BITS
	MOVE	A1,A10		;SAVE FLAGS
	SRL	4,A1
	SLL	4,A1

	MOVL	A2,*A13(PDBIMG)
	MOVL	*A8(OSHADIMG),A2
	TLOCKON	Z ;MUST HAVE SHADOW
	
	MOVL	A1,*A8(OIMG)
	MOVL	A1,*A2(OIMG)
	MOVL	*A1(ISIZE),A14
	MOVL	A14,*A8(OUSIZE)
	MOVL	A14,*A2(OUSIZE)
	MOVL	*A1(ISAG),A14
	MOVL	A14,*A8(OSAG)
	MOVL	A14,*A2(OSAG)
	MOVL	*A1(IANIOFF),A14
	MOVL	A14,*A8(OUANIOFF)
	MOVL	A14,*A2(OUANIOFF)
	CLR	A14	       		
	MOVW	A14,*A8(OSCALEMUL)		;FORCE UPDATE
	MOVW	A14,*A2(OSCALEMUL)		;FORCE UPDATE
	
BPNEXT
	;WAIT FOR IT TO LAND
	SLEEP	2
	MOVL	*A8(OGCOL),A14
	JRNZ	BPLOOP

BPFLAT
	;WAIT FOR IT TO LIE FLAT
	BTST	B_BFLAT,A10
	JRZ	BPLOOP
	
BPX
	CLR	A14
	MOVL	A14,*A8(OPLINK)
	DIE

BPKILL
	;
	;DESTROY OBJ
	;


	MOVL	*A8(OGCOL),A14
	JRZ	BPKNOG

	;CLEAR GCOL
	MOVI	CLRGCOL,B8 ;IN:A2-A3,A8,B8 SC,OBJ,PC
	EXGPC	B8

BPKNOG
	CALLA	ZAP_OBJ ;IN:A8
	
	DIE	
	
* EOF
