***
*** FILE: DRC.ASM
*** DERBY RACE CAR ROUTINES
***
*** JFL 18 OCT 92; FROM DRI.ASM
*** JFL 20 OCT 92
*** JFL 26 OCT 92
*** JFL 30 OCT 92
*** JFL 03 NOV 92; APRI
*** JFL 23 DEC 92; NEW VEC
*** JFL 30 DEC 92
*** JFL 08 JAN 93; CCIDBUMPSLOW
*** JFL 14 JAN 93; CCIDMISSILEHIT
*** JFL 10 FEB 93; SMART BOMB
*** JFL 14 APR 93; YVELS ADJUSTED
***
	.MLIB	"APMACS.LIB"
	.FILE	"DRC.ASM"
	.TITLE	" <<< DERBY RACE -- CAR ROUTINES >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

**
** COMPILE FLAGS
**

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

*	GET THE SYSTEM STUFF
	.INCLUDE	"AP.H"
	.INCLUDE	"DR.I"
	.INCLUDE	"DRM.I"
	.INCLUDE	"DRC.I"
	.INCLUDE	"DRVEC.I"
	.INCLUDE	"DRSND.I"
	.INCLUDE	"DRT.I"

** OTHERS USE
	.DEF	CARTHROWUP	;DRC.ASM
	.DEF	CARDISABLE	;DRC.ASM
	.DEF	CCNEWSTATE	;DRC.ASM
	.DEF	CCABORT		;DRC.ASM
	.DEF	CCABORTLOADA7	;DRC.ASM

** WE USE
	.REF	NOCONTROLCARINP	;DR.ASM
	.REF	STEERONLYCARINP	;DR.ASM
	.REF	CRAZYCARINP	;DR.ASM
	.REF	PEDALONLYCARINP	;DR.ASM
	.REF	ALTINPHANDLER	;DR.ASM
	.REF	SHAKESCREEN	;DR.ASM
	.REF	NORMINPHANDLER	;DR.ASM
	.REF	JUMPCARINP	;DR.ASM
	.REF	ISCAROBJ	;DR.ASM
	.REF	MAKESND		;DRSND.ASM
	.REF	ARENASND	;DRSND.ASM
	.REF	SETCARDIR	;DR.ASM
	.REF	CLEARVEC	;DR.ASM
	.REF	SETGCOL		;DR.ASM

	.REF	WAVEIRQS

	.REF	SASROLLLEFT	;DRAS.ASM
	.REF	SASROLLRIGHT	;DRAS.ASM
	.REF	SASREHIT	;DRAS.ASM
	.REF	SASTOSSROLLLOOP	;DRAS.ASM
	.REF	SASROCKUPDOWN	;DRAS.ASM
	.REF	SASROCKDOWNUP	;DRAS.ASM

**
** DEFINES
**

	.TEXT
	.EVEN

***
*** -----------------------------------------------------------------------
***

TOSSYVEL	EQU	-[3,0]
TOSSYACC	EQU	[3,0]/32
JUMPYVEL	EQU	[1,0]		;ADD IN CAR SPEED
JUMPYACC	EQU	[3,0]/16
BUMPYVEL	EQU	[1,0]		;ADD IN CAR SPEED
BUMPYACC	EQU	[3,0]/16
ROLLYVEL	EQU	[0,400H]	;ADD IN CAR SPEED
ROLLYACC	EQU	[2,0]/32
MONDOYVEL	EQU	[1,0]		;ADD IN CAR SPEED
MONDOYACC	EQU	[4,0]/64
CLIFFYVEL	EQU	[1,0]		;ADD IN CAR SPEED
CLIFFYACC	EQU	[2,0]/16
MISSILEYVEL	EQU	[-5,0]
MISSILEYACC	EQU	[4,0]/8
SMARTBOMBYVEL	EQU	[-5,0]
SMARTBOMBYACC	EQU	[5,0]/64
LMINEYVEL	EQU	[-4,0]
LMINEYACC	EQU	[6,0]/16
FFYVEL		EQU	[-1,0]
FFYACC		EQU	[1,0]/8
TOSSMAXYVEL	EQU	[4,0]

**
** THROW UP TBL
**
** JFL 20 OCT 92
**
TUTFUN		EQU	000H		;UHL FUN
TUTYVEL		EQU	020H		;UHL YVEL
TUTYACC		EQU	040H		;UHL YACC
TUTCARINP	EQU	060H		;UHL
TUTSIZE		EQU	080H		; SIZE
TUTSIZEOF	EQU	7		; SIZEOF

**
** CARTOSSTBL
** INFO FOR TOSSING CARS
**
** INDEX WITH CCID FROM DRC.I
**
** .LONG FUNC,YVEL,YACC,INP
**
** IF YVEL IS POSITIVE, THEN THE SPEED OF THE CAR IS ADDED TO HEIGHT
** 
** JFL 20 OCT 92
** JFL 22 NOV 92
**
CARTOSSTBL
	.LONG	0,0,0,0						;PLAIN
	.LONG	CTREHIT,TOSSYVEL,TOSSYACC,STEERONLYCARINP	;RE HIT
	.LONG	0,0,0,0						;CLIFF
	.LONG	CTMONDO,MONDOYVEL,MONDOYACC,NOCONTROLCARINP	;MONDO HIT
	.LONG	0,0,0,0						;ANY OTHER HIT
	.LONG	CTJUMP,JUMPYVEL,JUMPYACC,0			;JUMP
	.LONG	0,0,0,0						;DEAD
	.LONG	0,0,0,0						;HITWIN
	.LONG	0,0,0,0						;BARRIER
	.LONG	CTCLIFFROLL,ROLLYVEL,ROLLYACC,NOCONTROLCARINP	;CLIFFROLL
	.LONG	CTBUMP,BUMPYVEL,BUMPYACC,0 			;BUMP
	.LONG	CTCLIFFHARD,CLIFFYVEL,CLIFFYACC,STEERONLYCARINP	;CLIFFHARD
	.LONG	0,0,0,0						;HITIMMOBILE
	.LONG	0,0,0,0						;SLICK
	.LONG	0,0,0,0						;BUMPSLOW
	.LONG	CTMISSILE,MISSILEYVEL,MISSILEYACC,NOCONTROLCARINP ;MISSILE HIT
	.LONG	CTSMARTBOMB,SMARTBOMBYVEL,SMARTBOMBYACC,NOCONTROLCARINP ;MISSILE HIT
	.LONG	CTLMINE,LMINEYVEL,LMINEYACC,PEDALONLYCARINP	;LAND MINE
	.LONG	CTFFHIT,FFYVEL,FFYACC,PEDALONLYCARINP		;FF
CARTOSSTBLX
	
**
** CARTOSSTIMETBL
**
** INDEX WITH CCID FROM DRC.I
**
** JFL 23 OCT 92
**
CARTOSSTIMETBL
	.WORD	0	;PLAIN
	.WORD	0	;RE HIT
	.WORD	0	;CLIFF
	.WORD	0	;MONDO HIT
	.WORD	0	;ANY OTHER HIT
	.WORD	0	;JUMP
	.WORD	0	;DEAD
	.WORD	0	;HITWIN
	.WORD	0	;BARRIER
	.WORD	0	;CLIFFROLL
	.WORD	0	;BUMP
	.WORD	0	;CLIFFHARD
	.WORD	0	;HITIMMOBILE
	.WORD	0	;SLICK
	.WORD	0	;BUMPSLOW
	.WORD	0	;MISSILEHIT
	.WORD	0	;SMARTBOMB
	.WORD	0	;LAND MINE
	.WORD	0	;FF
CARTOSSTIMETBLX

**
** CLTSHAKETBL
**
** INDEX WITH CCID FROM DRC.I
**
** .LONG MAG:SHAKEID
**
** JFL 22 OCT 92
**
CLTSHAKETBL
	.LONG	0			;PLAIN
	.LONG	[0,M_SSY+M_SSX]		;RE HIT
	.LONG	0			;CLIFF
	.LONG	[1,M_SSY+M_SSX]		;MONDOHIT
	.LONG	0			;ANY OTHER HIT
	.LONG	0			;JUMP
	.LONG	0			;DEAD
	.LONG	0			;HITWIN
	.LONG	0			;BARRIER
	.LONG	0			;CLIFFROLL
	.LONG	0			;BUMP
	.LONG	0			;CLIFFHARD
	.LONG	0			;HITIMMOBILE
	.LONG	0			;SLICK
	.LONG	0			;BUMPSLOW
	.LONG	[1,M_SSY+M_SSX]		;MISSILEHIT
	.LONG	[1,M_SSY+M_SSX]		;SMARTBOMB
	.LONG	[1,M_SSY+M_SSX]		;LAND MINE
	.LONG	0			;FF
CLTSHAKETBLX


**
** CCABORTTBL
**
** INDEX WITH CCID FROM DRC.I
**
** JFL 26 OCT 92
**
CCABORTTBL
	.LONG	0		;PLAIN
	.LONG	CARLANDEDTHROW	;REHIT
	.LONG	CCABORTINP	;CLIFF
	.LONG	CARLANDEDTHROW	;MONDOHIT
	.LONG	CCABORTHIT	;ANYOTHERHIT
	.LONG	0		;XXX
	.LONG	0		;DEAD
	.LONG	CCABORTHIT	;HITWIN
	.LONG	CCABORTINP	;BARRIER
	.LONG	CARLANDEDROLL	;CLIFFROLL
	.LONG	CARLANDEDTHROW	;BUMP
	.LONG	CARLANDEDTHROW	;CLIFFHARD
	.LONG	CCABORTHIT	;HITIMMOBILE
	.LONG	CCABORTINP	;SLICK
	.LONG	0		;BUMPSLOW
	.LONG	CARLANDEDTHROW	;MISSILEHIT
	.LONG	CARLANDEDTHROW	;SMARTBOMB
	.LONG	CARLANDEDTHROW	;LAND MINE
	.LONG	CARLANDEDTHROW	;FF
CCABORTTBLX

**
** DISBALETBL
**
** JFL 22 OCT 92
**
DTFUN		EQU	000H		;UHL FUNC
DTCARINP 	EQU	020H		;UHL ALT INP HANDLER
DTSIZE		EQU	040H		; SIZE
DTSIZEOF	EQU	6		; SIZEOF

**
** CARDISABLETBL
** INFO FOR DISABLING CARS
** 
** INDEX BY CCID FROM DRC.I
**
** .LONG FUNC,INPUTHANDLER
**
** JFL 22 OCT 92
** JFL 27 OCT 92
** JFL 04 NOV 92
** JFL 08 JAN 93
**
CARDISABLETBL
	.LONG	0,0			;PLAIN
	.LONG	0,CRAZYCARINP		;REHIT
	.LONG	0,STEERONLYCARINP	;CLIFF
	.LONG	0,NOCONTROLCARINP	;MONDOHIT
	.LONG	0,CRAZYCARINP		;ANYOTHERHIT
	.LONG	0,JUMPCARINP		;JUMP
	.LONG	0,NOCONTROLCARINP	;DEAD
	.LONG	0,STEERONLYCARINP	;HITWIN
	.LONG	0,PEDALONLYCARINP	;BARRIER
	.LONG	0,NOCONTROLCARINP	;CLIFFROLL
	.LONG	0,JUMPCARINP		;BUMP
	.LONG	0,STEERONLYCARINP	;CLIFFHARD
	.LONG	0,STEERONLYCARINP	;HITIMMOBILE
	.LONG	0,STEERONLYCARINP	;SLICK
	.LONG	CDISBUMPSLOW,0		;BUMPSLOW
	.LONG	0,NOCONTROLCARINP	;MISSILEHIT
	.LONG	0,NOCONTROLCARINP	;SMARTBOMB
	.LONG	0,NOCONTROLCARINP	;LAND MINE
	.LONG	0,PEDALONLYCARINP	;FF
CARDISABLETBLX


**
** CCIDPRITBL
**
** JFL 16 NOV 92
**
CCIDPRITBL
	.BYTE	0	;PLAIN
	.BYTE	0	;REHIT
	.BYTE	0	;CLIFF
	.BYTE	2	;MONDOHIT
	.BYTE	0	;ANYOTHERHIT
	.BYTE	0	;JUMP
	.BYTE	0	;DEAD
	.BYTE	0	;HITWIN
	.BYTE	0	;BARRIER
	.BYTE	0	;CLIFFROLL
	.BYTE	0	;BUMP
	.BYTE	0	;CLIFFHARD
	.BYTE	0	;HITIMMOBILE
	.BYTE	0	;SLICK
	.BYTE	0	;BUMPSLOW
	.BYTE	3	;MISSILEHIT
	.BYTE	1	;SMARTBOMB
	.BYTE	2	;LAND MINE
	.BYTE	1	;FF
CCIDPRITBLX

	.EVEN

***
*** CAR CONTROL ABORT HANDLER ----------------------------------------------
***

**
** CCNEWSTATE
**
** IN
**   A0 OBJ
**   A2 CCID FROM DRC.I
**   A7 CD
** OUT
**   C SET IF NEW STATE NOT SET
**
** JFL 26 OCT 92
**
CCNEWSTATE
	MMTM	SP,A2,A3,A8

	ZEXT	A2,W

	;CHECK IF WE ARE IN ANOTHER STATE
	MOVW	*A7(CDCSTATE),A3
	JRZ	CCNSSET

	;ARE WE ALREADY IN THIS STATE
	CMP	A2,A3
	JREQ	CCNSNOTSETX

	;CHECK PRIORITIES
	SLL	3,A3
	MOVE	A2,A14
	SLL	3,A14
	ADDI	CCIDPRITBL,A3
	ADDI	CCIDPRITBL,A14
	MOVB	*A3,A3			;OLD PRI
	MOVB	*A14,A14		;NEW PRI
	
	;IF OLD IS > NEW DONT SET NEW
	SUB	A3,A14
	JRC	CCNSX

	;HANDLE ABORTING PREVIOUS STATE
	MOVE	A0,A8
	MMTM	SP,A2
	CALLR	CCABORT	 ;IN A7,A8 CD,OBJ
	MMFM	SP,A2

CCNSSET
	;SET NEW STATE
	.IF DEBUG
	CMPI	CCIDMAX,A2
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVW	A2,*A7(CDCSTATE)

CCNSALREADY	
	CLRC
CCNSX
	MMFM	SP,A2,A3,A8
	RETS
CCNSNOTSETX
	SETC
	JRUC	CCNSX

**
** CCABORT
**
** IN
**   A7 CD
**   A8 OBJ
**
** JFL 26 OCT 92
**
CCABORTLOADA7

	MOVL	*A8(OCAR),A7
CCABORT
	
	;CLEAR ANI PRI
	CLR	A14
	MOVW	A14,*A7(CDANIPRI)

	MOVW	*A7(CDCSTATE),A14
	TLOCKON	N
	SLL	5,A14			;SIZEOF CCABORTTBL
	ADDI	CCABORTTBL,A14
	.IF DEBUG    
	CMPI	CCABORTTBLX,A14
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVL	*A14,A14
	JRZ	CCANOFUN
	CALL	A14 ;IN A7,A8 CD,OBJ
CCANOFUN
	CLR	A14 ;CCIDPLAIN
	MOVW	A14,*A7(CDCSTATE)

CCAX
	RETS

**
** CCABORTHIT
**
** IN
**   A7 CD
**   A8 OBJ
**
** JFL 26 OCT 92
**
CCABORTINP
CCABORTHIT
	CALLA	NORMINPHANDLER ;IN: A7,A8 CD,OBJ

	;THROW AWAY STEERING DONE WHILE DISABLED
	MMTM	SP,A0,A10
	MOVE	A8,A0
	MOVB	*A0(ODIR),A10
	CALLA	SETCARDIR ;IN: A0,A2,A7,A10 CAR,SC,CD,DIR
	MMFM	SP,A0,A10

	RETS

***
*** CAR TOSSERS -----------------------------------------------------------
***

**
** CAR TOSS -- EXGPC B8
**
** IN
**   A0 OBJ
**   A7 CD
**   B8 PC TO RETURN TO
**
** JFL 30 DEC 92
** JFL 04 JAN 93
**
CTCLIFFHARD
	;IN AIR DUE TO PENALTY
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFAIRPENALTY),0
	SETF	16,1,0
	
CTFFHIT
CTBUMP
CTJUMP
	MMTM	SP,A0,A1,A7,A8,A9,A10,A11
	MOVE	A0,A8
	MOVE	A7,A9
	CREATE	PID_DRAGONE,CARTHROWWATCHER
	MMFM	SP,A0,A1,A7,A8,A9,A10,A11
	EXGPC	B8
CTCLIFFROLL
	
	MOVB	*A0(OWORDPASS),A2		;DIR OF SLOPE
	MOVB	*A0(ODIR),A14			;DIR OF CAR
	SUB	A14,A2				;SLOPEDIR-CARDIR
	SLL	25,A2
	JRC	CTCRC

	;FACING LEFT ON SLOPE
	MOVI	SASROLLLEFT,A2
	JRUC	CTGENERIC
CTCRC
	;FACING RIGHT ON SLOPE
	MOVI	SASROLLRIGHT,A2
	JRUC	CTGENERIC

CTLMINE
CTSMARTBOMB
CTMISSILE
CTMONDO
	MOVI	SASTOSSROLLLOOP,A2
	JRUC	CTGENERIC
CTREHIT
	MOVI	SASREHIT,A2
CTGENERIC
	;IN AIR DUE TO PENALTY
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFAIRPENALTY),0
	SETF	16,1,0

	MOVL	A2,*A7(CDSAS)		;SET STATE ANIM SCRIPT

	EXGPC	B8

***
*** CAR DISABLE FUNCTIONS --------------------------------------------------
***

**
** CDIS FUNCTIONS -- EXGPC B8
**
** IN
**   A0 OBJ
**   A2-A3 SCRATCH
**   A7 CD
**   B8 PC TO RETURN TO
**
** JFL 08 JAN 93
**
CDISBUMPSLOW
	MOVW	*A7(CDANIPRI),A14	;GET RUNNING ANIM PRI
	MOVK	APRIDISABLE,A2
	CMP	A2,A14			;CHECK IF CUR ANIM IS HIGHER PRI
	JRGT	CDBLX			;DONT CHANGE
	MOVW	A2,*A7(CDANIPRI)	;SET ANIM PRI
	
	;PICK ONE FROM THE TBL
	MOVB	*A7(CDFLAGS+B_CDFREV-7),A14
	JRN	CDBLREV
	MOVI	SASROCKUPDOWN,A14
	JRUC	CDBLOK
CDBLREV
	MOVI	SASROCKDOWNUP,A14
CDBLOK
	MOVL	A14,*A7(CDSAS)
	MOVL	@WAVEIRQS,A14
	MOVL	A14,*A0(ANIMIRQ)
CDBLX
	EXGPC	B8
	

***
*** CAR LANDING HANDLERS ---------------------------------------------------
***

**
** CARTHROWWATCHER -- PROC
**
** IN
**   A8 OBJ
**   A9 CD
**
** JFL 30 DEC 92
** JFL 04 JAN 92
**
CARTHROWWATCHER

	;LOAD UP FOR SPEED
	MOVI	THROWTILTTBL,A10		;SAVE FOR LATER
	CLR	A11				;FRONT HEAVY
	MOVB	*A9(CDFLAGS+B_CDFREV-7),A14
	JRNN	CTWTOP
	MOVK	16,A11				;BACK HEAVY

CTWTOP
	;CHECK FOR END OF THROW
	MOVB	*A9(CDFLAGS+B_CDFINTHROW-7),A14
	JRN	CTWINAIR
	DIE

CTWINAIR
	
	;
	;FIGURE TILT
	;

	;GET YVEL
	MOVL	*A8(OYVEL),A0
	MOVE	A10,A1		;RESTORE
	JRUC	CTWONE
CTWLOOP
	ADDK	32,A1		;SKIP STATE
CTWONE
	;COMPARE VALUE FROM TABLE TO YVEL
	MOVL	*A1+,A14
	JRZ	CTWUSE
	CMP	A14,A0
	JRGE	CTWLOOP

CTWUSE
	;CHECK IF CAR IS IN BACK HEAVY OR FRONT HEAVY
	ADD	A11,A1			;ADD IN FRONT OR BACK HEAVY
	MOVW	*A1,A14			;LOAD INTO A14 FOR DEBUG
	MOVW	A14,*A8(OSTATE) 	;SET NEW STATE
CTWX
	SLEEP	1
	JRUC	CTWTOP
	;SLEEPTA	1,CTWTOP



**
** THROWTILTTBL
**
** IF ENTRY IS ZERO, USE THIS STATE
** IF OYACC < ENTRY USE THIS STATE, ELSE TRY NEXT
**
** JFL 16 SEP 92
** JFL 30 DEC 92
**
THROWTILTTBL
	.LONG	-00010000H
	.WORD	STATE_HIGHUP		;FWD
	.WORD	STATE_HIGHDOWN		;REV
	.LONG	-00004000H
	.WORD	STATE_LOWUP		;FWD
	.WORD	STATE_LOWDOWN		;REV
	.LONG	 00004000H
	.WORD	STATE_FLAT		;FWD
	.WORD	STATE_FLAT		;REV
	.LONG	 00010000H
	.WORD	STATE_LOWDOWN		;FWD
	.WORD	STATE_LOWUP		;REV
	.LONG	 00000000H
	.WORD	STATE_HIGHDOWN		;FWD
	.WORD	STATE_HIGHUP		;REV

**
** CARLANDEDTHROW
**
** IN
**   A2 SCRATCH
**   A3 SCRATCH
**   A8 OBJ
**
** JFL 16 SEP 92
** JFL 29 SEP 92; NEW SCRATCH
** JFL 01 OCT 92; GCOLL
** JFL 16 OCT 92; TOPO TILT ENABLED
** JFL 03 NOV 92; APRI
** JFL 26 FEB 93; DO REV
**
CARLANDEDROLL
	MMTM	SP,A7,A10,A11

	;
	;HIT GROUND, END MOVE 
	;
	
	;RESTORE PLAYER CONTROL
	MOVL	*A8(OCAR),A7

	;SET ALT INP HANDLER TO TIME OUT NEXT FRAME
	MOVK	8,A14
	MOVW	A14,*A7(CDALTTIME)		;WILL TIME OUT NEXT FRAME
	JRUC	CLGENERIC

CARLANDEDTHROW
	MMTM	SP,A7,A10,A11

	;
	;HIT GROUND, END MOVE 
	;
	
	;RESTORE PLAYER CONTROL
	MOVL	*A8(OCAR),A7

	;SET ALT INP HANDLER TO TIME OUT NEXT FRAME
	MOVK	1,A14
	MOVW	A14,*A7(CDALTTIME)		;WILL TIME OUT NEXT FRAME

	;RESET THE FLAT ANIM
	CLR	A14
	MOVL	A14,*A7(CDSASIRQ)
	MOVL	A14,*A7(CDSAS)
	MOVW	A14,*A8(OSTATE)

CLGENERIC
	MOVW	*A7(CDFLAGS),A2

	;DO REV IF WE NEED TO
	BTST	B_CDFDOREV,A2
	JRZ	CLGNOREV
	XORI	M_CDFREV,A2

CLGNOREV
	;CLEAR FLAGS
	ANDNI	(M_CDFAIRPENALTY+M_CDFINTHROW+M_CDFDOREV),A2
	MOVW	A2,*A7(CDFLAGS)

	;RESTORE NORMAL SCALING
	;MOVK	STYPZ,A14
	;MOVW	A14,*A8(OSCALETYPE)

	;THROW AWAY STEERING DONE WHILE DISABLED
	MOVB	*A8(ODIR),A10
	MOVE	A0,A11			;SAVE
	MOVE	A8,A0
	CALLA	SETCARDIR ;IN: A0,A2,A7,A10 CAR,SC,CD,DIR
	MOVE	A11,A0			;RESTORE

	;DO WE NEED TO SHAKE THE SCREEN
	MOVW	*A7(CDCSTATE),A2
	SLL	5,A2		;SIZEOF CLTSHAKETBL
	ADDI	CLTSHAKETBL,A2
	.IF DEBUG
	CMPI	CLTSHAKETBLX,A2
	TLOCKON	HS
	.ENDIF ;DEBUG
	MOVL	*A2,A2
	JRZ	CLTNOSHAKE	

	CALLA	SHAKESCREEN ;IN: A2 MAG:FLAGS

CLTNOSHAKE
	;CHECK IF WE LANDED IN WATER OR PUDDLE
	MOVL	*A7(CDTOPOA),A14
	CMPI	TOPOAWATER,A14
	JREQ	CLTWATER
	CMPI	TOPOAPUDDLE,A14
	JRNE	CLTNOWATER	

CLTWATER
	;MAKE SOUND
	MOVW	*A7(CDINPNUM),A14
	ADDI	SNDLANDWATER1,A14
	CALLA	ARENASND ;IN:A14 SNDID
	JRUC	CLTX

CLTNOWATER
	;MAKE SOUND
	MOVI	SNDLANDBIG1,A14
	MOVW	*A7(CDCSTATE),A2
	CMPI	CCIDMONDOHIT,A2
	JREQ	CLTSND
	MOVI	SNDLANDSMALL1,A14
CLTSND
	MOVW	*A7(CDINPNUM),A2
	ADD	A2,A14
	CALLA	MAKESND ;IN:A14 SNDID

CLTX
	MMFM	SP,A7,A10,A11
	RETS

***
*** ----------------------------------------------------------------------
***

**
** CARTHROWUP
**
** IN
**   A0 OBJ
**   A2 CCID -- SEE DRC.I
**   A7 CD
**
** NOTE: CALL EITHER CARDISABLE OR CARTHROWUP BUT NOT BOTH
**
** JFL 20 OCT 92
** JFL 03 NOV 92; APRI
** JFL 16 FEB 93; CCNEWSTATE ZEROS PRI BUG FIX
**
CARTHROWUP
	MMTM	SP,A1

	MOVL	*A0(OGCOL),A14
	JRNZ	CTUX

	;CHECK / SET ANIM PRI
	MOVK	APRITHROWUP,A3
	MOVW	*A7(CDANIPRI),A14
	CMP	A3,A14
	JRGT	CTUX

	;SET NEW STATE
	CALLR	CCNEWSTATE ;IN: A0,A2,A7 OBJ,CCID,CD
	JRC	CTUX

	MOVW	A3,*A7(CDANIPRI)

	;SET FLAG
	MOVW	*A7(CDFLAGS),A14
	BTST	B_CDFINTHROW,A14
	JRNZ	CTUX
	ORI	M_CDFINTHROW,A14
	MOVW	A14,*A7(CDFLAGS)

	;SET YZ SCALING
	;MOVK	STYPYZ,A14
	;MOVW	A14,*A0(OSCALETYPE)

	;GET FUNCTION TO CALL
	MOVE	A2,A1
	SLL	16,A1	
	SRL	16-TUTSIZEOF,A1			;SIZEOF CARTOSSTBL
	ADDI	CARTOSSTBL,A1
	.IF DEBUG
	CMPI	CARTOSSTBLX,A1
	TLOCKON	HS
	.ENDIF ;DEBUG

	;DO FUNCTION
	MOVL	*A1(TUTFUN),A14
	JRZ	CTUNOFUN
	MOVE	A14,B8
	EXGPC	B8
CTUNOFUN

	;LAUNCH
	MOVL	*A1(TUTYVEL),A3
	JRN	CTUNOSPEED			;USE FIXED THROW VEL

	;ADD IN SPEED
	MOVW	*A7(CDTOTMAG),A14
	SLL	VELSHIFT-1,A14
	ADD	A14,A3
	CMPI	TOSSMAXYVEL,A3
	JRLE	CTUYVOK
	MOVI	TOSSMAXYVEL,A3
CTUYVOK
	NEG	A3   				;MAKE SURE ITS UP
CTUNOSPEED
	MOVW	*A0(OSCALEMUL),A14
	SLL	4,A14			;SIZEOF NLINEARMULTBL
	ADDI	NLINEARMULTBL,A14
	CMPI	NLINEARMULTBLX,A14
	JRHS	CTUNOSCALE

	;GET NEW SCALE VALUE & SCALE YVEL
	MOVW	*A14,A14
	SETF	12,1,1
	MPYS	A14,A3
	SETF	32,1,1
	SRA	MPYSCALE,A3

CTUNOSCALE
	MOVL	A3,*A0(OYVEL)
	;MOVL	A3,*A0(OYVAL)			;FIRST FRAME
	MOVL	*A1(TUTYACC),*A0(OYACC)

	;TAKE AWAY PLAYER CONTROL
	MOVL	*A1(TUTCARINP),A1	
	JRZ	CTUNOINP
	CLR	A14
	MOVW	A14,*A7(CDALTTIME)		;DUR
	MOVW	*A7(CDFLAGS),A2
	MOVE	A7,A3
	CALLA	ALTINPHANDLER ;IN:A1,A2,A3 HANDLER,CDF,CD

CTUNOINP

	;SET UP GROUND COLLISION VECTOR
	MOVI	CCABORTLOADA7,A2	
	MOVE	A8,A1			;SAVE
	MOVE	A0,A8
	MOVI	SETGCOL,B8 ;IN:A2,A8,B8 GCOL(),OBJ,PC
	EXGPC	B8
	MOVE	A1,A8			;RESTORE
     	
CTUX
	MMFM	SP,A1
	RETS


NLINEARMULTBL
	.WORD	01H,01H,02H,04H,05H,06H,08H,09H,0BH
	.WORD	0CH,0DH,0FH,010H,012H,013H,014H,016H,017H
	.WORD	019H,01AH,01BH,01DH,01EH,020H,021H,022H,024H
	.WORD	025H,027H,028H,029H,02BH,02CH,02EH,02FH,030H
	.WORD	032H,033H,035H,036H,037H,039H,03AH,03CH,03DH
	.WORD	03EH,040H,041H,043H,044H,045H,047H,048H,04AH
	.WORD	04BH,04CH,04EH,04FH,051H,052H,053H,055H,056H
	.WORD	058H,059H,05AH,05CH,05DH,05FH,060H,061H,063H
	.WORD	064H,066H,067H,068H,06AH,06BH,06DH,06EH,06FH
	.WORD	071H,072H,074H,075H,076H,078H,079H,07BH,07CH
	.WORD	07DH,07FH,080H,082H,083H,084H,086H,087H,089H
	.WORD	08AH,08BH,08DH,08EH,090H,091H,092H,094H,095H
	.WORD	097H,098H,099H,09BH,09CH,09EH,09FH,0A0H,0A2H
	.WORD	0A3H,0A5H,0A6H,0A7H,0A9H,0AAH,0ACH,0ADH,0AEH
	.WORD	0B0H,0B1H,0B3H,0B4H,0B5H,0B7H,0B8H,0BAH,0BBH
	.WORD	0BCH,0BEH,0BFH,0C1H,0C2H,0C3H,0C5H,0C6H,0C8H
	.WORD	0C9H,0CAH,0CCH,0CDH,0CFH,0D0H,0D1H,0D3H,0D4H
	.WORD	0D6H,0D7H,0D8H,0DAH,0DBH,0DDH,0DEH,0DFH,0E1H
	.WORD	0E2H,0E4H,0E5H,0E6H,0E8H,0E9H,0EBH,0ECH,0EDH
	.WORD	0EFH,0F0H,0F2H,0F3H,0F4H,0F6H,0F7H,0F9H,0FAH
	.WORD	0FBH,0FDH,0FEH,0100H,0100H,0100H,0100H,0100H,0100H
NLINEARMULTBLX

**
** CARDISABLE
**
** IN
**   A0 OBJ
**   A2 TIME:CCID -- SEE DRC.I
**   A7 CD
**
** NOTE: CALL EITHER CARDISABLE OR CARTHROWUP BUT NOT BOTH
**
** JFL 22 OCT 92
**
CARDISABLE
	MMTM	SP,A1

	CALLR	CCNEWSTATE ;IN: A0,A2,A7 OBJ,CCID,CD
	JRC	CDX

	;SET UP FOR NEW ANIMATION
	MOVE	A2,A1
	SLL	16,A1	
	SRL	16-DTSIZEOF,A1			;SIZEOF CARDISABLETBL
	ADDI	CARDISABLETBL,A1
	.IF DEBUG
	CMPI	CARDISABLETBLX,A1
	TLOCKON	HS
	.ENDIF ;DEBUG

 	;CHECK FOR FUNCT TO CALL
	MOVL	*A1(DTFUN),A14
	JRZ	CDNOFUN
	MOVE	A14,B8
	EXGPC	B8 ;IN A0,A2-A3,A7,B8 OBJ,SC,CD,PC

	;NOTE: IF FUNCTION WANTS TO SET AN ANIMATION THEN DO THIS
	;MOVW	*A7(CDANIPRI),A14	;GET RUNNING ANIM PRI
	;MOVK	APRIDISABLE,A2
	;CMP	A2,A14			;CHECK IF CUR ANIM IS HIGHER PRI
	;JRGT	CDFUNX			;DONT CHANGE
	;MOVW	A2,*A7(CDANIPRI)	;SET ANIM PRI
	;MOVI	SASXXXX,A14
	;MOVL	A14,*A7(CDSAS)
	;MOVL	@WAVEIRQS,A14
	;MOVL	A14,*A0(ANIMIRQ)
CDNOFUN

	;TAKE AWAY PLAYER CONTROL
	MOVL	*A1(DTCARINP),A1	
	JRZ	DTNOINP
	SRL	16,A2
	MOVW	A2,*A7(CDALTTIME)		;DUR

	;CHECK IF CAR IS DEAD
	MOVW	*A7(CDDAMAGE),A14
	JRNZ	DTNOINP

	;CAR IS ALIVE, TAKE AWAY CONTROL
	MOVW	*A7(CDFLAGS),A2
	MOVE	A7,A3
	CALLA	ALTINPHANDLER ;IN:A1,A2,A3 HANDLER,CDF,CD

DTNOINP
	;STOP EXTERNAL FORCES, LIKE TURBO
	SETF	1,0,0
	MOVK	1,A14
	MOVE	A14,*A7(CDFLAGS+B_CDFSTOPEXT),0
	SETF	16,1,0

CDX
	MMFM	SP,A1
	RETS

* EOF
