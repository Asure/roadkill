***
*** FILE: DRATT.ASM
***
*** JFL 16 OCT 92
*** JFL 15 JAN 93
*** JFL 16 FEB 93
***
	.MLIB	"APMACS.LIB"
	.FILE	"DRATT.ASM"
	.TITLE	" <<< AMUSEMENT PARK -- ATTRACT MODE ROUTINES >>>"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

***********************************************************************
*								         *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

	.INCLUDE	"AP.H"
	.INCLUDE	"DRB.I"
	.INCLUDE	"DRINP.I"
	.INCLUDE	"DR.I"
	.INCLUDE	"DRP.I"
	.INCLUDE	"DRPAL.I"
	.INCLUDE	"DRSND.I"
	.INCLUDE	"DRT.I"
	.INCLUDE	"IMGTBLB1.GLO"

**
** COMPILE FLAGS
**

** OTHERS USE
	.DEF	ATTRACT_MODE		;APATT.ASM
	.DEF	ON_CRED
	.DEF	AMODE_LOOPS
	.DEF	ATT_MODE_CREDIT	;DMA.ASM
	.DEF	HSTD_ENTRY_POINT ;DMA.ASM
	.DEF	STARTNEWATTRACT		;DRATT.ASM
	.DEF	GAMEOVER		;DRATT.ASM
	.DEF	STARTGUN		;DRATT.ASM
	.DEF	STARTGUNSUB		;DRATT.ASM

** WE USE
	.REF	WARMSET		;AP.ASM
	.REF	WIPEOUT		;AP.ASM
	.REF	GAMEUNITS	;APCOIN.ASM
	.REF	STARTPLANES	;DRB.ASM
	.REF	INITWAVE	;DRI.ASM
	.REF	CHECKINPUT	;DR.ASM
	.REF	SCRATCH2K	;DR.ASM
	.REF	INITINPUT	;DRINP.ASM
	.REF	FREEALLOBJS	;APD.ASM
	.REF	PLAYERDATA	;DR.ASM
	.REF	DRMAIN		;DR.ASM
	.REF	SCORELIST	;APD.ASM
	.REF	INSPLANE	;APD.ASM
	.REF	ASSEMIPICK	;DRA.ASM
	.REF	ASFOURPICK	;DRA.ASM
	.REF	ASCHEVPICK	;DRA.ASM
	.REF	ASBMWPICK	;DRA.ASM
	.REF	ASSEMIDRIVER	;DRA.ASM
	.REF	ASFOURDRIVER	;DRA.ASM
	.REF	ASCHEVDRIVER	;DRA.ASM
	.REF	ASBMWDRIVER	;DRA.ASM
	.REF	ASTROPHY	;DRA.ASM
	.REF	ASPRSTART	;DRA.ASM
	.REF	CKINSANI	;APD.ASM
	.REF	FGLISTS		;APD.ASM
	.REF	ANIMP		;APC.ASM
	.REF	WINNER		;DR.ASM	
	.REF	KILL		;APPROC.ASM
	.REF	MAKESND		;DRSND.ASM
	.REF	RANDOMA2	;APUTIL.ASM
	.REF	GETPLAYERINPDATA ;DRINP.ASM
	.REF 	INPUTPROC 	;DRINP.ASM

** WE USE -- RAM
	.REF	DRG		;DRRAM.ASM

	.BSS	ON_CRED,16
	.BSS	AMODE_LOOPS,16		;LOOP COUNTER FOR ATTRACT MODE

	.TEXT
	.EVEN

**
** DEFINES
**
MAXCHOICES	EQU	32
MINTOMOVESEL	EQU	1000


**
** ATTRACT DATA STRUCT -- TEMP
**
** JFL 16 NOV 92
**
ATDPACT0	EQU	000H		;UHW
ATDPACT1	EQU	010H		;UHW
ATDPACT2	EQU	020H		;UHW
ATDSTATE	EQU	030H		;UHW
ATDCIT		EQU	040H		;UHL
ATDSELDATA	EQU	060H		;UHL
ATDFLAGS	EQU	080H		;UHW
ATDSELNUM	EQU	090H		;UHW
ATDSTRPROCS	EQU	0A0H		;UHL
ATDAOBJS	EQU	0C0H		;
ATDAOBJSX	EQU	ATDAOBJS+MAXCHOICES*20H
ATDCHOICES	EQU	ATDAOBJSX
ATDCHX		EQU	ATDCHOICES+MAXCHOICES*10H
ATDBLANKOBJ	EQU	ATDCHX
ATDBLKX		EQU	ATDBLANKOBJ+COSIZE
ATDSIZE		EQU	ATDBLKX

TXTIDPL1	EQU	0
TXTIDPL2	EQU	1
TXTIDPL3	EQU	2
TXTIDNONE	EQU	32

**
** ATTRACT_MODE
**
** JFL 16 OCT 92; FROM DREDD
** JFL 16 FEB 93
**
ATTRACT_MODE
	;
	;INIT OUR SYSTEM
	;
	DISPOFF

	MOVI	INAMODE,A14
	MOVW	A14,@GAME_STATE

	CLR	A14
	MOVW	A14,@NOAUTOE

	CLR	A0
	MOVW	A0,@GAMEUNITS		;CLEAR OUT ANY POTENTIAL GAME UNITS
	MOVW	A0,@AMODE_LOOPS		;CLEAR THE LOOP COUNTER
	CALLA	INITWAVE
	CALLA	INITINPUT
	CALLR	SELINIT

	MOVK	PLIDTITLE,A2
	CALLR	STARTPLANES ;IN: A2 PLANEID

	;SET ERASE COLOR
	MOVI	TITLEERASE,A14
	MOVW	A14,@IRQSKYE

	;START A SONG
	MOVI	SNDSONGTHRASHROCK,A14
	CALLA	MAKESND ;IN:A14 SNDID

	CREATEP	PID_ATT,INPUTPROC
	CREATE	PID_ATT,ANIMP

	MOVI	SCRATCH2K,A4
	MOVI	TITLEANIMLIST,A6
	CALLR	ADDONESELANI2 ;IN:A1,A4,A5,A6 SC,ATD,SC,ANIMDAT OUT:A0 OBJ
	MOVW	*A0(OFLAGS),A14
	ORI	M_NOTFG,A14
	MOVW	A14,*A0(OFLAGS)

	DISPON

	SLEEP	50

	MOVI	60,A8
AMLOOP0
	SLEEP	2
	CALLR	DOGAME
	JRNE	ATT_MODE_CREDIT
	DSJ	A8,AMLOOP0
		     

	;START NEW ATTRACT SCREEN
	;MOVK	PLIDTITLE,A2
	;CALLR	STARTNEWATTRACT ;IN:A2 PLANEID

AMLOOP

	SLEEP	2
	CALLR	DOGAME
	JRNE	ATT_MODE_CREDIT
	JRUC	AMLOOP


ATT_MODE_CREDIT
HSTD_ENTRY_POINT
	
	.IF 0 & DEBUG & TUNIT
	NOP
	MOVW	@AMLOOP,A14 ;ROMWRITE DEBUG
	MOVW	A14,@AMLOOP ;ROMWRITE DEBUG
	NOP
	.ENDIF

	CLR	A14
	MOVW	A14,@NOAUTOE

	JAUC	SELECTMAIN

**
** WIN_MODE
**
** IN
**   A8 INP
**   A9 CAR
**
** JFL 16 OCT 92; FROM DREDD
**
WIN_MODE
	
	CLR	A14
	MOVW	A14,@NOAUTOE

	CALLA	INITWAVE
	CALLA	INITINPUT

	;START NEW ATTRACT SCREEN
	MOVK	PLIDWIN,A2
	CALLR	STARTPLANES ;IN: A2 PLANEID

	DISPON

	;SONG
	MOVI	SNDSONGTROPHY,A14
	CALLA	MAKESND ;IN:A14 SNDID

	CREATEP	PID_ATT,INPUTPROC
	CREATE	PID_ATT,ANIMP

	CALLR	SELINIT
	MOVI	SCRATCH2K,A4

	SLL	6,A9			;SIZEOF WINNERANIMS
	ADDI	WINNERANIMS,A9
	
	.IF DEBUG
	CMPI	WINNERANIMSX,A9
	TLOCKON	HS
	.ENDIF ;DEBUG

	MOVK	1,A11
WMALOOP
	MOVE	A4,A6
	ADDI	ATDSIZE,A6
	MOVL	*A9+,*A6+
	MOVL	*A9+,A14
	MOVL	A14,*A6
	
	MOVE	A4,A6
	ADDI	ATDSIZE,A6
	
	CALLR	ADDONESELANI ;IN:A1,A4,A5,A6 SC,ATD,SC,ANIMDAT OUT:A0 OBJ

	DSJ	A11,WMALOOP

	
	MOVI	TROPHYANIMS,A9
	MOVK	2,A11
WMBLOOP
	MOVE	A4,A6
	ADDI	ATDSIZE,A6
	MOVL	*A9+,*A6+
	MOVL	*A9+,A14
	MOVL	A14,*A6
	
	MOVE	A4,A6
	ADDI	ATDSIZE,A6
	
	CALLR	ADDONESELANI ;IN:A1,A4,A5,A6 SC,ATD,SC,ANIMDAT OUT:A0 OBJ

	DSJ	A11,WMBLOOP

	
	MOVI	60*8,A8
WMLOOP
	SLEEP	2
	CALLR	DOGAME
	JRNE	WMDONE
	DSJ	A8,WMLOOP

WMDONE
	DISPOFF
	CALLA	WIPEOUT
	CREATE	PID_ATT,ATTRACT_MODE
	DIE
	
**
** PICKARENA
**
** JFL 10 DEC 92
**
PICKARENA
	;SET ARENA FOR NEXT WAVE
	MOVI	DRG,A2
	MOVW	*A2(DRGARENA),A14
	JRN	PAOUTOFORDER
	DEC	A14
	JRNN	PAOK
PALAST
	MOVI	ADIDARENAX-1,A14
PAOK
	NOP
	MOVW	A14,*A2(DRGARENA)
	RETS
PAOUTOFORDER
	SLL	25,A14
	SRL	25,A14
	CMPI	ADIDARENAX-1,A14
	JRHI	PALAST
	JRUC	PAOK


**
** DOGAME
**
** RETURN NE TO DO GAME, ELSE EQ
**
** JFL 16 OCT 92 
** JFL 26 OCT 92 
** JFL 15 JAN 93
**
DOGAME
	MMTM	SP,A0,A1,A4,A7

	MOVK	DRPLAYERS,A1

DGLOOP
	MOVE	A1,A2
	DEC	A2
	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	*A3(INPBSTART),A14
	JRNZ	DGX

	DSJ	A1,DGLOOP

	CLR	A14			;SET EQ FLAG
DGX
	MMFM	SP,A0,A1,A4,A7
	RETS

	
**
** GETPLAYERDATA
**
** IN
**   A2 PLAYER INDEX 0..2
** OUT
**   Z == NOT SUCCESSFULL
**   A2 PLAYER DATA
**   A3 PLAYER INPUT DATA OR ZERO
**
** JFL 16 NOV 92
** JFL 15 JAN 93
**
GETPLAYERDATA

	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	*A3(INPBSTART),A14
	JRZ	GPDX
	MOVE	A3,A14		;SAVE

	;GET PLAYER DATA STRUCT
	MOVI	PLDSIZE,A3
	MPYU	A2,A3
	ADDI	PLAYERDATA,A3
	MOVE	A3,A2
	
	
	MOVE	A14,A3		;RESTORE

GPDX
	RETS


**
** GAMEOVER
**
** JFL 15 JAN 93
**
GAMEOVER
	JRUC	GOATT
	
	;IS THERE A WINNER
	MOVL	@WINNER,A0
	JRZ	GOATT
	SRL	1,A0
	JRC	GOATT
	SLL	1,A0

	;CHECK IF WINNER WAS A PLAYER
	MOVW	*A0(OID),A14
	SLL	SL_POID,A14
	SRL	SR_POID,A14
	JRZ	GOATT

	;WHO WAS DRIVING THE CAR
	MOVL	*A0(OCAR),A1
	MOVW	*A1(CDDRIVERID),A9
	
	DISPOFF
	CALLA	WIPEOUT

	CREATE	PID_ATT,WIN_MODE
	RETS	

GOATT
	DISPOFF
	CALLA	WIPEOUT

	CREATE	PID_ATT,ATTRACT_MODE
	RETS

**
** STARTNEWATTRACT
**
** JFL 16 NOV 92
** JFL 24 JAN 93; PUSHST & POPST
**
STARTNEWATTRACT
	PUSHST
	DINT
	DISPOFF

	;CLEAR OLD OBJS
	CALLA	FREEALLOBJS ;IN:A0 LIST
	CALLA	STARTPLANES ;IN: A2 PLANEID

	DISPON
	POPST

	RETS

**
** SELINIT
**
SELINIT
	;CLEAR THE ATTRACT DATA BLOCK
	MOVI	SCRATCH2K,A4
	MOVE	A4,A2
	MOVI	ATDSIZE/16,A3
	CLR	A14
SMLOOP0
	MOVW	A14,*A2+
	DSJS	A3,SMLOOP0

	;SET UP OUR INIT OBJ
	MOVE	A4,A3
	ADDI	ATDBLANKOBJ,A3
	MOVI	OBJATTBLANK,A2
	MOVI	COSIZE/32,A5
SMBOLOOP
	MOVL	*A2+,*A3+
	DSJS	A5,SMBOLOOP

	RETS

**
** SELECTMAIN
**
** JFL 16 NOV 92
**
SELECTMAIN

	;SET ERASE COLOR
	MOVI	SELECTERASE,A14
	MOVW	A14,@IRQSKYE

	MOVI	SCRATCH2K,A4

	;START NEW SCREEN
	MOVK	PLIDPICKCAR,A2
	CALLA	STARTNEWATTRACT ;IN:A2 PLANEID
	
	;SONG
	MOVI	SNDSONGBETWEEN,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;SET UP CAR INIT TBL
	MOVI	CARINITTBL,A14
	MOVL	A14,*A4(ATDCIT)

	MOVI	CARSELDATA,A2
	MOVL	A2,*A4(ATDSELDATA)

	;ADD TEXT
	CALLR	STARTOFFTEXT

SMS0LOOP
	;CHECK IF PLAYER IS NOT ACTIVE
	;LAUNCH PROCESSES FOR EACH ACTIVE PLAYER
	CLR	A5
	MOVE	A4,A0
	ADDI	ATDPACT0,A0
SMCKPACT
	MOVW	*A0,A14
	JRNZ	SMCKPNEXT

	;CHECK IF ITS ACTIVE
	MOVE	A5,A2
	CALLR	GETPLAYERDATA ;IN:A2 PLAYER OUT:A2,A3 DATA/ZERO,INPDAT
	JRZ	SMCKPNEXT
	
	;MARK ACTIVE, LAUNCH PROCESS TO HANDLE
	MOVK	1,A14
	MOVW	A14,*A0

	;SET UP FOR PROC
	MOVE	A5,A11
	MOVE	A2,A8
	MOVE	A3,A9
	MOVE	A4,A10
	CREATE	PID_ATT,SELCARPROC ;A8,A9 PLD,INPDAT
	CALLR	PROCCLRDATA ;IN:A0 PROC
	
	;BUMP UP OUTSTANDING SELECTIONS
	MOVW	*A4(ATDSTATE),A14
	INC	A14
	MOVW	A14,*A4(ATDSTATE)

SMCKPNEXT
	ADDK	16,A0
	INC	A5
	CMPI	DRPLAYERS,A5
	JRLT	SMCKPACT
	
	;CHECK IF WERE DONE
	MOVW	*A4(ATDSTATE),A14
	JRNZ	SMCKNOTDONE

	;MAKE SURE AT LEAST 3 PLAYERS
	MOVW	*A4(ATDSELNUM),A14
	CMPI	PLAYERCOUNTTOSTART,A14
	JRGE	SMSTATE1
	
SMCKNOTDONE
	MMTM	A12,A0,A1,A2,A3,A4,A5,A6,A7
	SLEEP	1
	MMFM	A12,A0,A1,A2,A3,A4,A5,A6,A7
	JRUC	SMS0LOOP

SMSTATE1
	MMTM	A12,A4

	SLEEP	55*1

	MMFM	A12,A4

	MOVK	TXTIDNONE,A2
	CALLR	KILLTEXTID ;IN:A2,A4 ID,ATD

	.IF 0 ;XXXX
	MOVI	SETTEXT,A2
	MOVI	[SETTXTY,SETTXTX],A3
	MOVK	TXTIDNONE,A14
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 STRDATA,Y:X,ATD,ID

	MMTM	A12,A4
	SLEEP	60*2
	MMFM	A12,A4

	MOVK	TXTIDNONE,A2
	CALLR	KILLTEXTID ;IN:A2,A4 ID,ATD

	MOVI	GOTEXT,A2
	MOVI	[GOTXTY,GOTXTX],A3
	MOVK	TXTIDNONE,A14
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 STRDATA,Y:X,ATD,ID

	SLEEP	30
	.ENDIF ;XXXX

	CALLR	PICKARENA
	JAUC	DRMAIN

**
** IN
**   A4 ATD
**
STARTOFFTEXT

	;PLAYER 0
	MOVI	FREEPLAYTEXT,A2
	MOVL	@ROLLXYTBL,A3
	CLR	A14 ;MOVK TXTIDPL1,A14
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 SLD,Y:X,ATD,ID

	;PLAYER 1
	MOVI	FREEPLAYTEXT,A2
	MOVL	@ROLLXYTBL+32,A3
	MOVK	TXTIDPL2,A14
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 SLD,Y:X,ATD,ID

	;PLAYER 2
	MOVI	FREEPLAYTEXT,A2
	MOVL	@ROLLXYTBL+64,A3
	MOVK	TXTIDPL3,A14
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 SLD,Y:X,ATD,ID

	RETS


***
*** TEXT ------------------------------------------------------------------
***

**
** ADDSELTEXT
**
** IN
**   A2 STR DATA
**   A3 Y:X
**   A4 ATD
**  A14 ID
**
** JFL 17 NOV 92
**
ADDSELTEXT
	MMTM	SP,A1,A8,A9,A10

	MOVE	A14,A10
	MOVE	A3,A1

	;GET PTR TO BLOCK OF STRINGS
	MOVE	A2,A8
	JRZ	ASTX
	
ASTLOOP	
	;GET NEXT STRING
	MOVL	*A8(STRPTR),A3
	JRZ	ASTX

	MOVL	*A8(STRXY),A3
	ADDXY	A1,A3

	MOVE	A10,A14
	CALLR	CREATESTRING ;IN:A3,A8,A14 Y:X OFFSET,STRDATA,ID

	;NEXT
	ADDI	STRSIZE,A8
	JRUC	ASTLOOP
ASTX
	MMFM	SP,A1,A8,A9,A10
	RETS

**
** IN
**   A2 ID
**   A4 ATD
**
KILLTEXTID
	MMTM	SP,A0,A1,A5
	MOVL	*A4(ATDSTRPROCS),A0
	JRZ	KTIX

	MOVE	A2,A5
	
KTILOOP
	;FOR NEXT
	MOVL	*A0(PDSTRLINK),A1

	CMPI	TXTIDNONE,A5
	JREQ	KTIKILL

	MOVW	*A0(PDSTRID),A14
	CMP	A5,A14
	JRNE	KTINEXT

KTIKILL
	CALLR	DESTROYSTRING ;IN:A0,A4 CONTROLLINGPROC,ATD
KTINEXT
	MOVE	A1,A0
	JRNZ	KTILOOP


KTIX
	MMFM	SP,A0,A1,A5
	RETS

**
** CREATESTRING
**
** IN
**   A3 Y:X
**   A8 STR DATA
**  A14 ID
**
** JFL 19 NOV 92
**
CREATESTRING
	MMTM	SP,A0,A1,A4,A5,A7,A9,A10,A11

	MOVE	A14,A10			;ID
	CLR	A9			;FIRST OBJ
	CLR	A7			;PREV
	MOVE	A3,A11
	MOVL	*A8(STRPTR),A3

ASTLOOP0
	MOVB	*A3,A14
	JRZ	ASTLOOP0BREAK
	
	;IS IT A SPECIAL CAR
	CMPI	' ',A14
	JRNE	ASTNOTSPC
	ADDI	FONTSPACEOFFXY,A11
	JRUC	ASTL0NEXT

ASTNOTSPC
	;GET IMAGE
	SLL	24,A14
	SRL	24,A14
	SUBI	'A',A14
	TLOCKON	N
	JRN	ASTLOOP0BREAK

	SLL	5,A14
	ADDI	SELFONTTBL,A14
	.IF DEBUG
	CMPI	SELFONTTBLX,A14
	TLOCKON	HS
	JRHS	ASTLOOP0BREAK
	.ENDIF ;DEBUG
	MOVL	*A14,A1

	;CREATE THE OBJ
	MOVE	A4,A5
	ADDI	ATDBLANKOBJ,A5
	MOVL	A1,*A5
	MOVI	DMAWNZ,A14
	MOVW	A14,*A5(COCTRL)
	CALLA	CREATE_OBJ

	MOVI	[100H,100H],A14
	MOVL	A14,*A0(OSCALEDMA)
	MOVL	A11,*A0(ODAG)
	ADDI	FONTNEXTOFFXY,A11

	;FIRST OBJ?
	MOVE	A9,A9
	JRNZ	ASTL0NOTFIRST

	;YES -- START OFF LINKS
	MOVE	A0,A9
	MOVE	A0,A7 			;PREV
	JRUC	ASTL0CONT

ASTL0NOTFIRST

	;LINK AFTER PREV
	MOVL	A0,*A7(OSLINK)
	MOVE	A0,A7			;PREV

ASTL0CONT

	;ADD IT TO THE PLANE
	MOVI	SCORELIST,B0
	CLR	A14			;WHICH FGLIST
	MOVB	A14,*A0(OPLANE)		;INSPLANE DOES NOT SET OPLANE
	CALLA	INSPLANE		;B0 plane ptr

ASTL0NEXT
	;NEXT LETTER
	ADDK	8,A3
	JRUC	ASTLOOP0

ASTLOOP0BREAK
	;CREATE THE HANDLER
	CREATE	PID_ATT,SELTEXTPROC
	CALLR	PROCCLRDATA ;IN:A0 PROC

	;SAVE FIRST OBJ
	MOVL	A9,*A0(PDSTROBJ)
	MOVW	A10,*A0(PDSTRID)

	;LINK IN TEXT PROCESS
	MOVL	*A4(ATDSTRPROCS),A14
	MOVL	A0,*A4(ATDSTRPROCS)
	MOVL	A14,*A0(PDSTRLINK)

	MMFM	SP,A0,A1,A4,A5,A7,A9,A10,A11
	RETS


**
** DESTROYSTRING
**
** IN
**   A0 PROCESS THAT CONTROLS STRING
**   A4 ATD
**
** JFL 19 NOV 92
**
DESTROYSTRING
	MOVE	A0,A2
	;FREE ALL THE LETTERS
	MOVL	*A0(PDSTROBJ),A0
	CALLR	KILLSLINKS
	MOVE	A2,A0

	;UNLINK FROM LIST
	MOVL	*A4(ATDSTRPROCS),A2
	JRZ	DSUNLD
	CMP	A2,A0
	JRNE	DSUNEXT

	;FIRST OBJ
	MOVL	*A0(PDSTRLINK),A14
	MOVL	A14,*A4(ATDSTRPROCS)
	JRUC	DSUNLD

DSUNEXT
	MOVE	A2,A3			;PREV
DSULOOP
	MOVL	*A2(PDSTRLINK),A2
	TLOCKON	Z
	JRZ	DSBADX
	CMP	A2,A0
	JRNE	DSUNEXT

DSUNL
	MOVL	*A0(PDSTRLINK),*A3(PDSTRLINK)

DSUNLD
	;KILL THE PROCESS
	CALLA	KILL
DSBADX
	RETS

**
** SELTEXTPROC
**
** IN
**   A8 STR DATA BLOCK
**   A9 FIRST OBJ
**
SELTEXTPROC
	MOVW	*A8(STRTIMEOFF),A14
	JRNZ	STPFIRST

STPHANG
	SLEEP	100
	JRUC	STPHANG

STPFIRST
	MOVW	*A9(OCTRL),A14
	MOVW	A14,*A13(PDSTRCTRL)
	JRN	STPON

	MOVW	*A8(STRTIMEOFF),A10
	JRUC	STPCOUNT

STPON
	MOVW	*A8(STRTIMEON),A10

STPCOUNT
	SLEEP	1
	DSJS	A10,STPCOUNT

	MOVE	A9,A0
	CALLR	ONOFFSLINKS

	JRUC	STPFIRST

**
**
**
ONOFFSLINKS
OOLLOOP
	MOVW	*A0(OCTRL),A14
	XORI	8000H,A14
	MOVW	A14,*A0(OCTRL)
	MOVL	*A0(OSLINK),A0
	JRNZ	OOLLOOP
	RETS

**
** IN
**   A0 PROC
**
PROCCLRDATA
	MMTM	SP,A1,A2
	MOVE	A0,A1
	ADDI	PDATA,A1
	MOVI	(PSDATA-PDATA-32)/32,A2
	CLR	A14
PCDLOOP
	MOVL	A14,*A1+
	DSJ	A2,PCDLOOP

	MMFM	SP,A1,A2
	RETS

	.IF 0 ; DEAD ------------------------------------------------------

***
*** ANIMS ------------------------------------------------------------------
***

**
** ADDSELANIMS
**
** IN
**   A2 SELECT DATA
**   A4 ATTRACT DATA
**
** JFL 17 NOV 92
**
ADDSELANIMS
	CLR	A3
	MOVL	*A2(SLDANIMS),A6

	;CHECK IF THIS HAS AN ANIM
	MOVL	*A6,A1
	JRZ	ASANEXT

ASALOOP
	CALLR	ADDONESELANI ;IN:A1,A4,A5,A6 SC,ATD,SC,ANIMDAT OUT:A0 OBJ

	;SAVE AOBJ
	MOVE	A3,A14
	SLL	5,A14
	ADD	A4,A14
	ADDI	ATDAOBJS,A14
	MOVL	A0,*A14

ASANEXT
	;NEXT
	ADDI	SLDANIMSIZE,A6
	INC	A3
	MOVW	*A2(SLDCOUNT),A14
	CMP	A14,A3
	JRLT	ASALOOP

	RETS

	.ENDIF ; DEAD -----------------------------------------------------

**
**
** ADDONESELANI
**
** IN
**   A6 POINTS TO .LONG ANIMSCRIPT,[Y:X]
**
ADDONESELANI
	;GET THE ANIMATION SCRIPT
	MOVL	*A6,A1

	;CREATE THE OBJ
	MOVE	A4,A5
	ADDI	ATDBLANKOBJ,A5
	MOVL	*A1,A14		;GET IMAGE
	MOVL	A14,*A5
	CALLA	CREATE_OBJ
	JRZ	ASAX

	;SET OBJECT STUFF
	MOVW	*A6(20H),*A0(OXPOS)
	MOVW	*A6(20H+10H),*A0(OZPOS)

	;ADD THE ANIM
	MOVL	A1,*A0(ANIMFRM)
	MOVL	A1,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI ;IN: A0 OBJ
	
	;ADD IT TO THE PLANE
	MOVI	FGLISTS,B0
	CLR	A14			;WHICH FGLIST
	MOVB	A14,*A0(OPLANE)		;INSPLANE DOES NOT SET OPLANE
	CALLA	INSPLANE		;B0 plane ptr
ASAX
	RETS

ADDONESELANI2
	;GET THE ANIMATION SCRIPT
	MOVL	*A6,A1

	;CREATE THE OBJ
	MOVE	A4,A5
	ADDI	ATDBLANKOBJ,A5
	MOVL	*A1,A14		;GET IMAGE
	MOVL	A14,*A5
	CALLA	CREATE_OBJ
	JRZ	ASA2X

	;SET OBJECT STUFF
	MOVW	*A6(20H),*A0(OXPOS)
	MOVW	*A6(20H+10H),*A0(OZPOS)
	MOVL	*A6(20H),*A0(ODAG)
	MOVI	[100H,100H],A14
	MOVL	A14,*A0(OSCALEDMA)

	;ADD THE ANIM
	MOVL	A1,*A0(ANIMFRM)
	MOVL	A1,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI ;IN: A0 OBJ
	
	;ADD IT TO THE PLANE
	MOVI	SCORELIST,B0
	CLR	A14			;WHICH FGLIST
	MOVB	A14,*A0(OPLANE)		;INSPLANE DOES NOT SET OPLANE
	CALLA	INSPLANE		;B0 plane ptr
ASA2X
	RETS


***
*** SELECTOR BOX ----------------------------------------------------------
***


**
** CREATESELBOX
**
** IN
**   A2 SELECT DATA
**   A8 PLAYER DATA
**   A9	INPUT BLOCK
**  A10 ATTRACT DATA
**
** JFL 16 NOV 92
** JFL 17 NOV 92
**
CREATESELBOX
	MMTM	SP,A0,A1,A4,A5,A6,A9

	;INIT TO NO SEL
	MOVI	-1,A14
	MOVW	A14,*A13(PDPLDSEL)

	;GET PTR TO FIRST PART LIST
	MOVL	*A2(SLDLIGHTS),A4	

CSBLOOP
	;GET FIRST IN LIST
	MOVL	*A4,A1
	JRZ	CSBX

	;CREATE OBJ
	MOVE	A10,A5
	ADDI	ATDBLANKOBJ,A5
	MOVL	A1,*A5
	MOVI	DMAWNZ,A14
	MOVW	A14,*A5(COCTRL)
	CALLA	CREATE_OBJ
	JRZ	CSBX

	;SETUP
	MOVL	*A2(SLDSIZEXY),*A0(OUSIZE)
	MOVL	*A2(SLDSIZEXY),*A0(OSIZE)
	MOVI	[100H,100H],A14
	MOVL	A14,*A0(OSCALEDMA)
	MOVI	DMACAL,A14
	MOVW	A14,*A0(OCTRL)

	;FREE PAL IT WAS CREATED WITH
	MOVE	A0,A5
	MOVW	*A0(OPAL),A0
	CALLA	FREEPAL
	MOVE	A5,A0

	;GET HIGHLIGHT COLOR	
	MOVW	*A13(PDPLDINP),A14
	SLL	5,A14
	ADDI	LIGHTPALCONSTTBL,A14
	MOVL	*A14,A14
	MOVL	A14,*A0(OPAL)

	;ADD IT TO THE PLANE
	MOVI	BGLISTS,B0
	CLR	A14			;WHICH FGLIST
	MOVB	A14,*A0(OPLANE)		;INSPLANE DOES NOT SET OPLANE
	MOVI	256,A14			;BEYOND BACKGROUND VALUES
	MOVL	A14,*A0(OZVAL)
	CALLA	INSPLANE		;B0 plane ptr

	;TURN OFF FOR NOW
	MOVW	*A0(OCTRL),A14
	ANDNI	DMAGO,A14
	MOVW	A14,*A0(OCTRL)
	
	;HANDLE REST OF OBJECT
	MOVL	*A4(ROLFUN),A14
	JRZ	CSBNEXT
       	CALL	A14

CSBNEXT
	;NEXT
	ADDI	ROLSIZE,A4
	JRUC	CSBLOOP
CSBX
	MMFM	SP,A0,A1,A4,A5,A6,A9
	RETS


**
** FIRSTLIGHT
**
FIRSTLIGHT
	;SAVE THE OBJ
	MOVL	A0,*A13(PDPLDLIGHT)
	MOVE	A0,A6			;PREV

	;SET XY
	MOVW	*A13(PDPLDINP),A14
	SLL	5,A14
	MOVE	A14,A7
	ADDI	ROLLXYTBL,A7
	ADDI	LIGHTXYTBL,A14
	MOVL	*A14,A14
	MOVL	*A7,A7
	ADDXY	A7,A14
	MOVW	A14,*A0(OXPOS)
	SRL	16,A14
	MOVW	A14,*A0(OZPOS)

	RETS
	
**
** NEXTLIGHT
**
NEXTLIGHT
	;SAVE THE OBJ
	MOVL	A0,*A6(OSLINK)

	;SET XY
	MOVW	*A6(OXPOS),A2
	MOVW	*A4(ROLOFF),A14
	ADD	A2,A14
	MOVW	A14,*A0(OXPOS)
	MOVW	*A6(OZPOS),A2
	MOVW	*A4(ROLOFF+10H),A14
	ADD	A2,A14
	MOVW	A14,*A0(OZPOS)

	MOVE	A0,A6
	RETS

**
** IN
**   A2 SLD
**   A3 WHICH ONE
**
STARTROLL

	MMTM	SP,A4,A6,A9

	;GET PTR TO FIRST PART LIST
	MOVL	*A2(SLDROLL),A4	
	SLL	5,A3			;SIZEOF ROL
	ADD	A3,A4
	MOVL	*A4,A4

SRLOOP
	;GET FIRST ANIM IN LIST
	MOVL	*A4,A1
	JRZ	SRX

	;CREATE OBJ
	MOVE	A10,A5
	ADDI	ATDBLANKOBJ,A5
	MOVL	*A1,A14
	MOVL	A14,*A5
	MOVI	DMAWNZ,A14
	MOVW	A14,*A5(COCTRL)
	CALLA	CREATE_OBJ
	JRZ	SRX

	;ADD IT TO THE PLANE
	MOVI	FGLISTS,B0
	CLR	A14			;WHICH FGLIST
	MOVB	A14,*A0(OPLANE)		;INSPLANE DOES NOT SET OPLANE
	CALLA	INSPLANE		;B0 plane ptr

	;ADD THE ANIM
	MOVL	A1,*A0(ANIMFRM)
	MOVL	A1,*A0(ANIMSCR)
	MOVK	1,A14
	MOVW	A14,*A0(ANIMSLPB)
	CALLA	CKINSANI ;IN: A0 OBJ

	;HANDLE REST OF OBJECT
	MOVW	*A4(ROLOFF),*A0(OXPOS)
	MOVW	*A4(ROLOFF+10H),*A0(OZPOS)
	MOVL	*A4(ROLFUN),A14
	JRZ	SRNEXT
       	CALL	A14

SRNEXT
	;NEXT
	ADDI	ROLSIZE,A4
	JRUC	SRLOOP
SRX
	MMFM	SP,A4,A6,A9
	RETS
	

**
** FIRSTROLL
**
FIRSTROLL
	;SAVE THE OBJ
	MOVL	A0,*A13(PDPLDOBJ)
	MOVE	A0,A6			;PREV

	;SETUP
	MOVI	[100H,100H],A14
	MOVL	A14,*A0(OSCALEDMA)

	;GET POSITION
	MOVW	*A13(PDPLDINP),A2
	SLL	5,A2
	ADDI	ROLLXYTBL,A2
	MOVL	*A2(0),*A0(ODATA)

	;ADD IN OFFSET
	MOVW	*A2,A14
	MOVW	*A0(OXPOS),A3
	ADD	A14,A3
	MOVW	A3,*A0(OXPOS)
	MOVW	*A2(10H),A14
	MOVW	*A0(OZPOS),A3
	ADD	A14,A3
	MOVW	A3,*A0(OZPOS)

	RETS

**
** NEXTROLL
**
NEXTROLL
	;SAVE THE OBJ
	MOVL	A0,*A6(OSLINK)

	;SETUP
	MOVL	*A6(OSCALEDMA),*A0(OSCALEDMA)

	;ADD IN OFFSET
	MOVE	A6,A2
	ADDI	ODATA,A2

	MOVW	*A2,A14
	MOVW	*A0(OXPOS),A3
	ADD	A14,A3
	MOVW	A3,*A0(OXPOS)
	MOVW	*A2(10H),A14
	MOVW	*A0(OZPOS),A3
	ADD	A14,A3
	MOVW	A3,*A0(OZPOS)

	MOVE	A0,A6
	RETS


**
** MOVESELBOX
**
** IN
**   A0 SCRATCH
**   A2 SELECT DATA
**   A7 SCRATCH
**   A9 INP
**  A10 ATTRACT DATA
**
** JFL 16 NOV 92
** JFL 19 NOV 92
**
MOVESELBOX

	;GET WHEEL CHANGE & SEE IF ITS ENOUGH
	MOVW	*A9(INPWHEELMAG),A3
	MOVW	*A13(PDPLDMAG),A14
	ADD	A14,A3
	MOVW	A3,*A13(PDPLDMAG)
	MOVE	A3,A14
	ABS	A14
	CMPI	MINTOMOVESEL,A14
	JRLT	MSBX

	;RESET
	CLR	A14
	MOVW	A14,*A13(PDPLDMAG)

	;FIGURE DIR TO MOVE
	SRA	31,A3				;GET SIGN ONLY
	SLL	1,A3				;0 OR -2
	INC	A3				;+1 OR -1
	NEG	A3
	
	;GET NEXT AVAIL SEL
	MOVW	*A2(SLDCOUNT),A4	
	MOVW	*A13(PDPLDSEL),A7
MSBLOOP
	ADD	A3,A7
	JRN	MSBTOP
	CMP	A4,A7 
	JRLT	MSBSET
	CLR	A7
	JRUC	MSBSET
MSBTOP
	MOVE	A4,A7
	DEC	A7
MSBSET

	;CHECK IF THIS IS AVAIL
	MOVE	A7,A14	
	SLL	4,A14				;SIZEOF ATDCHOICES
	ADD	A10,A14
	ADDI	ATDCHOICES,A14
	MOVW	*A14,A0
	JRNZ	MSBLOOP
	
	;CLAIM THIS CHOICE
	MOVK	1,A0
	MOVW	A0,*A14

	;UNCLAIM LAST CHOICE
	MOVW	*A13(PDPLDSEL),A14
	JRN	MSBNOLAST
	SLL	4,A14				;SIZEOF ATDCHOICES
	ADD	A10,A14
	ADDI	ATDCHOICES,A14
	CLR	A0
	MOVW	A0,*A14
MSBNOLAST

	;REMEMBER CHOICE
	MOVW	A7,*A13(PDPLDSEL)

	;
	;CHANGE THE DISPLAY
	;

	;KILL PREVIOUS
	MOVL	*A13(PDPLDOBJ),A0
	CALLR	KILLSLINKS

	;START NEW
	MOVE	A7,A3
	CALLR	STARTROLL ;A2,A3 SLD,ROLLINDEX

	;TRIGGER SOUND
	MOVI	SNDCHOSEN,A14
	CALLA	MAKESND ;IN:A14 SNDID


MSBX
	RETS


***
*** BUTTONS ----------------------------------------------------------------
***

**
** WAITSELBUTTONUP -- JSRP
**
** JFL 16 NOV 92
**
WAITSELBUTTONUP

	;WAIT FOR BUTTON TO BE RELEASED
	MOVW	*A9(INPB1),A14
	SRL	1,A14
	JRNC	WSBUX

	SLEEP	1
	JRUC	WAITSELBUTTONUP
WSBUX
	RETP

**
** WAITSELBUTTONDOWN -- JSRP
**
** JFL 16 NOV 92
**
WAITSELBUTTONDOWN

	;WAIT FOR BUTTON TO BE RELEASED
	MOVW	*A9(INPB1),A14
	SRL	1,A14
	JRC	WSBDX

	SLEEP	1
	JRUC	WAITSELBUTTONDOWN
WSBDX
	RETP

**
** IN
**   A0 OBJ
**
KILLSLINKS
	MOVE	A0,A8
	JRZ	KSLX
KSLLOOP
	MOVL	*A0(OSLINK),A0
	CALLA	ZAP_OBJ ;IN:A8
	MOVE	A0,A8
	JRNZ	KSLLOOP
KSLX
	RETS

**
** GETBUTTON
**
** JFL 16 NOV 92
**
GETSELBUTTON
	MOVW	*A9(INPB1),A14
	SRL	1,A14
	RETS

***
*** PLAYER SELECTION PROC --------------------------------------------------
***

**
** SELCARPROC
**
** IN
**   A8 PLAYER DATA
**   A9	INPUT BLOCK
**  A10 ATTRACT DATA
**  A11 PLAYER INPUT NUMBER
**
** JFL 16 NOV 92
**
SELCARPROC
	MOVW	A11,*A13(PDPLDINP)

	MOVI	CARSELDATA,A2
	CALLR	CREATESELBOX ;IN:A2,A10 SELDAT,PLD,INP,ATD

	;TRIGGER SOUND
	MOVW	*A13(PDPLDINP),A14
	ADDI	SNDCHOOSING1,A14
	CALLA	MAKESND ;IN:A14 SNDID

	CLR	A14
	MOVW	A14,*A13(PDPLDMAG)
	MOVI	-2*MINTOMOVESEL,A14
	MOVW	A14,*A13(PDPLDMAG)
	MOVI	CARSELDATA,A2
	CALLR	MOVESELBOX ;IN:A2,A9,A10 SELDAT,INP,ATD

	;KILL THE PRESS START TEXT
	MOVW	*A13(PDPLDINP),A2	;TXTIDPL1 == 0
	MOVE	A10,A4
	CALLR	KILLTEXTID ;IN:A2,A4 ID,ATD

	;LAUNCH CHOOSE CAR TEXT
	MOVW	*A13(PDPLDINP),A3	
	MOVE	A3,A14			;TXTIDPL1 == 0
	SLL	5,A3			;SIZEOF ROLLXYTBL
	ADDI	ROLLXYTBL,A3
	MOVL	*A3,A3
	MOVI	CHOOSETEXT,A2
	MOVE	A10,A4
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 SLD,Y:X,ATD,ID

	JSRP	WAITSELBUTTONUP

SCPLOOP1

	;MOVE THE SELECTION BOX
	MOVI	CARSELDATA,A2
	CALLR	MOVESELBOX ;IN:A2,A9,A10 SELDAT,INP,ATD

	;WAIT FOR BUTTON TO BE PRESSED
	CALLR	GETSELBUTTON
	JRC	SCPCHOSEN

	SLEEP	1
	JRUC	SCPLOOP1

SCPCHOSEN
	;JSRP	WAITSELBUTTONUP

SCPX
	;SIGNAL CHOICE HAS BEEN MADE
	MOVW	*A10(ATDSTATE),A14
	DEC	A14
	MOVW	A14,*A10(ATDSTATE)

	MOVW	*A10(ATDSELNUM),A14
	INC	A14
	MOVW	A14,*A10(ATDSELNUM)

	;ADD TO CAR INIT TBL
	MOVL	*A10(ATDCIT),A2
	MOVK	1,A14
	MOVW	A14,*A2(CITCREDITS)
	;MOVW	*A13(PDPLDSEL),*A2(CITCAR)
	MOVW	*A13(PDPLDINP),*A2(CITCAR)
	MOVW	*A13(PDPLDINP),*A2(CITINP)

	;PREPARE FOR NEXT ENTRY
	ADDI	CITSIZE,A2
	MOVL	A2,*A10(ATDCIT)
	CLR	A14
	MOVW	A14,*A2(CITCREDITS)

	;KILL THE CURRENT TEXT
	MOVW	*A13(PDPLDINP),A2	;TXTIDPL1 == 0
	MOVE	A10,A4
	CALLR	KILLTEXTID ;IN:A2,A4 ID,ATD

	;LAUNCH TEXT
	MOVW	*A13(PDPLDINP),A3	
	MOVE	A3,A14			;TXTIDPL1 == 0
	SLL	5,A3			;SIZEOF ROLLXYTBL
	ADDI	ROLLXYTBL,A3
	MOVL	*A3,A3
	MOVI	READYTEXT,A2
	MOVE	A10,A4
	CALLR	ADDSELTEXT ;IN:A2,A3,A4,A14 SLD,Y:X,ATD,ID

	;TURN ON LIGHT
	MOVL	*A13(PDPLDLIGHT),A0
	MOVW	*A0(OCTRL),A14
	ORI	DMAGO,A14
	MOVW	A14,*A0(OCTRL)

	;SOME SOUND
	MOVW	*A13(PDPLDINP),A14
	ADDI	SNDCHOOSING1,A14
	CALLA	MAKESND ;IN:A14 SNDID

	;TRIGGER SOUND
	MOVW	*A13(PDPLDSEL),A14
	SLL	5,A14
	ADDI	PLAYERSELSNDTBL,A14
	.IF DEBUG
	CMPI	PLAYERSELSNDTBLX,A14
	TLOCKON	HS
	JRHS	SCPBADX
	.ENDIF ;DEBUG
	MOVL	*A14,A0
	CALLA	RANDOMA2
	MOVW	*A0+,A14
	AND	A14,A2
	SLL	4,A2			;SIZEOF PLSELXXXSND
	ADD	A2,A0
	MOVW	*A0,A14
	CALLA	MAKESND ;IN:A14 SNDID
	
SCPBADX
	DIE

PLAYERSELSNDTBL
	.LONG	PLSELGARTHSND
	.LONG	PLSELCHIPSND
	.LONG	PLSELDUDESND
	.LONG	PLSELFONZSND
PLAYERSELSNDTBLX

PLSELGARTHSND
	.WORD	03H		;COUNT MASK
	.WORD	SNDCHOOSEGARTH1,SNDCHOOSEGARTH2
	.WORD	SNDCHOOSEGARTH3,SNDCHOOSEGARTH4
PLSELCHIPSND
	.WORD	01H		;COUNT MASK
	.WORD	SNDCHOOSECHIP1,SNDCHOOSECHIP2
PLSELDUDESND
	.WORD	01H		;COUNT MASK
	.WORD	SNDCHOOSEDUDE1,SNDCHOOSEDUDE2
PLSELFONZSND
	.WORD	01H		;COUNT MASK
	.WORD	SNDCHOOSEFONZ1,SNDCHOOSEFONZ2
	

***
*** ----------------------------------------------------------------------
***

***
*** START GUN --------------------------------------------------------------
***


SGSND	EQU	20H
SGDELAY	EQU	30H

SGCOUNT
	.LONG	FIVE
	.WORD	0
	.WORD	40
	.LONG	FOUR
	.WORD	0
	.WORD	40
	.LONG	THREE
	.WORD	0
	.WORD	40
	.LONG	TWO
	.WORD	0
	.WORD	40
	.LONG	ONE
	.WORD	0
	.WORD	40
SGRSG
	.LONG	R_1
	.WORD	SNDKILLMISL1
	.WORD	40
	.LONG	S_2
	.WORD	SNDKILLMISL1
	.WORD	40
	.LONG	G_3
	.WORD	SNDKILLMISL1
	.WORD	10
       	.LONG	0
	.WORD	0
	.WORD	0

OBJINITSG
	.LONG	FIVE		;IMAGE
	.LONG	0		;COLLISION VECTOR
 	.WORD	OID_JUNK  	;OID
	.WORD	DMAWNZ		;OCTRL
	.WORD	0		;OFLAGS
	.WORD	STYPNONE	;OSCALTYP
 	.LONG	0		;CFUNC
	;
	.LONG	[100,200]	;Y:X

	.BSS	SGA,32
	.BSS	SGTIME,32

SGZOFF	EQU	200

**
** IN
**   A1 NEW IHDR
**   A8 OBJ
**
SGSWAPOBJ
	move	A1,*A8(OIMG),L
	move	*A1(ISIZE),A14,L	;ISIZE (offset 0)
	move	A14,*A8(OSIZE),L
	MOVE	A14,*A8(OUSIZE),L
	move	*A1(ISAG),*A8(OSAG),L
	MOVW	*A8(OCTRL),A2
	MOVE	*A1(ICTRL),A14
	ANDI	0807FH,A2
	OR	A2,A14	
	MOVW	A14,*A8(OCTRL)

	MOVE	*A1(IANIOFF),A14,L
	MOVE	A14,*A8(OANIOFF),L
	move	A14,*A8(OUANIOFF),L

	CLR	A14
	MOVW	A14,*A8(OSCALEMUL)
	RETS
	
	.BSS	SGPLBTN,16*3


**
** STARTGUN
**
STARTGUN
	
	CLR	A10
	MOVL	A10,@SGTIME
	
	MOVI	OBJINITSG,A5
	CALLA	CREATE_OBJ
	TLOCKON	Z
	MOVL	A0,@SGA
	MOVE	A0,A8

	MOVL	*A5+,A14
	MOVW 	A14,*A0(OXPOS)
	SRL	16,A14
	MOVI	SGZOFF,A2
	ADD	A2,A14
	MOVW	A14,*A0(OZPOS)
	NEG	A2
	MOVW	A2,*A0(OZOFF)

	CALLR	INSOBJ

	;SET OBJ
	MOVE	A10,A14
	SLL	6,A14
	ADDI	SGCOUNT,A14
	MOVL	*A14,A1
	CALLR	SGSWAPOBJ ;IN:A1,A8 IHDR,OBJ

	;CLEAR IT TO START WITH
	CLR	A1
	CLR	A2
SGILOOP
	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	*A3(INPB2),A1	;GET BUTTON
	
	MOVE	A2,A14
	SLL	4,A14
	ADDI	SGPLBTN,A14
	MOVW	A1,*A14		;SAVE BUTTON FOR US

	INC	A2
	CMPI	3,A2
	JRLT	SGILOOP

	MOVE	A10,A14
	SLL	6,A14
	ADDI	SGCOUNT,A14
	MOVW	*A14(SGDELAY),A9
	MOVW	*A14(SGSND),A14
	CALLA	MAKESND ;IN:A14 SND

	RETS


**
** STARTGUNSUB
**
** IN
**    A8 OBJ
**    A9 TIME FOR CHANGE
**   A10 DECADE COUNT
**   A11
**
** JFL 05 FEB 93
**
STARTGUNSUB

	MOVL	@SGTIME,A14	
	INC	A14
	MOVL	A14,@SGTIME

	;CLEAR IT TO START WITH
	CLR	A2
SGLOOP
	CALLA	GETPLAYERINPDATA ;IN:A2 PLNUM OUT:A2,A3 PLNUM,INPDATA
	MOVW	*A3(INPB2),A1	;GET BUTTON

	;LOOK UP BTN COUNT & WAIT FOR PLAYER TO PUSH IT DOWN
	MOVE	A2,A3
	SLL	4,A3
	ADDI	SGPLBTN,A3
	MOVW	*A3,A14		;GET OUR COPY OF BUTTON
	CMP	A14,A1
	JREQ	SGNEXTBTN      	;BTN HAS NOT CHANGED
	MOVW	A1,*A3		;SAVE NEW STATE
	SRL	1,A14		;CHECK IF BTN IS DOWN
	JRC	SGNEXTPL	;BUTTON IS DOWN

SGNEXTBTN
	;MOVE ONTO NEXT PLAYERS BUTTONS
	INC	A2
	CMPI	3,A2
	JRLT	SGLOOP
	JRUC	SGNEXT

SGNEXTPL			     
	;SPEED UP DUE TO BTN PRESS
	MOVL	@SGTIME,A14	
	JRUC	SGNFAST

SGNEXT
	;TIME TO CHANGE?
	MOVL	@SGTIME,A14	
	CMP	A9,A14
	JRLO	SGX

SGNFAST
	;SET UP FOR NEXT CHANGE
	MOVE	A14,A9

	MOVE	A10,A14
	SLL	6,A14
	ADDI	SGCOUNT,A14
	MOVW	*A14(SGDELAY),A2
	ADD	A2,A9


	;SET OBJ
	INC	A10
	MOVE	A10,A14
	SLL	6,A14
	ADDI	SGCOUNT,A14
	MOVL	*A14,A1
	JRZ	SGZAP
	CALLR	SGSWAPOBJ ;IN:A1,A8 IHDR,OBJ
	
	MOVE	A10,A14
	SLL	6,A14
	ADDI	SGCOUNT,A14
	MOVW	*A14(SGSND),A14
	CALLA	MAKESND ;IN:A14 SND

SGX
	;NOT DONE
	CLRC
	RETS
SGZAP
	;DONE


	MOVL	@SGA,A8
	CALLA	ZAP_OBJ
	SETC
	RETS

***
*** -----------------------------------------------------------------------
***

***
*** NOTES
***
*** ORDER OF CARS -- SEE DRP.I
***

**
** PROCESS PLD
**
PDPLDOBJ	EQU	PDATA+000H	;UHL OBJ
PDPLDSEL	EQU	PDATA+020H	;UHW CURRENT SELECTION POINT
PDPLDMAG	EQU	PDATA+030H	;SHW MAGNITUDE OF SPIN
PDPLDINP	EQU	PDATA+040H	;UHW WHO THIS IS
PDPLDLIGHT	EQU	PDATA+060H	;UHL HIGHLIGHT OBJ

PDSTRCTRL	EQU	PDATA+000H	;UHW
PDSTRCOUNT	EQU	PDATA+010H	;UHW
PDSTRLINK	EQU	PDATA+020H	;UHL
PDSTROBJ	EQU	PDATA+040H	;UHL
PDSTRID		EQU	PDATA+060H	;UHW

***
*** CAR SELECTION DATA
***

**
** SELECT DATA -- STRUCT
**
** JFL 16 NOV 92
**
SLDROLL		EQU	000H	;UHL
SLDTEXT1	EQU	020H	;UHL
SLDTEXT2	EQU	040H	;UHL
SLDSIZEXY	EQU	060H	;UHL
SLDLIGHTS	EQU	080H	;UHL
SLDCOUNT	EQU	0A0H	;UHW NUMBER OF SELECTION POSSIBILITIES
SLDSIZE		EQU	0C0H	; SIZE

**
** SELECT DATA
**
** JFL 16 NOV 92
**
CARSELDATA
	.LONG	CARSELROLL
	.LONG	CARSELTEXT
	.LONG	0
	.LONG	[LIGHTHEIGHT,LIGHTWIDTH]
	.LONG	CARSELLIGHTS
	.WORD	4

CARSELLIGHTS
	.LONG	FONT_A,[0,0],FIRSTLIGHT,0
	.LONG	0


**
** POSITIONS FOR PLAYER ROLL BOX
**
ROLLXYTBL
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*0]
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*1]
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*2]

**
** OFFSETS FROM ROLLXYTBL
**
LIGHTXYTBL
	.LONG	[LIGHTOFFY,LIGHTOFFX]
	.LONG	[LIGHTOFFY,LIGHTOFFX]
	.LONG	[LIGHTOFFY,LIGHTOFFX]
	
**
**
ROLANI		EQU	000H	;UHL
ROLOFF		EQU	020H	;UHL
ROLFUN		EQU	040H	;UHL
ROLXXX		EQU	060H	;UHL
ROLSIZE		EQU	080H	; SIZE

CARSELROLLLIST0
	;.LONG	ASSEMIPICK,[CAROFFY,CAROFFX],FIRSTROLL,0
	.LONG	ASSEMIDRIVER,[FACEOFFY+ROLLSPACEY,FACEOFFX+ROLLFACEOFFX],FIRSTROLL,0
	.LONG	0
CARSELROLLLIST1
	;.LONG	ASFOURPICK,[CAROFFY,CAROFFX],FIRSTROLL,0
	.LONG	ASFOURDRIVER,[FACEOFFY+ROLLSPACEY,FACEOFFX+ROLLFACEOFFX],FIRSTROLL,0
	.LONG	0
CARSELROLLLIST2
	;.LONG	ASCHEVPICK,[CAROFFY,CAROFFX],FIRSTROLL,0
	.LONG	ASCHEVDRIVER,[FACEOFFY+ROLLSPACEY,FACEOFFX+ROLLFACEOFFX],FIRSTROLL,0
	.LONG	0
CARSELROLLLIST3
	;.LONG	ASBMWPICK,[CAROFFY,CAROFFX],FIRSTROLL,0
	.LONG	ASBMWDRIVER,[FACEOFFY+ROLLSPACEY,FACEOFFX+ROLLFACEOFFX],FIRSTROLL,0
	.LONG	0

**
**
**
CARSELROLL
	.LONG	CARSELROLLLIST0
	.LONG	CARSELROLLLIST1
	.LONG	CARSELROLLLIST2
	.LONG	CARSELROLLLIST3

***
*** TITLE PAGE STUFF
***

TITLEANIMLIST
	.LONG	ASPRSTART,[PRSTARTOFFY,PRSTARTOFFX],0,0
	.LONG	0

***
*** GAME OVER TABLES
***

TROPHYANIMS
	.LONG	ASTROPHY,[TROPHY1OFFY,TROPHY1OFFX]
	.LONG	ASTROPHY,[TROPHY2OFFY,TROPHY2OFFX]
	.LONG	0

CARWINANIMS
	.LONG	ASSEMIPICK,[0,0],ASSEMIDRIVER,[0,0]
	.LONG	ASFOURPICK,[0,0],ASFOURDRIVER,[0,0]
	.LONG	ASCHEVPICK,[0,0],ASCHEVDRIVER,[0,0]
	.LONG	ASBMWPICK,[0,0],ASBMWDRIVER,[0,0]
	.LONG	ASSEMIPICK,[0,0],ASSEMIDRIVER,[0,0]
	.LONG	ASSEMIPICK,[0,0],ASSEMIDRIVER,[0,0]

WINNERANIMS
	.LONG	ASSEMIDRIVER,[WINNEROFFY,WINNEROFFX]
	.LONG	ASFOURDRIVER,[WINNEROFFY,WINNEROFFX]
	.LONG	ASCHEVDRIVER,[WINNEROFFY,WINNEROFFX]
	.LONG	ASBMWDRIVER,[WINNEROFFY,WINNEROFFX]
	.LONG	ASSEMIDRIVER,[WINNEROFFY,WINNEROFFX]
	.LONG	ASSEMIDRIVER,[WINNEROFFY,WINNEROFFX]
WINNERANIMSX


***
***
***

**
** 
**
STRPTR		EQU	000H		;UHL
STRTIMEON	EQU	020H		;UHW
STRTIMEOFF	EQU	030H		;UHW
STRXY		EQU	040H		;UHL
STRSIZE		EQU	060H		; SIZE


STRPICKCAR	
	.BYTE	"CHOOSE YOUR CAR",0
STRREADY
	.BYTE	"READY",0
STRFREE1
	.BYTE	"FREE",0
STRFREE2
	.BYTE	"PLAY",0
STRSTART1
	.BYTE	"PRESS",0
STRSTART2
	.BYTE	"START",0
STRCHOOSE1
	.BYTE	"CHOOSE",0
STRCHOOSE2
	.BYTE	"DRIVER",0
STRSET	
	.BYTE	"SET",0
STRGO
	.BYTE	"GO",0

	.EVEN

CARSELTEXT
	.LONG	STRPICKCAR
	.WORD	20,20
	.LONG	[0,0]
	.LONG	0

READYTEXT
	.LONG	STRREADY
	.WORD	0,0
	.LONG	[FONTHEIGHT*0+READYTXTY,READYTXTX]
	.LONG	0
	

FREEPLAYTEXT
	.LONG	STRFREE1
	.WORD	20,20
	.LONG	[FONTHEIGHT*0+FREETXTY,FREETXTX]
	.LONG	STRFREE2
	.WORD	20,20
	.LONG	[FONTHEIGHT*1+FREETXTY,FREETXTX]
	.LONG	STRSTART1
	.WORD	20,20
	.LONG	[FREETXT2Y+FONTHEIGHT*0,FREETXTX]
	.LONG	STRSTART2
	.WORD	20,20
	.LONG	[FREETXT2Y+FONTHEIGHT*1,FREETXTX]
	.LONG	0
	
CHOOSETEXT
	.LONG	STRCHOOSE1
	.WORD	20,20
	.LONG	[CHOOSETXTY+FONTHEIGHT*0,CHOOSETXTX]
	.LONG	STRCHOOSE2
	.WORD	20,20
	.LONG	[CHOOSETXTY+FONTHEIGHT*1,CHOOSETXTX+CHOOSETXT2X]
	.LONG	0

SETTEXT
	.LONG	STRSET
	.WORD	20,10
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*0]
	.LONG	STRSET
	.WORD	20,10
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*1]
	.LONG	STRSET
	.WORD	20,10
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*2]
	.LONG	0

GOTEXT
	.LONG	STRGO
	.WORD	0,0
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*0]
	.LONG	STRGO
	.WORD	0,0
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*1]
	.LONG	STRGO
	.WORD	0,0
	.LONG	[ROLLY,ROLLX+ROLLSPACEX*2]
	.LONG	0

***
*** GENERAL STUFF
***

LIGHTPALCONSTTBL
	.LONG	[SPALRED+SPALRED*256,SPAL+SPAL*256]
	.LONG	[SPALRED+SPALRED*256,SPAL+SPAL*256]
	.LONG	[SPALRED+SPALRED*256,SPAL+SPAL*256]

PLAYERIDTBL
	.LONG	FONT_A
	.LONG	FONT_A
	.LONG	FONT_A

SELFONTTBL
	.LONG	FONT_A
	.LONG	FONT_B
	.LONG	FONT_C
	.LONG	FONT_D
	.LONG	FONT_E
	.LONG	FONT_F
	.LONG	FONT_G
	.LONG	FONT_H
	.LONG	FONT_I
	.LONG	FONT_J
	.LONG	FONT_K
	.LONG	FONT_L
	.LONG	FONT_M
	.LONG	FONT_N
	.LONG	FONT_O
	.LONG	FONT_P
	.LONG	FONT_Q
	.LONG	FONT_R
	.LONG	FONT_S
	.LONG	FONT_T
	.LONG	FONT_U
	.LONG	FONT_V
	.LONG	FONT_W
	.LONG	FONT_X
	.LONG	FONT_Y
	.LONG	FONT_Z
SELFONTTBLX


**
** OBJATTBLANK
**
** JFL 06 OCT 92
**
OBJATTBLANK
	.LONG	0		;IMAGE
	.LONG	0		;COLLISION VECTOR
 	.WORD	OID_JUNK  	;OID
	.WORD	DMAWNZ		;OCTRL
	.WORD	M_NOAUTOZ	;OFLAGS
	.WORD	STYPNONE	;OSCALETYPE
 	.LONG	0		;CFUNC

**
** OFFSETS
**

ROLLX		EQU	18
ROLLY		EQU	23

LIGHTWIDTH 	EQU	109
LIGHTHEIGHT	EQU	217
LIGHTOFFX  	EQU	0
LIGHTOFFY  	EQU	0

ROLLSPACEX	EQU	128
ROLLSPACEY	EQU	140
ROLLFACEOFFX	EQU	0

CAROFFX		EQU	60
CAROFFY		EQU	30
FACEOFFX	EQU	2
FACEOFFY	EQU	74

FONTHEIGHT	EQU	16
FONTNEXTX	EQU	10
FONTSPACEX	EQU	12
FONTNEXTOFFXY	EQU	[0,FONTNEXTX]
FONTSPACEOFFXY	EQU	[0,FONTSPACEX]

GETREADYXY	EQU	[100,100]

FREETXTX	EQU	35
FREETXTY	EQU	25
FREETXT2Y	EQU	140
CHOOSETXTX	EQU	25
CHOOSETXT2X	EQU	0
CHOOSETXTY	EQU	82
READYTXTX	EQU	35
READYTXTY	EQU	90
SETTXTX		EQU	38
SETTXTY		EQU	90
GOTXTX		EQU	42
GOTXTY		EQU	90
PRSTARTOFFX	EQU	134
PRSTARTOFFY	EQU	220

TROPHY1OFFX	EQU	70
TROPHY1OFFY	EQU	140
TROPHY2OFFX	EQU	320
TROPHY2OFFY	EQU	140

WINNEROFFX	EQU	134+4
WINNEROFFY	EQU	100+113

	.END


* EOF
