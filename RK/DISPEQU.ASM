***
*** FILE: DISPEQU.ASM
***
*** JFL 14 JUL 92; FROM DREDD; MODS BEGIN
*** JFL 15 JUL 92; SCALE1TO1
*** JFL 21 JUL 92
*** JFL 23 JUL 92
*** JFL 24 JUL 92
*** JFL 28 JUL 92;ABSXYZMINMAX
*** JFL 03 AUG 92
*** JFL 04 AUG 92
*** JFL 05 AUG 92; OSCALEINV
*** JFL 12 AUG 92; M_HIT
*** JFL 18 AUG 92; OBJECTYBASE
*** JFL 09 SEP 92; OSTATE
*** JFL 14 SEP 92; M_GRAVITY
*** JFL 01 OCT 92; OBJ BLOCK REORDERED -- DMA PULL STUFF IN FRONT
*** JFL 08 OCT 92; OFLAGS REORDERED, M_PLANE
*** JFL 30 OCT 92; OSCALETYPE
*** JFL 10 JAN 93; OGCOLLINK
*** JFL 20 MAR 93; OFLASHPALORG
*** JFL 26 MAR 93
*** JFL 13 APR 93; OSCDAG
*** JFL 14 APR 93; OMDIRADJ
***

**************************************************************************
*								         *
* 	         AMUSEMENT PARK - DISPLAY EQUATE FILE			 *
* 									 *
* 	COPYRIGHT (C) 1992 MIDWAY MANUFACTURING COMPANY.		 *
* 		       ALL RIGHTS RESERVED.				 *
*								         *
*************************************************************************

SCALE1TO1HALF	EQU	100H
SCALE1TO1	EQU	[100H,100H]

SCRTOP	EQU	0		;set to line after static top area
SCRBOT	EQU	255
SCRLFT	EQU	0
SCRRGT	EQU	399

*VARS
	.GLOBL	WALK_SCRIPT
	.GLOBL	SCRIPT_TAB
	.GLOBL	SCRIPT_X
	.GLOBL	SCRIPT_DIFF
	.GLOBL	SCRIPT_DIFF2
	.GLOBL	WALK1
	.GLOBL	FGLISTS
	.GLOBL BGLISTS
	.GLOBL ANIOBJS
	.GLOBL ANIFUNCS
	.GLOBL	BGPLANECT
	.GLOBL FGPLANECT
	.GLOBL	SCROLLX
	.GLOBL SCROLLY
	.GLOBL SCRNTL
	.GLOBL SCRNLR
	.GLOBL	DISPLAYON
	.GLOBAL	UNIVXMIN
	.GLOBL UNIVXMAX
	.GLOBL WORLDX
	.GLOBL WORLDY
	.GLOBL WORLDXY
	.GLOBAL	SUPPLSTS
	.GLOBL SUPPLSTSX
	.GLOBL DMARESTARTS

*FUNCS ******* UPDATE DISP.DOC WITH NEW FUNCTIONS !!!!!! ********************
	.GLOBL DO_TRANS
	.GLOBL DMAINT
	.GLOBL CLRDMAQ
	.GLOBL ANI
	.GLOBL GSAGOF
	.GLOBL DISPLAY
	.GLOBL QDMAN
	.GLOBL QDMAN2
	.GLOBL YZSORT
	.GLOBL SetPlaneXPos
	.GLOBL SetPlaneYPos
	.GLOBL GET_P_XPOS
	.GLOBL GET_P_YPOS
	.GLOBL OINIT
	.GLOBL GETOBJ
	.GLOBL INSPLANE
	.GLOBL INSERT_OBJ
	.GLOBL INSOBJ
	.GLOBL DELETE_OBJ
	.GLOBL ZAP_OBJ
	.GLOBL ZAPOBJ
	.GLOBL FPSTFOBJ0
	.GLOBL STFOBJ0
	.GLOBL CREATE_OBJ
	.GLOBL GETANIXY
	.GLOBL GETANIX
	.GLOBL SET_ANIP
	.GLOBL GANIOF
	.GLOBL STRT_ANIM
	.GLOBL COPY_OBJ
	.GLOBAL	STORE_ZVAL
	.GLOBL KILOBJ
	.GLOBL KILOBJ_ALL
	.GLOBL OBJTOPNT
	.GLOBL GET_SCRNREL
	.GLOBL GETAFARG_LONG
	.GLOBL DIST_FROM_PLANE
	.GLOBL PNT_WORLDREL
	.GLOBL CHANGEOID
	.GLOBAL	STOREZVAL


***CONSTANTS
MAXPLANES EQU	15


*EQUATES FOR SCORE AREA
SKYTOPOF 	.EQU	22
SCORDPYS 	.EQU	0FFFFFEDCH	;DPYSTRT VALUE FOR HIDING THE SCORE
SCORE_HEIGHT	.EQU	SKYTOPOF	;HEIGHT OF SCORE AREA

SCRNST	EQU	[0,0]		;TOP LEFT OF SCREEN
SCRNEND EQU	[SCRBOT+1,SCRRGT+1] ;BOT RIGHT OF SCREEN (for SCRNLR, clipper)
SCRWIDTH EQU	SCRRGT-SCRLFT+1
SCRHGHT	EQU	SCRBOT-SCRTOP+1
SCRNMID	EQU	[(SCRBOT+SCRTOP+1)/2,(SCRRGT+SCRLFT+1)/2] ;MIDPOINT OF SCREEN

*
*NEW OBJECT BLOCK INITIALIZATION TABLE
NEWIIMG	 .EQU	0
NEWICVEC .EQU	20H
NEWIOID	 .EQU	40H
NEWIFLAG .EQU	50H
NEWIFLAG2 .EQU	60H
NEWICFUNC .EQU	70H

SHADID	.EQU	00FFFH		;SHADOWS ARE HIGH PRI

;* PLANE TABLE STRUCT
*STRUCT PLANE
P_LSTHD	EQU	000H  	;UHL ptr to head of OBJECT LIST
P_LSTTL	EQU	020H	;UHL ptr to tail of OBJECT LIST
P_SORT	EQU	040H	;UHL SORT LIST
P_XPOS	EQU	060H	;UHL World Top Left X of OBJECT LIST
P_YPOS	EQU	080H	;UHL World Top Left Y
P_XYOFF	EQU	0A0H	;UHL Y:X integer temporary offset for shaking
P_XRATE	EQU	0C0H	;UHL SCROLLX multiplier for plane
P_YRATE	EQU	0E0H	;UHL SCROLLY multiplier for plane
P_FLAGS	EQU	100H	;UHW Flag bits for plane
*ENDSTRUCT
PLNSIZ	EQU	110H	;size of PLANE STRUCTURE

P_M_NOSHAKE	EQU	1	;NO SHAKE THIS PLANE..
P_B_NOSHAKE	EQU	0

;**** LSTHD, LSTTL offsets above must match OLINK, OBLINK offset of OBJ ****

;*OBJECT BLOCK LAYOUT
*STRUCT	OBJ
OLINK	  EQU	0000H   ;UHL Link to next object block
OBLINK	  EQU	0020H	;UHL Back Link to previous obj
OSORTLINK EQU	0040H	;UHL SORT LINK
K1	  EQU	0060H	; OFFSET
;
;PULL STARTS -- CLIPLOOP
OFSET	  EQU	K1+000H ;UHW PRECOMPUTED OFFSET
OCTRL	  EQU	K1+010H	;UHW CONTROL WORD
OSAG	  EQU	K1+020H	;UHL SOURCE ADDRESS (UNCLIPPED, ADJUSTED FOR FLIPS)
ODAG	  EQU	K1+040H	;UHL Screen Pos
OUSIZE	  EQU	K1+060H ;UHL UNSCALED SIZE
OPAL	  EQU	K1+080H ;UHW B(0-15) PALETTE; B(16-31) CONSTANT COLOR
OCONST	  EQU	K1+090H ;UHW CONSTANT COLOR
OSCALEDMA EQU	K1+0A0H ;UHL DMA #2 SCALE
OSIZE	  EQU	K1+0C0H ;UHL SCALED SIZE OF OBJECT -- USED FOR DMAPULLX TOO
K2	  EQU   K1+0E0H ; OFFSET
;PULL END
;
OSLINK	  EQU	K2+000H ;UHL Supplemental lists (OID class)
OVLINK    EQU	K2+020H ;UHL VEL ADD LINK
OPLINK	  EQU	K2+040H ;UHL Link to controlling process
OCVECT	  EQU	K2+060H ;UHL vector to collision table
OPART1	  EQU	K2+080H ;UHL PTR TO HEAD OF MULTI-PART OBJ
OPARTS	  EQU	K2+0A0H ;UHL LINK TO NEXT PART OF MULT-PART OBJ
OSHAD	  EQU	K2+0C0H ;UHL DMA TYPE SHADOW OBJ/PARENT OBJ
OSHADIMG  EQU	K2+0E0H ;UHL MULTIPART TYPE SHADOW OBJ
K3	  EQU	K2+100H ; OFFSET
;
;PULL START -- VELADD
OFLAGS	  EQU	K3+000H ;UHW FLAGS 
OID	  EQU	K3+010H ;UHW OBJ ID
OYACC	  EQU	K3+020H ;SHL Y ACCEL
OXVEL	  EQU	K3+040H ;SHL Z VELOCITY 16.16
OYVEL	  EQU	K3+060H ;SHL
OZVEL	  EQU	K3+080H ;SHL
OXVAL	  EQU	K3+0A0H ;SHL; UNDOPULL START
OYVAL	  EQU	K3+0C0H ;SHL
OZVAL	  EQU	K3+0E0H ;SHL
K4	  EQU	K3+100H ; OFFSET
; PULL END
;
OGCOL	  EQU	K4+000H ;UHL GROUND COLLISION VECTOR
OGCOLLINK EQU	K4+020H ;UHL LINK TO NEXT GCOL OBJ
OUANIOFF  EQU	K4+040H ;UHL UNSCALED ANIMATION OFFSET
OANIOFF	  EQU	K4+060H ;UHL ADJUSTED ANIMATION OFFSET
OIMG	  EQU	K4+080H ;UHL Pointer to image data table
OIMGTBL	  EQU	K4+0A0H ;UHL IMAGE TABLE FOR DIRECTION
OPARTSXY  EQU	K4+0C0H ;UHL multi part position offset
OZOFF	  EQU	K4+0E0H ;SHW OZOFF; UNDOPULL END
ODIR	  EQU	K4+0F0H ;UHW DIRECTION 00..FF; OUNDOPULL END
OPARTID   EQU	K4+100H ;UHW MULTI-PART OBJ PART NUMBER
OSCALEMUL EQU	K4+110H ;UHW INVERSE OF SCALE; 12 BITS MAX (APC.ASM)
OSCALETYPE EQU	K4+120H ;UHW TYPE OF SCALING
OIHOFF	  EQU	K4+130H ;UHW OFFSET TO IMAGE HEADER	; WBDNEW
OPLANE	  EQU	K4+140H ;UHW PLANE (LOWER BYTE USED)
OSTATE	  EQU	K4+150H ;UHW IMAGE STATE
OTBLOFF   EQU	K4+160H ;UHW IMAGE TABLE OFFSET (FOR UPDATING)
OGROW	  EQU	K4+170H ;UHW GROW COUNT
OSAVE1	  EQU	K4+180H ;UHL SAVE
OSAVE2	  EQU	K4+1A0H ;UHL SAVE
OSCALEMIN EQU	K4+1C0H ;UHL DMA:MUL
K5	  EQU	K4+1E0H ; OFFSET
;
;
OVAR1	  EQU	K5+000H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR2	  EQU	K5+020H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR3	  EQU	K5+040H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR4	  EQU	K5+060H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR5	  EQU	K5+080H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR6	  EQU	K5+0A0H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR7	  EQU	K5+0C0H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR8	  EQU	K5+0E0H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
OVAR9	  EQU	K5+100H ;UHL (NEVER USE OVAR LABEL DIRECTLY -- DEFINE BELOW)
ODATA     EQU	K5+120H ;SCRATCH SPACE FOR USER ROUTINES
ODATAX	  EQU	K5+160H ;NEXT SPACE IMMEDIATELY AFTER DATA AREA
*ENDSTRUCT
OBSIZ	EQU   	K5+160H ;Object Block Size
OCLRSIZ EQU	ODATAX	;GETOBJ WILL CLEAR UPTO AND NOT INCLUDING HERE
NOBJ	EQU   	400	;OBJECTS IN SYSTEM

******************************************************************

**
** AKA
**
OXPOS	EQU	OXVAL+10H
OYPOS	EQU	OYVAL+10H
OZPOS	EQU	OZVAL+10H
OANIOFFX EQU	OANIOFF     ; X ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OANIOFFY EQU	OANIOFF+10H ; Y ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OUSIZEX	EQU	OUSIZE		; X-SIZE
OUSIZEY	EQU	OUSIZE+10H	; Y-SIZE
OSIZEX	EQU	OSIZE		; X SIZE
OSIZEY	EQU	OSIZE+10H	; Y SIZE
OSCALEX	EQU	OSCALEDMA	; X-SCALE
OSCALEY	EQU	OSCALEDMA+10H	; Y-SCALE
OUANIOFFX EQU	OUANIOFF     ; X ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OUANIOFFY EQU	OUANIOFF+10H ; Y ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
ODMAPULL  EQU	OFSET
ODMAPULLX EQU	OSIZE+20H
OPLANEPTR EQU	OPLINK

**
** ODATA -- CAR
**
OCAR	EQU	ODATA		;UHL CAR DATA

**
** ODATA -- CAR MULTI-PART
**
OMDATA	EQU	ODATA		;UHL
OMDIRADJ EQU	ODATA+20H	;UHW

**
** ODATA -- MISSILE OBJ
**
OMISHIT	  EQU	ODATA		;UHL OBJ MISSILE HIT
OMISAREA  EQU	ODATA+20H	;UHW AREA ON CAR MISL HIT
OMISOID	  EQU	ODATA+30H	;UHW OID OF CAR HIT

**
** ODATA -- LAND MINE
**
OLMINEMOM	EQU	ODATA		;UHL OBJ 

**
** ODATA -- ICON
**
OICONOID	EQU	ODATA		;UHW OID OF WHO GOT THIS
OICONVAL16	EQU	ODATA+10H	;UHW MISC DATA
OICONVAL32 	EQU	ODATA+20H	;UHL MISC DATA

**
** ODATA -- ARENA OBJECT AOL
**
OAOLVAL16	EQU	OICONVAL16	;UHW MISC DATA
OAOLVAL32 	EQU	OICONVAL32	;UHL MISC DATA

**
** ODATA -- DEATH BOOM
**
ODEATHID	EQU	ODATA		;UHW ID OF WHO TO THROW

**
** ODATA -- SCORE OBJECTS
**
OSCDAG		EQU	ODATA		;UHL ORG DAG OF OBJ

**
** OSAVE -- CAR
**
OFLASHPALORG	EQU	OSAVE1

**
** OVAR UNIONS
**
** OVAR1  ANIMNXT
** OVAR2  ANIMFRM
** OVAR3  ANIMSCR
** OVAR4  ANIMSLPA,ANIMSLPB
** OVAR5  ANIMARG
** OVAR6  ANIMIRQ
** OVAR7  OBOUNCEYVEL,OFLYDESTXY,OFLYHEIGHT
** OVAR8  OBOUNCEYACC,OFLYDIST
** OVAR9  ODANIMLINK,OAOL,OWORDPASS,OMOM
**
** JFL 15 SEP 92
** JFL 01 OCT 92
** JFL 02 DEC 92
** JFL 10 FEB 93
**
OWORDPASS EQU	OVAR9+10H ;UHW PASS A WORD FROM ONE ROUTINE TO ANOTHER

*STRUCT	ANIM+OBJ
ANIMNXT EQU	OVAR1	;UHL  LINK TO NEXT OBJ OF ANIMY LINKED LIST
ANIMFRM EQU	OVAR2	;UHL  PTR TO CURRENT ANIMATION FRAME
ANIMSCR EQU	OVAR3	;UHL  PTR TO ANIMATION SCRIPT
ANIMSLPA EQU	OVAR4	;UHW  RESET VALUE FOR ANIMSLP
ANIMSLPB EQU	OVAR4+10H ;UHW  # TIKS BEFORE NEXT ANI
*ENDSTRUCT

ANIMARG EQU	OVAR5	;STUFFED BY ANIMP FOR USE BY GETAFARG_XXXX

OBOUNCEYVEL EQU	OVAR7	;UHL LAST Y VEL, USED FOR BOUNCING OBJECTS
OBOUNCEYACC EQU	OVAR8	;UHL LAST Y ACC, USED FOR BOUNCING OBJECTS

ODANIMLINK EQU	OVAR9	;UHL DIRECTIONAL ANIMATIONS ON THIS OBJ
OAOL	EQU	OVAR9	;UHL ARENA OBJ INIT REC
OFLYDESTXY EQU	OVAR7	;UHL FOR SENDING ICONS TO SCORE BOX
OFLYDIST EQU	OVAR8	;UHL FOR SENDING ICONS TO SCORE BOX

OFLYBITS EQU	OVAR7	;UHW FOR ANIFLYLANDKILL 
ANIMIRQ EQU	OVAR6	;UHL WHEN ANIM WAS IN STALLED

********************************************************************

**
** OSCALETYPE TYPES
**
** JFL 30 OCT 92
**
STYPNONE	EQU	0		;NO SCALING
STYPZ		EQU	1		;Z SCALING
STYPGROWMAX	EQU	2		;SCALE FROM SMALL TO MAX
STYPGROW1TO1	EQU	3		;SCALE FROM SMALL TO 1TO1
STYPYZ		EQU	4		;YZ SCALING
STYPZMIN	EQU	5		;Z SCALING WITH MIN SCALE CHECK
STYPZOFF	EQU	8000H		;Z OFFSET

BQCELL	EQU	0C0H	;SIZE OF DMA QUEUE ELEMENT

;wfd
***********************
*  Values for OCTRL   *
***********************
M_WRZERO 	EQU  00001H	;Write Zero Data
M_WRNONZ 	EQU  00002H	;Write Non-Zero Data
M_CONZER 	EQU  00004H	;Replace Zero Data with constant
M_CONNON 	EQU  00008H	;Replace Non-Zero Data with constant
M_CONST		EQU  0000CH	;any constant data replacement
M_FLIPH		EQU  00010H	;Flip Horizontally
M_FLIPV		EQU  00020H	;Flip Vertically
M_LRCLIP	EQU  00040H
M_COMPRESS	EQU  00080H
M_INUSE		EQU  08000H	;obj not on free list

*BIT POSITIONS FOR OCTRL
B_WRZERO	EQU   	0
B_WRNONZ	EQU   	1
B_CONZER	EQU   	2
B_CONNON	EQU   	3
B_FLIPH		EQU  	4
B_FLIPV		EQU  	5
B_LRCLIP	EQU	6
B_COMPRESS	EQU	7
B_INUSE		EQU	15

***********************
*  Values for OFLAGS  *
***********************
M_XXX1		EQU  00001H	;
M_XXX2		EQU  00002H	;
M_NOPARTANI	EQU  00004H	;IF IN MULTI-SCRIPT, THEN DON'T ANIMATE
M_NOAUTOZ	EQU  00008H	;don't auto plane change on Z 
M_ANIMSHAD 	EQU  00010H	;ANIM CHANGES OSHADIMG SHADOWS -- FGOBJS ONLY
M_NOTFG	 	EQU  00020H	;
M_FLASHING 	EQU  00040H	;OBJ IS FLASHING
M_XXX4		EQU  00080H	;
M_SETPALCONST	EQU  00100H	;SET PAL&CONST
M_HIT	 	EQU  00200H	;SCALE VELOCITIES
M_NOCOLL	EQU  00400H	;Don't do regular collisions...
M_ANIM		EQU  00800H	;set if on ANIFLY list
M_NOSCROLL	EQU  01000H	;don't adjust to world coors..
M_XXX7		EQU  08000H	;

B_XXX1		EQU  0
B_XXX2		EQU  1
B_NOPARTANI	EQU  2
B_NOAUTOZ	EQU  3
B_ANIMSHAD 	EQU  4
B_NOTFG	 	EQU  5
B_FLASHING 	EQU  6
B_XXX4		EQU  7
B_SETPALCONST	EQU  8
B_HIT	 	EQU  9
B_NOCOLL	EQU  10
B_ANIM		EQU  11
B_NOSCROLL	EQU  12
B_XXX7		EQU  13

* AKA
M_BNODEL	EQU  M_NOAUTOZ	;do not pull BGND from list
B_BNODEL	EQU  B_NOAUTOZ
B_MASTER	EQU  B_NOAUTOZ
B_NOWORLD	EQU  B_NOSCROLL


* EOF
